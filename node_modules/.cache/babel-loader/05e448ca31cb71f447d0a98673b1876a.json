{"ast":null,"code":"import * as React from 'react';\nimport { createContext } from 'react';\n/**\n * Context to store a record.\n *\n * @see RecordContextProvider\n * @see useRecordContext\n */\n\nexport var RecordContext = createContext(undefined);\nRecordContext.displayName = 'RecordContext';\n/**\n * Provider for the Record Context, to store a record.\n *\n * Use the useRecordContext() hook to read the context.\n * That's what the Edit and Show components do in react-admin.\n *\n * Many react-admin components read the RecordContext, including all Field\n * components.\n *\n * @example\n *\n * import { useGetOne, RecordContextProvider } from 'ra-core';\n *\n * const Show = ({ resource, id }) => {\n *     const { data } = useGetOne(resource, { id });\n *     return (\n *         <RecordContextProvider value={data}>\n *             ...\n *         </RecordContextProvider>\n *     );\n * };\n */\n\nexport var RecordContextProvider = function (_a) {\n  var children = _a.children,\n      value = _a.value;\n  return React.createElement(RecordContext.Provider, {\n    value: value\n  }, children);\n};","map":{"version":3,"names":["React","createContext","RecordContext","undefined","displayName","RecordContextProvider","_a","children","value","createElement","Provider"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/controller/record/RecordContext.js"],"sourcesContent":["import * as React from 'react';\nimport { createContext } from 'react';\n/**\n * Context to store a record.\n *\n * @see RecordContextProvider\n * @see useRecordContext\n */\nexport var RecordContext = createContext(undefined);\nRecordContext.displayName = 'RecordContext';\n/**\n * Provider for the Record Context, to store a record.\n *\n * Use the useRecordContext() hook to read the context.\n * That's what the Edit and Show components do in react-admin.\n *\n * Many react-admin components read the RecordContext, including all Field\n * components.\n *\n * @example\n *\n * import { useGetOne, RecordContextProvider } from 'ra-core';\n *\n * const Show = ({ resource, id }) => {\n *     const { data } = useGetOne(resource, { id });\n *     return (\n *         <RecordContextProvider value={data}>\n *             ...\n *         </RecordContextProvider>\n *     );\n * };\n */\nexport var RecordContextProvider = function (_a) {\n    var children = _a.children, value = _a.value;\n    return (React.createElement(RecordContext.Provider, { value: value }, children));\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,aAAa,GAAGD,aAAa,CAACE,SAAD,CAAjC;AACPD,aAAa,CAACE,WAAd,GAA4B,eAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,qBAAqB,GAAG,UAAUC,EAAV,EAAc;EAC7C,IAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAlB;EAAA,IAA4BC,KAAK,GAAGF,EAAE,CAACE,KAAvC;EACA,OAAQR,KAAK,CAACS,aAAN,CAAoBP,aAAa,CAACQ,QAAlC,EAA4C;IAAEF,KAAK,EAAEA;EAAT,CAA5C,EAA8DD,QAA9D,CAAR;AACH,CAHM"},"metadata":{},"sourceType":"module"}