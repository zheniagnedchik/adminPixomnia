{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Accordion, AccordionDetails, AccordionSummary, Typography } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { FormGroupContextProvider, useFormGroup, useTranslate } from 'react-admin';\nimport { useFormState } from 'react-hook-form';\n/**\n * Renders children (Inputs) inside a MUI <Accordion> element.\n *\n * To be used as child of an <AccordionForm> element.\n *\n * @param {string} label The main label used as the accordion summary. Appears in red when the accordion has errors\n * @param {string} secondary Optional. The secondary label used as the accordion summary\n * @param {boolean} defaultExpanded Optional. Set to true to have the accordion expanded by default (except if autoClose = true on the parent)\n * @param {boolean} disabled Optional. If true, the accordion will be displayed in a disabled state.\n * @param {boolean} square Optional. If true, rounded corners are disabled.\n *\n * @example\n *\n * import { Edit, TextField, TextInput, DateInput, SelectInput, ArrayInput, SimpleFormIterator, BooleanInput } from 'react-admin';\n * import { AccordionForm, AccordionFormPanel } from '@react-admin/ra-form-layout';\n *\n * // don't forget the component=\"div\" prop on the main component to disable the main Card\n * const CustomerEdit = () => (\n *     <Edit component=\"div\">\n *         <AccordionForm>\n *             <AccordionFormPanel label=\"Identity\" defaultExpanded>\n *                 <TextField source=\"id\" />\n *                 <TextInput source=\"first_name\" validate={required()} />\n *                 <TextInput source=\"last_name\" validate={required()} />\n *                 <DateInput source=\"dob\" label=\"born\" validate={required()} />\n *                 <SelectInput source=\"sex\" choices={sexChoices} />\n *             </AccordionFormPanel>\n *             <AccordionFormPanel label=\"Occupations\">\n *                 <ArrayInput source=\"occupations\" label=\"\">\n *                     <SimpleFormIterator>\n *                         <TextInput source=\"name\" validate={required()} />\n *                         <DateInput source=\"from\" validate={required()} />\n *                         <DateInput source=\"to\" />\n *                     </SimpleFormIterator>\n *                 </ArrayInput>\n *             </AccordionFormPanel>\n *             <AccordionFormPanel label=\"Preferences\">\n *                 <SelectInput\n *                     source=\"language\"\n *                     choices={languageChoices}\n *                     defaultValue=\"en\"\n *                 />\n *                 <BooleanInput source=\"dark_theme\" />\n *                 <BooleanInput source=\"accepts_emails_from_partners\" />\n *             </AccordionFormPanel>\n *         </AccordionForm>\n *     </Edit>\n * );\n */\n\nexport var AccordionFormPanel = function (props) {\n  return React.createElement(FormGroupContextProvider, {\n    name: props.label\n  }, React.createElement(AccordionFormPanelView, __assign({}, props)));\n};\n\nvar AccordionFormPanelView = function (props) {\n  var children = props.children,\n      _a = props.defaultExpanded,\n      defaultExpanded = _a === void 0 ? false : _a,\n      _b = props.disabled,\n      disabled = _b === void 0 ? false : _b,\n      label = props.label,\n      secondary = props.secondary,\n      square = props.square,\n      // injected by the parent\n  _c = props.autoClose,\n      // injected by the parent\n  autoClose = _c === void 0 ? false : _c,\n      onChange = props.onChange,\n      expanded = props.expanded;\n\n  var _d = useState(defaultExpanded),\n      innerExpanded = _d[0],\n      setExpanded = _d[1];\n\n  var handleChange = function () {\n    setExpanded(function (expanded) {\n      return !expanded;\n    });\n  };\n\n  var accordionParams = autoClose ? {\n    expanded: expanded,\n    onChange: onChange\n  } : {\n    expanded: innerExpanded,\n    onChange: handleChange\n  };\n  var translate = useTranslate();\n  var formGroup = useFormGroup(label);\n  var isSubmitted = useFormState().isSubmitted;\n  var hasErrors = !formGroup.isValid && (formGroup.isTouched || isSubmitted);\n  return React.createElement(StyledAccordion, __assign({}, accordionParams, {\n    disabled: disabled,\n    square: square\n  }), React.createElement(AccordionSummary, {\n    expandIcon: React.createElement(ExpandMoreIcon, null),\n    \"aria-controls\": \"panel-\" + label + \"-content\",\n    id: \"panel-\" + label + \"-header\"\n  }, React.createElement(Typography, {\n    color: hasErrors ? 'error' : 'text.primary',\n    className: AccordionFormPanelClasses.heading\n  }, translate(label, {\n    _: label\n  })), React.createElement(Typography, {\n    className: AccordionFormPanelClasses.secondaryHeading\n  }, secondary && translate(secondary, {\n    _: secondary\n  }))), React.createElement(AccordionDetails, {\n    className: AccordionFormPanelClasses.detail\n  }, children));\n};\n\nvar PREFIX = 'RaAccordionFormPanel';\nexport var AccordionFormPanelClasses = {\n  heading: PREFIX + \"-heading\",\n  secondaryHeading: PREFIX + \"-secondaryHeading\",\n  detail: PREFIX + \"-detail\"\n};\nvar StyledAccordion = styled(Accordion, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\" + AccordionFormPanelClasses.heading] = {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0\n  }, _b[\"& .\" + AccordionFormPanelClasses.secondaryHeading] = {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary\n  }, _b[\"& .\" + AccordionFormPanelClasses.detail] = {\n    alignItems: 'flex-start',\n    display: 'flex',\n    flexDirection: 'column'\n  }, _b;\n});","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useState","Accordion","AccordionDetails","AccordionSummary","Typography","styled","ExpandMoreIcon","FormGroupContextProvider","useFormGroup","useTranslate","useFormState","AccordionFormPanel","props","createElement","name","label","AccordionFormPanelView","children","_a","defaultExpanded","_b","disabled","secondary","square","_c","autoClose","onChange","expanded","_d","innerExpanded","setExpanded","handleChange","accordionParams","translate","formGroup","isSubmitted","hasErrors","isValid","isTouched","StyledAccordion","expandIcon","id","color","className","AccordionFormPanelClasses","heading","_","secondaryHeading","detail","PREFIX","overridesResolver","styles","root","theme","fontSize","typography","pxToRem","flexBasis","flexShrink","palette","text","alignItems","display","flexDirection"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@react-admin/ra-form-layout/esm/src/forms/accordion-form/AccordionFormPanel.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Accordion, AccordionDetails, AccordionSummary, Typography, } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { FormGroupContextProvider, useFormGroup, useTranslate, } from 'react-admin';\nimport { useFormState } from 'react-hook-form';\n/**\n * Renders children (Inputs) inside a MUI <Accordion> element.\n *\n * To be used as child of an <AccordionForm> element.\n *\n * @param {string} label The main label used as the accordion summary. Appears in red when the accordion has errors\n * @param {string} secondary Optional. The secondary label used as the accordion summary\n * @param {boolean} defaultExpanded Optional. Set to true to have the accordion expanded by default (except if autoClose = true on the parent)\n * @param {boolean} disabled Optional. If true, the accordion will be displayed in a disabled state.\n * @param {boolean} square Optional. If true, rounded corners are disabled.\n *\n * @example\n *\n * import { Edit, TextField, TextInput, DateInput, SelectInput, ArrayInput, SimpleFormIterator, BooleanInput } from 'react-admin';\n * import { AccordionForm, AccordionFormPanel } from '@react-admin/ra-form-layout';\n *\n * // don't forget the component=\"div\" prop on the main component to disable the main Card\n * const CustomerEdit = () => (\n *     <Edit component=\"div\">\n *         <AccordionForm>\n *             <AccordionFormPanel label=\"Identity\" defaultExpanded>\n *                 <TextField source=\"id\" />\n *                 <TextInput source=\"first_name\" validate={required()} />\n *                 <TextInput source=\"last_name\" validate={required()} />\n *                 <DateInput source=\"dob\" label=\"born\" validate={required()} />\n *                 <SelectInput source=\"sex\" choices={sexChoices} />\n *             </AccordionFormPanel>\n *             <AccordionFormPanel label=\"Occupations\">\n *                 <ArrayInput source=\"occupations\" label=\"\">\n *                     <SimpleFormIterator>\n *                         <TextInput source=\"name\" validate={required()} />\n *                         <DateInput source=\"from\" validate={required()} />\n *                         <DateInput source=\"to\" />\n *                     </SimpleFormIterator>\n *                 </ArrayInput>\n *             </AccordionFormPanel>\n *             <AccordionFormPanel label=\"Preferences\">\n *                 <SelectInput\n *                     source=\"language\"\n *                     choices={languageChoices}\n *                     defaultValue=\"en\"\n *                 />\n *                 <BooleanInput source=\"dark_theme\" />\n *                 <BooleanInput source=\"accepts_emails_from_partners\" />\n *             </AccordionFormPanel>\n *         </AccordionForm>\n *     </Edit>\n * );\n */\nexport var AccordionFormPanel = function (props) {\n    return (React.createElement(FormGroupContextProvider, { name: props.label },\n        React.createElement(AccordionFormPanelView, __assign({}, props))));\n};\nvar AccordionFormPanelView = function (props) {\n    var children = props.children, _a = props.defaultExpanded, defaultExpanded = _a === void 0 ? false : _a, _b = props.disabled, disabled = _b === void 0 ? false : _b, label = props.label, secondary = props.secondary, square = props.square, \n    // injected by the parent\n    _c = props.autoClose, \n    // injected by the parent\n    autoClose = _c === void 0 ? false : _c, onChange = props.onChange, expanded = props.expanded;\n    var _d = useState(defaultExpanded), innerExpanded = _d[0], setExpanded = _d[1];\n    var handleChange = function () {\n        setExpanded(function (expanded) { return !expanded; });\n    };\n    var accordionParams = autoClose\n        ? {\n            expanded: expanded,\n            onChange: onChange,\n        }\n        : {\n            expanded: innerExpanded,\n            onChange: handleChange,\n        };\n    var translate = useTranslate();\n    var formGroup = useFormGroup(label);\n    var isSubmitted = useFormState().isSubmitted;\n    var hasErrors = !formGroup.isValid && (formGroup.isTouched || isSubmitted);\n    return (React.createElement(StyledAccordion, __assign({}, accordionParams, { disabled: disabled, square: square }),\n        React.createElement(AccordionSummary, { expandIcon: React.createElement(ExpandMoreIcon, null), \"aria-controls\": \"panel-\" + label + \"-content\", id: \"panel-\" + label + \"-header\" },\n            React.createElement(Typography, { color: hasErrors ? 'error' : 'text.primary', className: AccordionFormPanelClasses.heading }, translate(label, { _: label })),\n            React.createElement(Typography, { className: AccordionFormPanelClasses.secondaryHeading }, secondary && translate(secondary, { _: secondary }))),\n        React.createElement(AccordionDetails, { className: AccordionFormPanelClasses.detail }, children)));\n};\nvar PREFIX = 'RaAccordionFormPanel';\nexport var AccordionFormPanelClasses = {\n    heading: PREFIX + \"-heading\",\n    secondaryHeading: PREFIX + \"-secondaryHeading\",\n    detail: PREFIX + \"-detail\",\n};\nvar StyledAccordion = styled(Accordion, {\n    name: PREFIX,\n    overridesResolver: function (props, styles) { return styles.root; },\n})(function (_a) {\n    var _b;\n    var theme = _a.theme;\n    return (_b = {},\n        _b[\"& .\" + AccordionFormPanelClasses.heading] = {\n            fontSize: theme.typography.pxToRem(15),\n            flexBasis: '33.33%',\n            flexShrink: 0,\n        },\n        _b[\"& .\" + AccordionFormPanelClasses.secondaryHeading] = {\n            fontSize: theme.typography.pxToRem(15),\n            color: theme.palette.text.secondary,\n        },\n        _b[\"& .\" + AccordionFormPanelClasses.detail] = {\n            alignItems: 'flex-start',\n            display: 'flex',\n            flexDirection: 'column',\n        },\n        _b);\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}