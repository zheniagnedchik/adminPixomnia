{"ast":null,"code":"function futureSeconds(text) {\n  return text.replace(/sekuntia?/, 'sekunnin');\n}\n\nfunction futureMinutes(text) {\n  return text.replace(/minuuttia?/, 'minuutin');\n}\n\nfunction futureHours(text) {\n  return text.replace(/tuntia?/, 'tunnin');\n}\n\nfunction futureDays(text) {\n  return text.replace(/päivää?/, 'päivän');\n}\n\nfunction futureWeeks(text) {\n  return text.replace(/(viikko|viikkoa)/, 'viikon');\n}\n\nfunction futureMonths(text) {\n  return text.replace(/(kuukausi|kuukautta)/, 'kuukauden');\n}\n\nfunction futureYears(text) {\n  return text.replace(/(vuosi|vuotta)/, 'vuoden');\n}\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'alle sekunti',\n    other: 'alle {{count}} sekuntia',\n    futureTense: futureSeconds\n  },\n  xSeconds: {\n    one: 'sekunti',\n    other: '{{count}} sekuntia',\n    futureTense: futureSeconds\n  },\n  halfAMinute: {\n    one: 'puoli minuuttia',\n    other: 'puoli minuuttia',\n    futureTense: function (_text) {\n      return 'puolen minuutin';\n    }\n  },\n  lessThanXMinutes: {\n    one: 'alle minuutti',\n    other: 'alle {{count}} minuuttia',\n    futureTense: futureMinutes\n  },\n  xMinutes: {\n    one: 'minuutti',\n    other: '{{count}} minuuttia',\n    futureTense: futureMinutes\n  },\n  aboutXHours: {\n    one: 'noin tunti',\n    other: 'noin {{count}} tuntia',\n    futureTense: futureHours\n  },\n  xHours: {\n    one: 'tunti',\n    other: '{{count}} tuntia',\n    futureTense: futureHours\n  },\n  xDays: {\n    one: 'päivä',\n    other: '{{count}} päivää',\n    futureTense: futureDays\n  },\n  aboutXWeeks: {\n    one: 'noin viikko',\n    other: 'noin {{count}} viikkoa',\n    futureTense: futureWeeks\n  },\n  xWeeks: {\n    one: 'viikko',\n    other: '{{count}} viikkoa',\n    futureTense: futureWeeks\n  },\n  aboutXMonths: {\n    one: 'noin kuukausi',\n    other: 'noin {{count}} kuukautta',\n    futureTense: futureMonths\n  },\n  xMonths: {\n    one: 'kuukausi',\n    other: '{{count}} kuukautta',\n    futureTense: futureMonths\n  },\n  aboutXYears: {\n    one: 'noin vuosi',\n    other: 'noin {{count}} vuotta',\n    futureTense: futureYears\n  },\n  xYears: {\n    one: 'vuosi',\n    other: '{{count}} vuotta',\n    futureTense: futureYears\n  },\n  overXYears: {\n    one: 'yli vuosi',\n    other: 'yli {{count}} vuotta',\n    futureTense: futureYears\n  },\n  almostXYears: {\n    one: 'lähes vuosi',\n    other: 'lähes {{count}} vuotta',\n    futureTense: futureYears\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var distance = formatDistanceLocale[token];\n  var result = count === 1 ? distance.one : distance.other.replace('{{count}}', count);\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return distance.futureTense(result) + ' kuluttua';\n    } else {\n      return result + ' sitten';\n    }\n  }\n\n  return result;\n}","map":{"version":3,"names":["futureSeconds","text","replace","futureMinutes","futureHours","futureDays","futureWeeks","futureMonths","futureYears","formatDistanceLocale","lessThanXSeconds","one","other","futureTense","xSeconds","halfAMinute","_text","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","count","options","distance","result","addSuffix","comparison"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/date-fns/esm/locale/fi/_lib/formatDistance/index.js"],"sourcesContent":["function futureSeconds(text) {\n  return text.replace(/sekuntia?/, 'sekunnin');\n}\n\nfunction futureMinutes(text) {\n  return text.replace(/minuuttia?/, 'minuutin');\n}\n\nfunction futureHours(text) {\n  return text.replace(/tuntia?/, 'tunnin');\n}\n\nfunction futureDays(text) {\n  return text.replace(/päivää?/, 'päivän');\n}\n\nfunction futureWeeks(text) {\n  return text.replace(/(viikko|viikkoa)/, 'viikon');\n}\n\nfunction futureMonths(text) {\n  return text.replace(/(kuukausi|kuukautta)/, 'kuukauden');\n}\n\nfunction futureYears(text) {\n  return text.replace(/(vuosi|vuotta)/, 'vuoden');\n}\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'alle sekunti',\n    other: 'alle {{count}} sekuntia',\n    futureTense: futureSeconds\n  },\n  xSeconds: {\n    one: 'sekunti',\n    other: '{{count}} sekuntia',\n    futureTense: futureSeconds\n  },\n  halfAMinute: {\n    one: 'puoli minuuttia',\n    other: 'puoli minuuttia',\n    futureTense: function (_text) {\n      return 'puolen minuutin';\n    }\n  },\n  lessThanXMinutes: {\n    one: 'alle minuutti',\n    other: 'alle {{count}} minuuttia',\n    futureTense: futureMinutes\n  },\n  xMinutes: {\n    one: 'minuutti',\n    other: '{{count}} minuuttia',\n    futureTense: futureMinutes\n  },\n  aboutXHours: {\n    one: 'noin tunti',\n    other: 'noin {{count}} tuntia',\n    futureTense: futureHours\n  },\n  xHours: {\n    one: 'tunti',\n    other: '{{count}} tuntia',\n    futureTense: futureHours\n  },\n  xDays: {\n    one: 'päivä',\n    other: '{{count}} päivää',\n    futureTense: futureDays\n  },\n  aboutXWeeks: {\n    one: 'noin viikko',\n    other: 'noin {{count}} viikkoa',\n    futureTense: futureWeeks\n  },\n  xWeeks: {\n    one: 'viikko',\n    other: '{{count}} viikkoa',\n    futureTense: futureWeeks\n  },\n  aboutXMonths: {\n    one: 'noin kuukausi',\n    other: 'noin {{count}} kuukautta',\n    futureTense: futureMonths\n  },\n  xMonths: {\n    one: 'kuukausi',\n    other: '{{count}} kuukautta',\n    futureTense: futureMonths\n  },\n  aboutXYears: {\n    one: 'noin vuosi',\n    other: 'noin {{count}} vuotta',\n    futureTense: futureYears\n  },\n  xYears: {\n    one: 'vuosi',\n    other: '{{count}} vuotta',\n    futureTense: futureYears\n  },\n  overXYears: {\n    one: 'yli vuosi',\n    other: 'yli {{count}} vuotta',\n    futureTense: futureYears\n  },\n  almostXYears: {\n    one: 'lähes vuosi',\n    other: 'lähes {{count}} vuotta',\n    futureTense: futureYears\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var distance = formatDistanceLocale[token];\n  var result = count === 1 ? distance.one : distance.other.replace('{{count}}', count);\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return distance.futureTense(result) + ' kuluttua';\n    } else {\n      return result + ' sitten';\n    }\n  }\n\n  return result;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}