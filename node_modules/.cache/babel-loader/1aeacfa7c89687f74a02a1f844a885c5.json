{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport inflection from 'inflection';\nimport { ListBase, getElementsFromRecords, InferredElement, useListContext, useResourceContext } from 'ra-core';\nimport { ListView } from './ListView';\nimport { listFieldTypes } from './listFieldTypes';\n/**\n * List component rendering a <Datagrid> based on the result of the\n * dataProvider.getList() call.\n *\n * The result (choice and type of columns) isn't configurable, but the\n * <ListGuesser> outputs the <Datagrid> it has guessed to the console so that\n * developers can start from there.\n *\n * To be used as the list prop of a <Resource>.\n *\n * @example\n *\n * import { Admin, Resource, ListGuesser } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Admin>\n * );\n */\n\nexport var ListGuesser = function (props) {\n  var debounce = props.debounce,\n      disableAuthentication = props.disableAuthentication,\n      disableSyncWithLocation = props.disableSyncWithLocation,\n      exporter = props.exporter,\n      filter = props.filter,\n      filterDefaultValues = props.filterDefaultValues,\n      perPage = props.perPage,\n      queryOptions = props.queryOptions,\n      resource = props.resource,\n      sort = props.sort,\n      rest = __rest(props, [\"debounce\", \"disableAuthentication\", \"disableSyncWithLocation\", \"exporter\", \"filter\", \"filterDefaultValues\", \"perPage\", \"queryOptions\", \"resource\", \"sort\"]);\n\n  return React.createElement(ListBase, {\n    debounce: debounce,\n    disableAuthentication: disableAuthentication,\n    disableSyncWithLocation: disableSyncWithLocation,\n    exporter: exporter,\n    filter: filter,\n    filterDefaultValues: filterDefaultValues,\n    perPage: perPage,\n    queryOptions: {\n      keepPreviousData: false\n    },\n    resource: resource,\n    sort: sort\n  }, React.createElement(ListViewGuesser, __assign({}, rest)));\n};\n\nvar ListViewGuesser = function (props) {\n  var data = useListContext(props).data;\n  var resource = useResourceContext();\n\n  var _a = useState(null),\n      child = _a[0],\n      setChild = _a[1];\n\n  useEffect(function () {\n    setChild(null);\n  }, [resource]);\n  useEffect(function () {\n    if (data && data.length > 0 && !child) {\n      var inferredElements = getElementsFromRecords(data, listFieldTypes);\n      var inferredChild = new InferredElement(listFieldTypes.table, null, inferredElements);\n      setChild(inferredChild.getElement());\n      if (process.env.NODE_ENV === 'production') return;\n      var representation = inferredChild.getRepresentation();\n      var components = ['List'].concat(Array.from(new Set(Array.from(representation.matchAll(/<([^/\\s>]+)/g)).map(function (match) {\n        return match[1];\n      }).filter(function (component) {\n        return component !== 'span';\n      })))).sort(); // eslint-disable-next-line no-console\n\n      console.log(\"Guessed List:\\n\\nimport { \".concat(components.join(', '), \" } from 'react-admin';\\n\\nexport const \").concat(inflection.capitalize(inflection.singularize(resource)), \"List = () => (\\n    <List>\\n\").concat(inferredChild.getRepresentation(), \"\\n    </List>\\n);\"));\n    }\n  }, [data, child, resource]);\n  return React.createElement(ListView, __assign({}, props), child);\n};\n\nListViewGuesser.propTypes = ListView.propTypes;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","useState","useEffect","inflection","ListBase","getElementsFromRecords","InferredElement","useListContext","useResourceContext","ListView","listFieldTypes","ListGuesser","props","debounce","disableAuthentication","disableSyncWithLocation","exporter","filter","filterDefaultValues","perPage","queryOptions","resource","sort","rest","createElement","keepPreviousData","ListViewGuesser","data","_a","child","setChild","inferredElements","inferredChild","table","getElement","process","env","NODE_ENV","representation","getRepresentation","components","concat","Array","from","Set","matchAll","map","match","component","console","log","join","capitalize","singularize","propTypes"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-ui-materialui/dist/esm/list/ListGuesser.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport inflection from 'inflection';\nimport { ListBase, getElementsFromRecords, InferredElement, useListContext, useResourceContext, } from 'ra-core';\nimport { ListView } from './ListView';\nimport { listFieldTypes } from './listFieldTypes';\n/**\n * List component rendering a <Datagrid> based on the result of the\n * dataProvider.getList() call.\n *\n * The result (choice and type of columns) isn't configurable, but the\n * <ListGuesser> outputs the <Datagrid> it has guessed to the console so that\n * developers can start from there.\n *\n * To be used as the list prop of a <Resource>.\n *\n * @example\n *\n * import { Admin, Resource, ListGuesser } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Admin>\n * );\n */\nexport var ListGuesser = function (props) {\n    var debounce = props.debounce, disableAuthentication = props.disableAuthentication, disableSyncWithLocation = props.disableSyncWithLocation, exporter = props.exporter, filter = props.filter, filterDefaultValues = props.filterDefaultValues, perPage = props.perPage, queryOptions = props.queryOptions, resource = props.resource, sort = props.sort, rest = __rest(props, [\"debounce\", \"disableAuthentication\", \"disableSyncWithLocation\", \"exporter\", \"filter\", \"filterDefaultValues\", \"perPage\", \"queryOptions\", \"resource\", \"sort\"]);\n    return (React.createElement(ListBase, { debounce: debounce, disableAuthentication: disableAuthentication, disableSyncWithLocation: disableSyncWithLocation, exporter: exporter, filter: filter, filterDefaultValues: filterDefaultValues, perPage: perPage, queryOptions: { keepPreviousData: false }, resource: resource, sort: sort },\n        React.createElement(ListViewGuesser, __assign({}, rest))));\n};\nvar ListViewGuesser = function (props) {\n    var data = useListContext(props).data;\n    var resource = useResourceContext();\n    var _a = useState(null), child = _a[0], setChild = _a[1];\n    useEffect(function () {\n        setChild(null);\n    }, [resource]);\n    useEffect(function () {\n        if (data && data.length > 0 && !child) {\n            var inferredElements = getElementsFromRecords(data, listFieldTypes);\n            var inferredChild = new InferredElement(listFieldTypes.table, null, inferredElements);\n            setChild(inferredChild.getElement());\n            if (process.env.NODE_ENV === 'production')\n                return;\n            var representation = inferredChild.getRepresentation();\n            var components = ['List']\n                .concat(Array.from(new Set(Array.from(representation.matchAll(/<([^/\\s>]+)/g))\n                .map(function (match) { return match[1]; })\n                .filter(function (component) { return component !== 'span'; }))))\n                .sort();\n            // eslint-disable-next-line no-console\n            console.log(\"Guessed List:\\n\\nimport { \".concat(components.join(', '), \" } from 'react-admin';\\n\\nexport const \").concat(inflection.capitalize(inflection.singularize(resource)), \"List = () => (\\n    <List>\\n\").concat(inferredChild.getRepresentation(), \"\\n    </List>\\n);\"));\n        }\n    }, [data, child, resource]);\n    return React.createElement(ListView, __assign({}, props), child);\n};\nListViewGuesser.propTypes = ListView.propTypes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}