{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport * as React from 'react';\nimport { useMemo, useRef } from 'react';\nimport { FormGroupsContext } from './FormGroupsContext';\n/**\n * This component provides functions through context to manage form groups,\n * allowing to link or unlink an input to a group.\n * @see FormGroupContextProvider\n * @see useFormGroup\n * @see useFormGroups\n */\n\nexport var FormGroupsProvider = function (_a) {\n  var children = _a.children;\n  var formGroups = useRef({});\n  var subscribers = useRef({});\n  var formContextValue = useMemo(function () {\n    return {\n      /**\n       * Register a subscriber function for the specified group. The subscriber\n       * will be called whenever the group content changes (fields added or removed).\n       */\n      subscribe: function (group, subscriber) {\n        if (!subscribers.current[group]) {\n          subscribers.current[group] = [];\n        }\n\n        subscribers.current[group].push(subscriber);\n        return function () {\n          subscribers.current[group] = subscribers.current[group].filter(function (s) {\n            return s !== subscriber;\n          });\n        };\n      },\n      getGroupFields: function (name) {\n        return formGroups.current[name] || [];\n      },\n      registerGroup: function (name) {\n        formGroups.current[name] = formGroups.current[name] || [];\n      },\n      unregisterGroup: function (name) {\n        delete formGroups[name];\n      },\n      registerField: function (source, group) {\n        if (group != null) {\n          if (!(formGroups.current[group] || []).includes(source)) {\n            formGroups.current[group] = __spreadArray(__spreadArray([], formGroups.current[group] || [], true), [source], false); // Notify subscribers that the group fields have changed\n\n            if (subscribers.current[group]) {\n              subscribers.current[group].forEach(function (subscriber) {\n                return subscriber();\n              });\n            }\n          }\n        }\n      },\n      unregisterField: function (source, group) {\n        if (group != null) {\n          if (!formGroups.current[group]) {\n            console.warn(\"Invalid form group \".concat(group));\n          } else {\n            var fields = new Set(formGroups.current[group]);\n            fields.delete(source);\n            formGroups.current[group] = Array.from(fields); // Notify subscribers that the group fields have changed\n\n            if (subscribers.current[group]) {\n              subscribers.current[group].forEach(function (subscriber) {\n                return subscriber();\n              });\n            }\n          }\n        }\n      }\n    };\n  }, []);\n  return React.createElement(FormGroupsContext.Provider, {\n    value: formContextValue\n  }, children);\n};","map":{"version":3,"names":["__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","React","useMemo","useRef","FormGroupsContext","FormGroupsProvider","_a","children","formGroups","subscribers","formContextValue","subscribe","group","subscriber","current","push","filter","s","getGroupFields","name","registerGroup","unregisterGroup","registerField","source","includes","forEach","unregisterField","console","warn","fields","Set","delete","createElement","Provider","value"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/form/FormGroupsProvider.js"],"sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as React from 'react';\nimport { useMemo, useRef } from 'react';\nimport { FormGroupsContext, } from './FormGroupsContext';\n/**\n * This component provides functions through context to manage form groups,\n * allowing to link or unlink an input to a group.\n * @see FormGroupContextProvider\n * @see useFormGroup\n * @see useFormGroups\n */\nexport var FormGroupsProvider = function (_a) {\n    var children = _a.children;\n    var formGroups = useRef({});\n    var subscribers = useRef({});\n    var formContextValue = useMemo(function () { return ({\n        /**\n         * Register a subscriber function for the specified group. The subscriber\n         * will be called whenever the group content changes (fields added or removed).\n         */\n        subscribe: function (group, subscriber) {\n            if (!subscribers.current[group]) {\n                subscribers.current[group] = [];\n            }\n            subscribers.current[group].push(subscriber);\n            return function () {\n                subscribers.current[group] = subscribers.current[group].filter(function (s) { return s !== subscriber; });\n            };\n        },\n        getGroupFields: function (name) { return formGroups.current[name] || []; },\n        registerGroup: function (name) {\n            formGroups.current[name] = formGroups.current[name] || [];\n        },\n        unregisterGroup: function (name) {\n            delete formGroups[name];\n        },\n        registerField: function (source, group) {\n            if (group != null) {\n                if (!(formGroups.current[group] || []).includes(source)) {\n                    formGroups.current[group] = __spreadArray(__spreadArray([], (formGroups.current[group] || []), true), [\n                        source,\n                    ], false);\n                    // Notify subscribers that the group fields have changed\n                    if (subscribers.current[group]) {\n                        subscribers.current[group].forEach(function (subscriber) {\n                            return subscriber();\n                        });\n                    }\n                }\n            }\n        },\n        unregisterField: function (source, group) {\n            if (group != null) {\n                if (!formGroups.current[group]) {\n                    console.warn(\"Invalid form group \".concat(group));\n                }\n                else {\n                    var fields = new Set(formGroups.current[group]);\n                    fields.delete(source);\n                    formGroups.current[group] = Array.from(fields);\n                    // Notify subscribers that the group fields have changed\n                    if (subscribers.current[group]) {\n                        subscribers.current[group].forEach(function (subscriber) {\n                            return subscriber();\n                        });\n                    }\n                }\n            }\n        },\n    }); }, []);\n    return (React.createElement(FormGroupsContext.Provider, { value: formContextValue }, children));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}