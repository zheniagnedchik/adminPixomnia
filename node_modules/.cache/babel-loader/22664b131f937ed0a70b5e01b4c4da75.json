{"ast":null,"code":"function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', count); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', count); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', count);\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return 'через ' + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' назад';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: 'меньше секунды',\n      singularNominative: 'меньше {{count}} секунды',\n      singularGenitive: 'меньше {{count}} секунд',\n      pluralGenitive: 'меньше {{count}} секунд'\n    },\n    future: {\n      one: 'меньше, чем через секунду',\n      singularNominative: 'меньше, чем через {{count}} секунду',\n      singularGenitive: 'меньше, чем через {{count}} секунды',\n      pluralGenitive: 'меньше, чем через {{count}} секунд'\n    }\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} секунда',\n      singularGenitive: '{{count}} секунды',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунду назад',\n      singularGenitive: '{{count}} секунды назад',\n      pluralGenitive: '{{count}} секунд назад'\n    },\n    future: {\n      singularNominative: 'через {{count}} секунду',\n      singularGenitive: 'через {{count}} секунды',\n      pluralGenitive: 'через {{count}} секунд'\n    }\n  }),\n  halfAMinute: function (_, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'через полминуты';\n      } else {\n        return 'полминуты назад';\n      }\n    }\n\n    return 'полминуты';\n  },\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: 'меньше минуты',\n      singularNominative: 'меньше {{count}} минуты',\n      singularGenitive: 'меньше {{count}} минут',\n      pluralGenitive: 'меньше {{count}} минут'\n    },\n    future: {\n      one: 'меньше, чем через минуту',\n      singularNominative: 'меньше, чем через {{count}} минуту',\n      singularGenitive: 'меньше, чем через {{count}} минуты',\n      pluralGenitive: 'меньше, чем через {{count}} минут'\n    }\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} минута',\n      singularGenitive: '{{count}} минуты',\n      pluralGenitive: '{{count}} минут'\n    },\n    past: {\n      singularNominative: '{{count}} минуту назад',\n      singularGenitive: '{{count}} минуты назад',\n      pluralGenitive: '{{count}} минут назад'\n    },\n    future: {\n      singularNominative: 'через {{count}} минуту',\n      singularGenitive: 'через {{count}} минуты',\n      pluralGenitive: 'через {{count}} минут'\n    }\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'около {{count}} часа',\n      singularGenitive: 'около {{count}} часов',\n      pluralGenitive: 'около {{count}} часов'\n    },\n    future: {\n      singularNominative: 'приблизительно через {{count}} час',\n      singularGenitive: 'приблизительно через {{count}} часа',\n      pluralGenitive: 'приблизительно через {{count}} часов'\n    }\n  }),\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} час',\n      singularGenitive: '{{count}} часа',\n      pluralGenitive: '{{count}} часов'\n    }\n  }),\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} день',\n      singularGenitive: '{{count}} дня',\n      pluralGenitive: '{{count}} дней'\n    }\n  }),\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'около {{count}} недели',\n      singularGenitive: 'около {{count}} недель',\n      pluralGenitive: 'около {{count}} недель'\n    },\n    future: {\n      singularNominative: 'приблизительно через {{count}} неделю',\n      singularGenitive: 'приблизительно через {{count}} недели',\n      pluralGenitive: 'приблизительно через {{count}} недель'\n    }\n  }),\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} неделя',\n      singularGenitive: '{{count}} недели',\n      pluralGenitive: '{{count}} недель'\n    }\n  }),\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'около {{count}} месяца',\n      singularGenitive: 'около {{count}} месяцев',\n      pluralGenitive: 'около {{count}} месяцев'\n    },\n    future: {\n      singularNominative: 'приблизительно через {{count}} месяц',\n      singularGenitive: 'приблизительно через {{count}} месяца',\n      pluralGenitive: 'приблизительно через {{count}} месяцев'\n    }\n  }),\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяца',\n      pluralGenitive: '{{count}} месяцев'\n    }\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'около {{count}} года',\n      singularGenitive: 'около {{count}} лет',\n      pluralGenitive: 'около {{count}} лет'\n    },\n    future: {\n      singularNominative: 'приблизительно через {{count}} год',\n      singularGenitive: 'приблизительно через {{count}} года',\n      pluralGenitive: 'приблизительно через {{count}} лет'\n    }\n  }),\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} год',\n      singularGenitive: '{{count}} года',\n      pluralGenitive: '{{count}} лет'\n    }\n  }),\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'больше {{count}} года',\n      singularGenitive: 'больше {{count}} лет',\n      pluralGenitive: 'больше {{count}} лет'\n    },\n    future: {\n      singularNominative: 'больше, чем через {{count}} год',\n      singularGenitive: 'больше, чем через {{count}} года',\n      pluralGenitive: 'больше, чем через {{count}} лет'\n    }\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'почти {{count}} год',\n      singularGenitive: 'почти {{count}} года',\n      pluralGenitive: 'почти {{count}} лет'\n    },\n    future: {\n      singularNominative: 'почти через {{count}} год',\n      singularGenitive: 'почти через {{count}} года',\n      pluralGenitive: 'почти через {{count}} лет'\n    }\n  })\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n}","map":{"version":3,"names":["declension","scheme","count","one","undefined","rem10","rem100","singularNominative","replace","singularGenitive","pluralGenitive","buildLocalizeTokenFn","options","addSuffix","comparison","future","regular","past","formatDistanceLocale","lessThanXSeconds","xSeconds","halfAMinute","_","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/date-fns/esm/locale/ru/_lib/formatDistance/index.js"],"sourcesContent":["function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', count); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', count); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', count);\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return 'через ' + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' назад';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: 'меньше секунды',\n      singularNominative: 'меньше {{count}} секунды',\n      singularGenitive: 'меньше {{count}} секунд',\n      pluralGenitive: 'меньше {{count}} секунд'\n    },\n    future: {\n      one: 'меньше, чем через секунду',\n      singularNominative: 'меньше, чем через {{count}} секунду',\n      singularGenitive: 'меньше, чем через {{count}} секунды',\n      pluralGenitive: 'меньше, чем через {{count}} секунд'\n    }\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} секунда',\n      singularGenitive: '{{count}} секунды',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунду назад',\n      singularGenitive: '{{count}} секунды назад',\n      pluralGenitive: '{{count}} секунд назад'\n    },\n    future: {\n      singularNominative: 'через {{count}} секунду',\n      singularGenitive: 'через {{count}} секунды',\n      pluralGenitive: 'через {{count}} секунд'\n    }\n  }),\n  halfAMinute: function (_, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'через полминуты';\n      } else {\n        return 'полминуты назад';\n      }\n    }\n\n    return 'полминуты';\n  },\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: 'меньше минуты',\n      singularNominative: 'меньше {{count}} минуты',\n      singularGenitive: 'меньше {{count}} минут',\n      pluralGenitive: 'меньше {{count}} минут'\n    },\n    future: {\n      one: 'меньше, чем через минуту',\n      singularNominative: 'меньше, чем через {{count}} минуту',\n      singularGenitive: 'меньше, чем через {{count}} минуты',\n      pluralGenitive: 'меньше, чем через {{count}} минут'\n    }\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} минута',\n      singularGenitive: '{{count}} минуты',\n      pluralGenitive: '{{count}} минут'\n    },\n    past: {\n      singularNominative: '{{count}} минуту назад',\n      singularGenitive: '{{count}} минуты назад',\n      pluralGenitive: '{{count}} минут назад'\n    },\n    future: {\n      singularNominative: 'через {{count}} минуту',\n      singularGenitive: 'через {{count}} минуты',\n      pluralGenitive: 'через {{count}} минут'\n    }\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'около {{count}} часа',\n      singularGenitive: 'около {{count}} часов',\n      pluralGenitive: 'около {{count}} часов'\n    },\n    future: {\n      singularNominative: 'приблизительно через {{count}} час',\n      singularGenitive: 'приблизительно через {{count}} часа',\n      pluralGenitive: 'приблизительно через {{count}} часов'\n    }\n  }),\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} час',\n      singularGenitive: '{{count}} часа',\n      pluralGenitive: '{{count}} часов'\n    }\n  }),\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} день',\n      singularGenitive: '{{count}} дня',\n      pluralGenitive: '{{count}} дней'\n    }\n  }),\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'около {{count}} недели',\n      singularGenitive: 'около {{count}} недель',\n      pluralGenitive: 'около {{count}} недель'\n    },\n    future: {\n      singularNominative: 'приблизительно через {{count}} неделю',\n      singularGenitive: 'приблизительно через {{count}} недели',\n      pluralGenitive: 'приблизительно через {{count}} недель'\n    }\n  }),\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} неделя',\n      singularGenitive: '{{count}} недели',\n      pluralGenitive: '{{count}} недель'\n    }\n  }),\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'около {{count}} месяца',\n      singularGenitive: 'около {{count}} месяцев',\n      pluralGenitive: 'около {{count}} месяцев'\n    },\n    future: {\n      singularNominative: 'приблизительно через {{count}} месяц',\n      singularGenitive: 'приблизительно через {{count}} месяца',\n      pluralGenitive: 'приблизительно через {{count}} месяцев'\n    }\n  }),\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяца',\n      pluralGenitive: '{{count}} месяцев'\n    }\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'около {{count}} года',\n      singularGenitive: 'около {{count}} лет',\n      pluralGenitive: 'около {{count}} лет'\n    },\n    future: {\n      singularNominative: 'приблизительно через {{count}} год',\n      singularGenitive: 'приблизительно через {{count}} года',\n      pluralGenitive: 'приблизительно через {{count}} лет'\n    }\n  }),\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} год',\n      singularGenitive: '{{count}} года',\n      pluralGenitive: '{{count}} лет'\n    }\n  }),\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'больше {{count}} года',\n      singularGenitive: 'больше {{count}} лет',\n      pluralGenitive: 'больше {{count}} лет'\n    },\n    future: {\n      singularNominative: 'больше, чем через {{count}} год',\n      singularGenitive: 'больше, чем через {{count}} года',\n      pluralGenitive: 'больше, чем через {{count}} лет'\n    }\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'почти {{count}} год',\n      singularGenitive: 'почти {{count}} года',\n      pluralGenitive: 'почти {{count}} лет'\n    },\n    future: {\n      singularNominative: 'почти через {{count}} год',\n      singularGenitive: 'почти через {{count}} года',\n      pluralGenitive: 'почти через {{count}} лет'\n    }\n  })\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}