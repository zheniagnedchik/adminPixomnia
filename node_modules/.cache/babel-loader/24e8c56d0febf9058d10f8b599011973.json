{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { cloneElement, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableBody } from '@mui/material';\nimport clsx from 'clsx';\nimport { DatagridClasses } from './useDatagridStyles';\nimport DatagridRow, { PureDatagridRow } from './DatagridRow';\nvar DatagridBody = React.forwardRef(function (_a, ref) {\n  var children = _a.children,\n      className = _a.className,\n      data = _a.data,\n      expand = _a.expand,\n      hasBulkActions = _a.hasBulkActions,\n      hover = _a.hover,\n      onToggleItem = _a.onToggleItem,\n      resource = _a.resource,\n      row = _a.row,\n      rowClick = _a.rowClick,\n      rowStyle = _a.rowStyle,\n      selectedIds = _a.selectedIds,\n      isRowSelectable = _a.isRowSelectable,\n      rest = __rest(_a, [\"children\", \"className\", \"data\", \"expand\", \"hasBulkActions\", \"hover\", \"onToggleItem\", \"resource\", \"row\", \"rowClick\", \"rowStyle\", \"selectedIds\", \"isRowSelectable\"]);\n\n  return React.createElement(TableBody, __assign({\n    ref: ref,\n    className: clsx('datagrid-body', className, DatagridClasses.tbody)\n  }, rest), data.map(function (record, rowIndex) {\n    var _a;\n\n    var _b, _c;\n\n    return cloneElement(row, {\n      className: clsx(DatagridClasses.row, (_a = {}, _a[DatagridClasses.rowEven] = rowIndex % 2 === 0, _a[DatagridClasses.rowOdd] = rowIndex % 2 !== 0, _a)),\n      expand: expand,\n      hasBulkActions: hasBulkActions && !!selectedIds,\n      hover: hover,\n      id: (_b = record.id) !== null && _b !== void 0 ? _b : \"row\".concat(rowIndex),\n      key: (_c = record.id) !== null && _c !== void 0 ? _c : \"row\".concat(rowIndex),\n      onToggleItem: onToggleItem,\n      record: record,\n      resource: resource,\n      rowClick: rowClick,\n      selectable: !isRowSelectable || isRowSelectable(record),\n      selected: selectedIds === null || selectedIds === void 0 ? void 0 : selectedIds.includes(record.id),\n      style: rowStyle ? rowStyle(record, rowIndex) : null\n    }, children);\n  }));\n});\nDatagridBody.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  // @ts-ignore\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  // @ts-ignore\n  expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n  hasBulkActions: PropTypes.bool.isRequired,\n  hover: PropTypes.bool,\n  onToggleItem: PropTypes.func,\n  resource: PropTypes.string,\n  row: PropTypes.element,\n  rowClick: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  rowStyle: PropTypes.func,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  styles: PropTypes.object,\n  isRowSelectable: PropTypes.func\n};\nDatagridBody.defaultProps = {\n  data: [],\n  hasBulkActions: false,\n  row: React.createElement(DatagridRow, null)\n}; // trick MUI Table into thinking this is one of the child type it supports\n// @ts-ignore\n\nDatagridBody.muiName = 'TableBody';\nexport var PureDatagridBody = memo(DatagridBody); // trick MUI Table into thinking this is one of the child type it supports\n// @ts-ignore\n\nPureDatagridBody.muiName = 'TableBody'; // @ts-ignore\n\nPureDatagridBody.defaultProps = {\n  row: React.createElement(PureDatagridRow, null)\n};\nexport default DatagridBody;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","cloneElement","memo","PropTypes","TableBody","clsx","DatagridClasses","DatagridRow","PureDatagridRow","DatagridBody","forwardRef","_a","ref","children","className","data","expand","hasBulkActions","hover","onToggleItem","resource","row","rowClick","rowStyle","selectedIds","isRowSelectable","rest","createElement","tbody","map","record","rowIndex","_b","_c","rowEven","rowOdd","id","concat","key","selectable","selected","includes","style","propTypes","string","node","arrayOf","object","isRequired","oneOfType","element","elementType","bool","func","any","styles","defaultProps","muiName","PureDatagridBody"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridBody.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { cloneElement, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableBody } from '@mui/material';\nimport clsx from 'clsx';\nimport { DatagridClasses } from './useDatagridStyles';\nimport DatagridRow, { PureDatagridRow } from './DatagridRow';\nvar DatagridBody = React.forwardRef(function (_a, ref) {\n    var children = _a.children, className = _a.className, data = _a.data, expand = _a.expand, hasBulkActions = _a.hasBulkActions, hover = _a.hover, onToggleItem = _a.onToggleItem, resource = _a.resource, row = _a.row, rowClick = _a.rowClick, rowStyle = _a.rowStyle, selectedIds = _a.selectedIds, isRowSelectable = _a.isRowSelectable, rest = __rest(_a, [\"children\", \"className\", \"data\", \"expand\", \"hasBulkActions\", \"hover\", \"onToggleItem\", \"resource\", \"row\", \"rowClick\", \"rowStyle\", \"selectedIds\", \"isRowSelectable\"]);\n    return (React.createElement(TableBody, __assign({ ref: ref, className: clsx('datagrid-body', className, DatagridClasses.tbody) }, rest), data.map(function (record, rowIndex) {\n        var _a;\n        var _b, _c;\n        return cloneElement(row, {\n            className: clsx(DatagridClasses.row, (_a = {},\n                _a[DatagridClasses.rowEven] = rowIndex % 2 === 0,\n                _a[DatagridClasses.rowOdd] = rowIndex % 2 !== 0,\n                _a)),\n            expand: expand,\n            hasBulkActions: hasBulkActions && !!selectedIds,\n            hover: hover,\n            id: (_b = record.id) !== null && _b !== void 0 ? _b : \"row\".concat(rowIndex),\n            key: (_c = record.id) !== null && _c !== void 0 ? _c : \"row\".concat(rowIndex),\n            onToggleItem: onToggleItem,\n            record: record,\n            resource: resource,\n            rowClick: rowClick,\n            selectable: !isRowSelectable || isRowSelectable(record),\n            selected: selectedIds === null || selectedIds === void 0 ? void 0 : selectedIds.includes(record.id),\n            style: rowStyle ? rowStyle(record, rowIndex) : null,\n        }, children);\n    })));\n});\nDatagridBody.propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n    // @ts-ignore\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    // @ts-ignore\n    expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n    hasBulkActions: PropTypes.bool.isRequired,\n    hover: PropTypes.bool,\n    onToggleItem: PropTypes.func,\n    resource: PropTypes.string,\n    row: PropTypes.element,\n    rowClick: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    rowStyle: PropTypes.func,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    styles: PropTypes.object,\n    isRowSelectable: PropTypes.func,\n};\nDatagridBody.defaultProps = {\n    data: [],\n    hasBulkActions: false,\n    row: React.createElement(DatagridRow, null),\n};\n// trick MUI Table into thinking this is one of the child type it supports\n// @ts-ignore\nDatagridBody.muiName = 'TableBody';\nexport var PureDatagridBody = memo(DatagridBody);\n// trick MUI Table into thinking this is one of the child type it supports\n// @ts-ignore\nPureDatagridBody.muiName = 'TableBody';\n// @ts-ignore\nPureDatagridBody.defaultProps = {\n    row: React.createElement(PureDatagridRow, null),\n};\nexport default DatagridBody;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}