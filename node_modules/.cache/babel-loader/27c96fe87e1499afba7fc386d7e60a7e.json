{"ast":null,"code":"import * as React from 'react';\nimport { memo } from 'react';\nimport { useTranslateLabel } from '../i18n';\nexport var FieldTitle = function (props) {\n  var source = props.source,\n      label = props.label,\n      resource = props.resource,\n      isRequired = props.isRequired;\n  var translateLabel = useTranslateLabel();\n\n  if (label === true) {\n    throw new Error('Label parameter must be a string, a ReactElement or false');\n  }\n\n  if (label === false || label === '') {\n    return null;\n  }\n\n  if (label && typeof label !== 'string') {\n    return label;\n  }\n\n  return React.createElement(\"span\", null, translateLabel({\n    label: label,\n    resource: resource,\n    source: source\n  }), isRequired && React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\u2009*\"));\n}; // What? TypeScript loses the displayName if we don't set it explicitly\n\nFieldTitle.displayName = 'FieldTitle';\nexport default memo(FieldTitle);","map":{"version":3,"names":["React","memo","useTranslateLabel","FieldTitle","props","source","label","resource","isRequired","translateLabel","Error","createElement","displayName"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/util/FieldTitle.js"],"sourcesContent":["import * as React from 'react';\nimport { memo } from 'react';\nimport { useTranslateLabel } from '../i18n';\nexport var FieldTitle = function (props) {\n    var source = props.source, label = props.label, resource = props.resource, isRequired = props.isRequired;\n    var translateLabel = useTranslateLabel();\n    if (label === true) {\n        throw new Error('Label parameter must be a string, a ReactElement or false');\n    }\n    if (label === false || label === '') {\n        return null;\n    }\n    if (label && typeof label !== 'string') {\n        return label;\n    }\n    return (React.createElement(\"span\", null,\n        translateLabel({\n            label: label,\n            resource: resource,\n            source: source,\n        }),\n        isRequired && React.createElement(\"span\", { \"aria-hidden\": \"true\" }, \"\\u2009*\")));\n};\n// What? TypeScript loses the displayName if we don't set it explicitly\nFieldTitle.displayName = 'FieldTitle';\nexport default memo(FieldTitle);\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,OAArB;AACA,SAASC,iBAAT,QAAkC,SAAlC;AACA,OAAO,IAAIC,UAAU,GAAG,UAAUC,KAAV,EAAiB;EACrC,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;EAAA,IAA2BC,KAAK,GAAGF,KAAK,CAACE,KAAzC;EAAA,IAAgDC,QAAQ,GAAGH,KAAK,CAACG,QAAjE;EAAA,IAA2EC,UAAU,GAAGJ,KAAK,CAACI,UAA9F;EACA,IAAIC,cAAc,GAAGP,iBAAiB,EAAtC;;EACA,IAAII,KAAK,KAAK,IAAd,EAAoB;IAChB,MAAM,IAAII,KAAJ,CAAU,2DAAV,CAAN;EACH;;EACD,IAAIJ,KAAK,KAAK,KAAV,IAAmBA,KAAK,KAAK,EAAjC,EAAqC;IACjC,OAAO,IAAP;EACH;;EACD,IAAIA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;IACpC,OAAOA,KAAP;EACH;;EACD,OAAQN,KAAK,CAACW,aAAN,CAAoB,MAApB,EAA4B,IAA5B,EACJF,cAAc,CAAC;IACXH,KAAK,EAAEA,KADI;IAEXC,QAAQ,EAAEA,QAFC;IAGXF,MAAM,EAAEA;EAHG,CAAD,CADV,EAMJG,UAAU,IAAIR,KAAK,CAACW,aAAN,CAAoB,MAApB,EAA4B;IAAE,eAAe;EAAjB,CAA5B,EAAuD,SAAvD,CANV,CAAR;AAOH,CAnBM,C,CAoBP;;AACAR,UAAU,CAACS,WAAX,GAAyB,YAAzB;AACA,eAAeX,IAAI,CAACE,UAAD,CAAnB"},"metadata":{},"sourceType":"module"}