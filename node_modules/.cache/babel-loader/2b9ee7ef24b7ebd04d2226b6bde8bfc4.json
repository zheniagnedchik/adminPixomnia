{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListBase } from 'ra-core';\nimport { TitlePropType } from '../layout/Title';\nimport { ListView } from './ListView';\n/**\n * List page component\n *\n * The <List> component renders the list layout (title, buttons, filters, pagination),\n * and fetches the list of records from the REST API.\n *\n * It then delegates the rendering of the list of records to its child component.\n * Usually, it's a <Datagrid>, responsible for displaying a table with one row for each post.\n *\n * The <List> component accepts the following props:\n *\n * - actions\n * - aside: Side Component\n * - children: List Layout\n * - component\n * - disableAuthentication\n * - disableSyncWithLocation\n * - empty: Empty Page Component\n * - emptyWhileLoading\n * - exporter\n * - filters: Filter Inputs\n * - filter: Permanent Filter\n * - filterDefaultValues\n * - pagination: Pagination Component\n * - perPage: Pagination Size\n * - queryOptions\n * - sort: Default Sort Field & Order\n * - title\n * - sx: CSS API\n *\n * @example\n * const postFilters = [\n *     <TextInput label=\"Search\" source=\"q\" alwaysOn />,\n *     <TextInput label=\"Title\" source=\"title\" />\n * ];\n * export const PostList = (props) => (\n *     <List {...props}\n *         title=\"List of posts\"\n *         sort={{ field: 'published_at' }}\n *         filter={{ is_published: true }}\n *         filters={postFilters}\n *     >\n *         <Datagrid>\n *             <TextField source=\"id\" />\n *             <TextField source=\"title\" />\n *             <EditButton />\n *         </Datagrid>\n *     </List>\n * );\n */\n\nexport var List = function (_a) {\n  var debounce = _a.debounce,\n      disableAuthentication = _a.disableAuthentication,\n      disableSyncWithLocation = _a.disableSyncWithLocation,\n      exporter = _a.exporter,\n      filter = _a.filter,\n      filterDefaultValues = _a.filterDefaultValues,\n      perPage = _a.perPage,\n      queryOptions = _a.queryOptions,\n      resource = _a.resource,\n      sort = _a.sort,\n      rest = __rest(_a, [\"debounce\", \"disableAuthentication\", \"disableSyncWithLocation\", \"exporter\", \"filter\", \"filterDefaultValues\", \"perPage\", \"queryOptions\", \"resource\", \"sort\"]);\n\n  return React.createElement(ListBase, {\n    debounce: debounce,\n    disableAuthentication: disableAuthentication,\n    disableSyncWithLocation: disableSyncWithLocation,\n    exporter: exporter,\n    filter: filter,\n    filterDefaultValues: filterDefaultValues,\n    perPage: perPage,\n    queryOptions: queryOptions,\n    resource: resource,\n    sort: sort\n  }, React.createElement(ListView, __assign({}, rest)));\n};\nList.propTypes = {\n  // the props you can change\n  // @ts-ignore-line\n  actions: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n  aside: PropTypes.element,\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  emptyWhileLoading: PropTypes.bool,\n  filter: PropTypes.object,\n  filterDefaultValues: PropTypes.object,\n  filters: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n  // @ts-ignore-line\n  pagination: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n  perPage: PropTypes.number.isRequired,\n  //@ts-ignore-line\n  sort: PropTypes.shape({\n    field: PropTypes.string,\n    order: PropTypes.string\n  }),\n  sx: PropTypes.any,\n  title: TitlePropType,\n  // the props managed by react-admin\n  disableSyncWithLocation: PropTypes.bool,\n  hasCreate: PropTypes.bool,\n  hasEdit: PropTypes.bool,\n  hasList: PropTypes.bool,\n  hasShow: PropTypes.bool,\n  resource: PropTypes.string\n};\nList.defaultProps = {\n  filter: {},\n  perPage: 10\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","PropTypes","ListBase","TitlePropType","ListView","List","_a","debounce","disableAuthentication","disableSyncWithLocation","exporter","filter","filterDefaultValues","perPage","queryOptions","resource","sort","rest","createElement","propTypes","actions","oneOfType","bool","element","aside","children","isRequired","className","string","emptyWhileLoading","object","filters","arrayOf","pagination","number","shape","field","order","sx","any","title","hasCreate","hasEdit","hasList","hasShow","defaultProps"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-ui-materialui/dist/esm/list/List.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListBase } from 'ra-core';\nimport { TitlePropType } from '../layout/Title';\nimport { ListView } from './ListView';\n/**\n * List page component\n *\n * The <List> component renders the list layout (title, buttons, filters, pagination),\n * and fetches the list of records from the REST API.\n *\n * It then delegates the rendering of the list of records to its child component.\n * Usually, it's a <Datagrid>, responsible for displaying a table with one row for each post.\n *\n * The <List> component accepts the following props:\n *\n * - actions\n * - aside: Side Component\n * - children: List Layout\n * - component\n * - disableAuthentication\n * - disableSyncWithLocation\n * - empty: Empty Page Component\n * - emptyWhileLoading\n * - exporter\n * - filters: Filter Inputs\n * - filter: Permanent Filter\n * - filterDefaultValues\n * - pagination: Pagination Component\n * - perPage: Pagination Size\n * - queryOptions\n * - sort: Default Sort Field & Order\n * - title\n * - sx: CSS API\n *\n * @example\n * const postFilters = [\n *     <TextInput label=\"Search\" source=\"q\" alwaysOn />,\n *     <TextInput label=\"Title\" source=\"title\" />\n * ];\n * export const PostList = (props) => (\n *     <List {...props}\n *         title=\"List of posts\"\n *         sort={{ field: 'published_at' }}\n *         filter={{ is_published: true }}\n *         filters={postFilters}\n *     >\n *         <Datagrid>\n *             <TextField source=\"id\" />\n *             <TextField source=\"title\" />\n *             <EditButton />\n *         </Datagrid>\n *     </List>\n * );\n */\nexport var List = function (_a) {\n    var debounce = _a.debounce, disableAuthentication = _a.disableAuthentication, disableSyncWithLocation = _a.disableSyncWithLocation, exporter = _a.exporter, filter = _a.filter, filterDefaultValues = _a.filterDefaultValues, perPage = _a.perPage, queryOptions = _a.queryOptions, resource = _a.resource, sort = _a.sort, rest = __rest(_a, [\"debounce\", \"disableAuthentication\", \"disableSyncWithLocation\", \"exporter\", \"filter\", \"filterDefaultValues\", \"perPage\", \"queryOptions\", \"resource\", \"sort\"]);\n    return (React.createElement(ListBase, { debounce: debounce, disableAuthentication: disableAuthentication, disableSyncWithLocation: disableSyncWithLocation, exporter: exporter, filter: filter, filterDefaultValues: filterDefaultValues, perPage: perPage, queryOptions: queryOptions, resource: resource, sort: sort },\n        React.createElement(ListView, __assign({}, rest))));\n};\nList.propTypes = {\n    // the props you can change\n    // @ts-ignore-line\n    actions: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n    aside: PropTypes.element,\n    children: PropTypes.element.isRequired,\n    className: PropTypes.string,\n    emptyWhileLoading: PropTypes.bool,\n    filter: PropTypes.object,\n    filterDefaultValues: PropTypes.object,\n    filters: PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.arrayOf(PropTypes.element),\n    ]),\n    // @ts-ignore-line\n    pagination: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n    perPage: PropTypes.number.isRequired,\n    //@ts-ignore-line\n    sort: PropTypes.shape({\n        field: PropTypes.string,\n        order: PropTypes.string,\n    }),\n    sx: PropTypes.any,\n    title: TitlePropType,\n    // the props managed by react-admin\n    disableSyncWithLocation: PropTypes.bool,\n    hasCreate: PropTypes.bool,\n    hasEdit: PropTypes.bool,\n    hasList: PropTypes.bool,\n    hasShow: PropTypes.bool,\n    resource: PropTypes.string,\n};\nList.defaultProps = {\n    filter: {},\n    perPage: 10,\n};\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;IACpC,KAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;MACA,KAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IACP;;IACD,OAAON,CAAP;EACH,CAPD;;EAQA,OAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUV,CAAV,EAAaW,CAAb,EAAgB;EAClD,IAAIZ,CAAC,GAAG,EAAR;;EACA,KAAK,IAAIM,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,KAA8CM,CAAC,CAACC,OAAF,CAAUP,CAAV,IAAe,CAAjE,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;;EACJ,IAAIL,CAAC,IAAI,IAAL,IAAa,OAAOH,MAAM,CAACgB,qBAAd,KAAwC,UAAzD,EACI,KAAK,IAAIZ,CAAC,GAAG,CAAR,EAAWI,CAAC,GAAGR,MAAM,CAACgB,qBAAP,CAA6Bb,CAA7B,CAApB,EAAqDC,CAAC,GAAGI,CAAC,CAACD,MAA3D,EAAmEH,CAAC,EAApE,EAAwE;IACpE,IAAIU,CAAC,CAACC,OAAF,CAAUP,CAAC,CAACJ,CAAD,CAAX,IAAkB,CAAlB,IAAuBJ,MAAM,CAACS,SAAP,CAAiBQ,oBAAjB,CAAsCN,IAAtC,CAA2CR,CAA3C,EAA8CK,CAAC,CAACJ,CAAD,CAA/C,CAA3B,EACIF,CAAC,CAACM,CAAC,CAACJ,CAAD,CAAF,CAAD,GAAUD,CAAC,CAACK,CAAC,CAACJ,CAAD,CAAF,CAAX;EACP;EACL,OAAOF,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKgB,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,IAAI,GAAG,UAAUC,EAAV,EAAc;EAC5B,IAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAlB;EAAA,IAA4BC,qBAAqB,GAAGF,EAAE,CAACE,qBAAvD;EAAA,IAA8EC,uBAAuB,GAAGH,EAAE,CAACG,uBAA3G;EAAA,IAAoIC,QAAQ,GAAGJ,EAAE,CAACI,QAAlJ;EAAA,IAA4JC,MAAM,GAAGL,EAAE,CAACK,MAAxK;EAAA,IAAgLC,mBAAmB,GAAGN,EAAE,CAACM,mBAAzM;EAAA,IAA8NC,OAAO,GAAGP,EAAE,CAACO,OAA3O;EAAA,IAAoPC,YAAY,GAAGR,EAAE,CAACQ,YAAtQ;EAAA,IAAoRC,QAAQ,GAAGT,EAAE,CAACS,QAAlS;EAAA,IAA4SC,IAAI,GAAGV,EAAE,CAACU,IAAtT;EAAA,IAA4TC,IAAI,GAAGtB,MAAM,CAACW,EAAD,EAAK,CAAC,UAAD,EAAa,uBAAb,EAAsC,yBAAtC,EAAiE,UAAjE,EAA6E,QAA7E,EAAuF,qBAAvF,EAA8G,SAA9G,EAAyH,cAAzH,EAAyI,UAAzI,EAAqJ,MAArJ,CAAL,CAAzU;;EACA,OAAQN,KAAK,CAACkB,aAAN,CAAoBhB,QAApB,EAA8B;IAAEK,QAAQ,EAAEA,QAAZ;IAAsBC,qBAAqB,EAAEA,qBAA7C;IAAoEC,uBAAuB,EAAEA,uBAA7F;IAAsHC,QAAQ,EAAEA,QAAhI;IAA0IC,MAAM,EAAEA,MAAlJ;IAA0JC,mBAAmB,EAAEA,mBAA/K;IAAoMC,OAAO,EAAEA,OAA7M;IAAsNC,YAAY,EAAEA,YAApO;IAAkPC,QAAQ,EAAEA,QAA5P;IAAsQC,IAAI,EAAEA;EAA5Q,CAA9B,EACJhB,KAAK,CAACkB,aAAN,CAAoBd,QAApB,EAA8BvB,QAAQ,CAAC,EAAD,EAAKoC,IAAL,CAAtC,CADI,CAAR;AAEH,CAJM;AAKPZ,IAAI,CAACc,SAAL,GAAiB;EACb;EACA;EACAC,OAAO,EAAEnB,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACqB,IAAX,EAAiBrB,SAAS,CAACsB,OAA3B,CAApB,CAHI;EAIbC,KAAK,EAAEvB,SAAS,CAACsB,OAJJ;EAKbE,QAAQ,EAAExB,SAAS,CAACsB,OAAV,CAAkBG,UALf;EAMbC,SAAS,EAAE1B,SAAS,CAAC2B,MANR;EAObC,iBAAiB,EAAE5B,SAAS,CAACqB,IAPhB;EAQbX,MAAM,EAAEV,SAAS,CAAC6B,MARL;EASblB,mBAAmB,EAAEX,SAAS,CAAC6B,MATlB;EAUbC,OAAO,EAAE9B,SAAS,CAACoB,SAAV,CAAoB,CACzBpB,SAAS,CAACsB,OADe,EAEzBtB,SAAS,CAAC+B,OAAV,CAAkB/B,SAAS,CAACsB,OAA5B,CAFyB,CAApB,CAVI;EAcb;EACAU,UAAU,EAAEhC,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACsB,OAAX,EAAoBtB,SAAS,CAACqB,IAA9B,CAApB,CAfC;EAgBbT,OAAO,EAAEZ,SAAS,CAACiC,MAAV,CAAiBR,UAhBb;EAiBb;EACAV,IAAI,EAAEf,SAAS,CAACkC,KAAV,CAAgB;IAClBC,KAAK,EAAEnC,SAAS,CAAC2B,MADC;IAElBS,KAAK,EAAEpC,SAAS,CAAC2B;EAFC,CAAhB,CAlBO;EAsBbU,EAAE,EAAErC,SAAS,CAACsC,GAtBD;EAuBbC,KAAK,EAAErC,aAvBM;EAwBb;EACAM,uBAAuB,EAAER,SAAS,CAACqB,IAzBtB;EA0BbmB,SAAS,EAAExC,SAAS,CAACqB,IA1BR;EA2BboB,OAAO,EAAEzC,SAAS,CAACqB,IA3BN;EA4BbqB,OAAO,EAAE1C,SAAS,CAACqB,IA5BN;EA6BbsB,OAAO,EAAE3C,SAAS,CAACqB,IA7BN;EA8BbP,QAAQ,EAAEd,SAAS,CAAC2B;AA9BP,CAAjB;AAgCAvB,IAAI,CAACwC,YAAL,GAAoB;EAChBlC,MAAM,EAAE,EADQ;EAEhBE,OAAO,EAAE;AAFO,CAApB"},"metadata":{},"sourceType":"module"}