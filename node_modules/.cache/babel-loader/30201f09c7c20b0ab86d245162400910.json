{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/src/components/ShiftSchedule/ShiftScheduleCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { List, Datagrid, SelectInput, Create, SimpleForm, TextInput, DateTimeInput, NumberInput } from \"react-admin\";\nimport axios from \"axios\";\nimport { URI } from \"../../URLS\";\nimport { da } from \"date-fns/locale\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShiftScheduleListCreate = props => {\n  _s();\n\n  const [placeId, setPlace] = useState([]);\n  const [employeeId, setEmployee] = useState([]);\n  const [region, setRegion] = useState(false);\n  const [regions, setRegions] = useState([]);\n  console.log(\"regions\", regions);\n  useEffect(() => {\n    axios.get(`${URI}/getRegions?employeeId=admin@pixomnia.com`).then(data => {\n      const reg = data.data.map(item => {\n        return {\n          id: item.regionId,\n          name: item.regionId\n        };\n      });\n      setRegions(reg);\n    });\n  }, [setRegions]);\n  useEffect(() => {\n    axios.get(`${URI}/getPlacesWithInfo?employeeId=reload&regionId=${region}`).then(data => {\n      console.log(data);\n      const place = data.data.map(item => {\n        return {\n          id: item.placeId,\n          name: item.placeId\n        };\n      });\n      setPlace(place);\n    });\n  }, [setPlace]);\n\n  const getEmployeeId = async placeId => {\n    const data = await axios.get(`${URI}/getPlacesWithInfo?employeeId=reload&regionId=${region}`);\n    const place = data.data.filter(el => el.placeId === placeId);\n    const employee = place[0].employeeIds.map(item => {\n      return {\n        id: item,\n        name: item\n      };\n    });\n    setEmployee(employee);\n  }; // useEffect(() => {\n  //   axios\n  //     .get(`${URI}/getEmployees?employeeId=reload&regionId=TX`)\n  //     .then((data) => {\n  //       console.log(data);\n  //       const employee = data.data.map((item) => {\n  //         return { id: item.email, name: item.email };\n  //       });\n  //       setEmployee(employee);\n  //     });\n  // }, [setPlace]);\n\n\n  const shiftManager = [{\n    id: true,\n    name: true\n  }, {\n    id: false,\n    name: false\n  }];\n  const categories = [{\n    name: \"Tech\",\n    id: \"tech\"\n  }, {\n    name: \"Lifestyle\",\n    id: \"lifestyle\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Create, {\n    title: \"Create a shift\",\n    ...props,\n    resource: \"addShiftSchedule\",\n    redirect: \"/getShiftSchedule\",\n    children: /*#__PURE__*/_jsxDEV(SimpleForm, {\n      children: [/*#__PURE__*/_jsxDEV(SelectInput, {\n        source: \"regionId\",\n        choices: regions,\n        label: \"RegionId\",\n        onChange: e => setRegion(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n        source: \"placeId\",\n        choices: placeId,\n        label: \"PlaceId\",\n        onChange: e => getEmployeeId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n        source: \"employeeId\",\n        choices: employeeId,\n        label: \"EmployeeId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DateTimeInput, {\n        source: \"startTime\",\n        label: \"Start shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DateTimeInput, {\n        source: \"endTime\",\n        label: \"End shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n        source: \"softStartInMinutes\",\n        label: \"Soft Start In Minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n        source: \"softEndInMinutes\",\n        label: \"Soft End In Minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n        source: \"shiftManager\",\n        choices: shiftManager,\n        label: \"shiftManager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShiftScheduleListCreate, \"Lq4D9rCmCu9eY3iuVqMiklCYnFM=\");\n\n_c = ShiftScheduleListCreate;\nexport default ShiftScheduleListCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShiftScheduleListCreate\");","map":{"version":3,"names":["React","useEffect","useState","List","Datagrid","SelectInput","Create","SimpleForm","TextInput","DateTimeInput","NumberInput","axios","URI","da","ShiftScheduleListCreate","props","placeId","setPlace","employeeId","setEmployee","region","setRegion","regions","setRegions","console","log","get","then","data","reg","map","item","id","regionId","name","place","getEmployeeId","filter","el","employee","employeeIds","shiftManager","categories","e","target","value"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/src/components/ShiftSchedule/ShiftScheduleCreate.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  List,\n  Datagrid,\n  SelectInput,\n  Create,\n  SimpleForm,\n  TextInput,\n  DateTimeInput,\n  NumberInput,\n} from \"react-admin\";\nimport axios from \"axios\";\nimport { URI } from \"../../URLS\";\nimport { da } from \"date-fns/locale\";\n\nconst ShiftScheduleListCreate = (props) => {\n  const [placeId, setPlace] = useState([]);\n  const [employeeId, setEmployee] = useState([]);\n  const [region, setRegion] = useState(false);\n  const [regions, setRegions] = useState([]);\n  console.log(\"regions\", regions);\n  useEffect(() => {\n    axios\n      .get(`${URI}/getRegions?employeeId=admin@pixomnia.com`)\n      .then((data) => {\n        const reg = data.data.map((item) => {\n          return { id: item.regionId, name: item.regionId };\n        });\n        setRegions(reg);\n      });\n  }, [setRegions]);\n  useEffect(() => {\n    axios\n      .get(`${URI}/getPlacesWithInfo?employeeId=reload&regionId=${region}`)\n      .then((data) => {\n        console.log(data);\n        const place = data.data.map((item) => {\n          return { id: item.placeId, name: item.placeId };\n        });\n        setPlace(place);\n      });\n  }, [setPlace]);\n\n  const getEmployeeId = async (placeId) => {\n    const data = await axios.get(\n      `${URI}/getPlacesWithInfo?employeeId=reload&regionId=${region}`\n    );\n    const place = data.data.filter((el) => el.placeId === placeId);\n    const employee = place[0].employeeIds.map((item) => {\n      return { id: item, name: item };\n    });\n    setEmployee(employee);\n  };\n\n  // useEffect(() => {\n  //   axios\n  //     .get(`${URI}/getEmployees?employeeId=reload&regionId=TX`)\n  //     .then((data) => {\n  //       console.log(data);\n  //       const employee = data.data.map((item) => {\n  //         return { id: item.email, name: item.email };\n  //       });\n  //       setEmployee(employee);\n  //     });\n  // }, [setPlace]);\n\n  const shiftManager = [\n    { id: true, name: true },\n    { id: false, name: false },\n  ];\n  const categories = [\n    { name: \"Tech\", id: \"tech\" },\n    { name: \"Lifestyle\", id: \"lifestyle\" },\n  ];\n  return (\n    <Create\n      title=\"Create a shift\"\n      {...props}\n      resource=\"addShiftSchedule\"\n      redirect=\"/getShiftSchedule\"\n    >\n      <SimpleForm>\n        <SelectInput\n          source=\"regionId\"\n          choices={regions}\n          label=\"RegionId\"\n          onChange={(e) => setRegion(e.target.value)}\n        />\n        <SelectInput\n          source=\"placeId\"\n          choices={placeId}\n          label=\"PlaceId\"\n          onChange={(e) => getEmployeeId(e.target.value)}\n        />\n\n        <SelectInput\n          source=\"employeeId\"\n          choices={employeeId}\n          label=\"EmployeeId\"\n        />\n\n        <DateTimeInput source=\"startTime\" label=\"Start shift\" />\n        <DateTimeInput source=\"endTime\" label=\"End shift\" />\n        <NumberInput\n          source=\"softStartInMinutes\"\n          label=\"Soft Start In Minutes\"\n        />\n        <NumberInput source=\"softEndInMinutes\" label=\"Soft End In Minutes\" />\n        <SelectInput\n          source=\"shiftManager\"\n          choices={shiftManager}\n          label=\"shiftManager\"\n        />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport default ShiftScheduleListCreate;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,IADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,MAJF,EAKEC,UALF,EAMEC,SANF,EAOEC,aAPF,EAQEC,WARF,QASO,aATP;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,EAAT,QAAmB,iBAAnB;;;AAEA,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;EAAA;;EACzC,MAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBf,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACgB,UAAD,EAAaC,WAAb,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;EACA,MAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;EACAsB,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,OAAvB;EACArB,SAAS,CAAC,MAAM;IACdU,KAAK,CACFe,GADH,CACQ,GAAEd,GAAI,2CADd,EAEGe,IAFH,CAESC,IAAD,IAAU;MACd,MAAMC,GAAG,GAAGD,IAAI,CAACA,IAAL,CAAUE,GAAV,CAAeC,IAAD,IAAU;QAClC,OAAO;UAAEC,EAAE,EAAED,IAAI,CAACE,QAAX;UAAqBC,IAAI,EAAEH,IAAI,CAACE;QAAhC,CAAP;MACD,CAFW,CAAZ;MAGAV,UAAU,CAACM,GAAD,CAAV;IACD,CAPH;EAQD,CATQ,EASN,CAACN,UAAD,CATM,CAAT;EAUAtB,SAAS,CAAC,MAAM;IACdU,KAAK,CACFe,GADH,CACQ,GAAEd,GAAI,iDAAgDQ,MAAO,EADrE,EAEGO,IAFH,CAESC,IAAD,IAAU;MACdJ,OAAO,CAACC,GAAR,CAAYG,IAAZ;MACA,MAAMO,KAAK,GAAGP,IAAI,CAACA,IAAL,CAAUE,GAAV,CAAeC,IAAD,IAAU;QACpC,OAAO;UAAEC,EAAE,EAAED,IAAI,CAACf,OAAX;UAAoBkB,IAAI,EAAEH,IAAI,CAACf;QAA/B,CAAP;MACD,CAFa,CAAd;MAGAC,QAAQ,CAACkB,KAAD,CAAR;IACD,CARH;EASD,CAVQ,EAUN,CAAClB,QAAD,CAVM,CAAT;;EAYA,MAAMmB,aAAa,GAAG,MAAOpB,OAAP,IAAmB;IACvC,MAAMY,IAAI,GAAG,MAAMjB,KAAK,CAACe,GAAN,CAChB,GAAEd,GAAI,iDAAgDQ,MAAO,EAD7C,CAAnB;IAGA,MAAMe,KAAK,GAAGP,IAAI,CAACA,IAAL,CAAUS,MAAV,CAAkBC,EAAD,IAAQA,EAAE,CAACtB,OAAH,KAAeA,OAAxC,CAAd;IACA,MAAMuB,QAAQ,GAAGJ,KAAK,CAAC,CAAD,CAAL,CAASK,WAAT,CAAqBV,GAArB,CAA0BC,IAAD,IAAU;MAClD,OAAO;QAAEC,EAAE,EAAED,IAAN;QAAYG,IAAI,EAAEH;MAAlB,CAAP;IACD,CAFgB,CAAjB;IAGAZ,WAAW,CAACoB,QAAD,CAAX;EACD,CATD,CA5ByC,CAuCzC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,MAAME,YAAY,GAAG,CACnB;IAAET,EAAE,EAAE,IAAN;IAAYE,IAAI,EAAE;EAAlB,CADmB,EAEnB;IAAEF,EAAE,EAAE,KAAN;IAAaE,IAAI,EAAE;EAAnB,CAFmB,CAArB;EAIA,MAAMQ,UAAU,GAAG,CACjB;IAAER,IAAI,EAAE,MAAR;IAAgBF,EAAE,EAAE;EAApB,CADiB,EAEjB;IAAEE,IAAI,EAAE,WAAR;IAAqBF,EAAE,EAAE;EAAzB,CAFiB,CAAnB;EAIA,oBACE,QAAC,MAAD;IACE,KAAK,EAAC,gBADR;IAAA,GAEMjB,KAFN;IAGE,QAAQ,EAAC,kBAHX;IAIE,QAAQ,EAAC,mBAJX;IAAA,uBAME,QAAC,UAAD;MAAA,wBACE,QAAC,WAAD;QACE,MAAM,EAAC,UADT;QAEE,OAAO,EAAEO,OAFX;QAGE,KAAK,EAAC,UAHR;QAIE,QAAQ,EAAGqB,CAAD,IAAOtB,SAAS,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV;MAJ5B;QAAA;QAAA;QAAA;MAAA,QADF,eAOE,QAAC,WAAD;QACE,MAAM,EAAC,SADT;QAEE,OAAO,EAAE7B,OAFX;QAGE,KAAK,EAAC,SAHR;QAIE,QAAQ,EAAG2B,CAAD,IAAOP,aAAa,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;MAJhC;QAAA;QAAA;QAAA;MAAA,QAPF,eAcE,QAAC,WAAD;QACE,MAAM,EAAC,YADT;QAEE,OAAO,EAAE3B,UAFX;QAGE,KAAK,EAAC;MAHR;QAAA;QAAA;QAAA;MAAA,QAdF,eAoBE,QAAC,aAAD;QAAe,MAAM,EAAC,WAAtB;QAAkC,KAAK,EAAC;MAAxC;QAAA;QAAA;QAAA;MAAA,QApBF,eAqBE,QAAC,aAAD;QAAe,MAAM,EAAC,SAAtB;QAAgC,KAAK,EAAC;MAAtC;QAAA;QAAA;QAAA;MAAA,QArBF,eAsBE,QAAC,WAAD;QACE,MAAM,EAAC,oBADT;QAEE,KAAK,EAAC;MAFR;QAAA;QAAA;QAAA;MAAA,QAtBF,eA0BE,QAAC,WAAD;QAAa,MAAM,EAAC,kBAApB;QAAuC,KAAK,EAAC;MAA7C;QAAA;QAAA;QAAA;MAAA,QA1BF,eA2BE,QAAC,WAAD;QACE,MAAM,EAAC,cADT;QAEE,OAAO,EAAEuB,YAFX;QAGE,KAAK,EAAC;MAHR;QAAA;QAAA;QAAA;MAAA,QA3BF;IAAA;MAAA;MAAA;MAAA;IAAA;EANF;IAAA;IAAA;IAAA;EAAA,QADF;AA0CD,CArGD;;GAAM3B,uB;;KAAAA,uB;AAuGN,eAAeA,uBAAf"},"metadata":{},"sourceType":"module"}