{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { Show as RaShow } from 'react-admin';\nimport { ShowActions } from './ShowActions';\n/**\n * Replacement for react-admin's Show that adds RBAC control to actions\n *\n * Users must have the 'edit' permission on the resource and record to see the EditButton.\n *\n * @example\n * import { Show } from '@react-admin/ra-rbac';\n *\n * const authProvider = {\n *      // ...\n *      getPermissions: () => Promise.resolve([\n *          { action: ['list', 'show', 'edit'], resource: 'products' },\n *       ]),\n * };\n *\n * export const PostShow = () => (\n *     <Show>\n *         ...\n *     </Show>\n * );\n * // user will see the following actions on top of the Show:\n * // - edit\n */\n\nexport var Show = function (props) {\n  return React.createElement(RaShow, __assign({\n    actions: React.createElement(ShowActions, null)\n  }, props));\n};\nShow.propTypes = RaShow.propTypes;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","Show","RaShow","ShowActions","props","createElement","actions","propTypes"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@react-admin/ra-rbac/esm/src/detail/Show.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Show as RaShow } from 'react-admin';\nimport { ShowActions } from './ShowActions';\n/**\n * Replacement for react-admin's Show that adds RBAC control to actions\n *\n * Users must have the 'edit' permission on the resource and record to see the EditButton.\n *\n * @example\n * import { Show } from '@react-admin/ra-rbac';\n *\n * const authProvider = {\n *      // ...\n *      getPermissions: () => Promise.resolve([\n *          { action: ['list', 'show', 'edit'], resource: 'products' },\n *       ]),\n * };\n *\n * export const PostShow = () => (\n *     <Show>\n *         ...\n *     </Show>\n * );\n * // user will see the following actions on top of the Show:\n * // - edit\n */\nexport var Show = function (props) {\n    return React.createElement(RaShow, __assign({ actions: React.createElement(ShowActions, null) }, props));\n};\nShow.propTypes = RaShow.propTypes;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;IACpC,KAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;MACA,KAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IACP;;IACD,OAAON,CAAP;EACH,CAPD;;EAQA,OAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKO,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAI,IAAIC,MAAjB,QAA+B,aAA/B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIF,IAAI,GAAG,UAAUG,KAAV,EAAiB;EAC/B,OAAOJ,KAAK,CAACK,aAAN,CAAoBH,MAApB,EAA4BhB,QAAQ,CAAC;IAAEoB,OAAO,EAAEN,KAAK,CAACK,aAAN,CAAoBF,WAApB,EAAiC,IAAjC;EAAX,CAAD,EAAsDC,KAAtD,CAApC,CAAP;AACH,CAFM;AAGPH,IAAI,CAACM,SAAL,GAAiBL,MAAM,CAACK,SAAxB"},"metadata":{},"sourceType":"module"}