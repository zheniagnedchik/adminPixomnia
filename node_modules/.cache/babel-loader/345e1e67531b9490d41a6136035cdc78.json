{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/src/components/ShiftSchedule/Calendar.js\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { List, Datagrid, TextField, EditButton, DeleteButton, DateField, WrapperField, TextInput, DateTimeInput, SimpleForm } from \"react-admin\";\nimport { Calendar, CompleteCalendar } from \"@react-admin/ra-calendar\";\nimport FilterShifts from \"../../Utils/FilterShifts\";\nimport PurpleTextField from \"../../Utils/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventContent = event => {\n  console.log(\"event\", event);\n};\n\n_c = EventContent;\n\nfunction getRandomColor() {\n  var letters = \"0123456789ABCDEF\";\n  var color = \"#\";\n\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n}\n\nconst converter = event => ({\n  // id: String(event.id),\n  // title: event.employeeId,\n  // start: new Date(event.startTime).toISOString(\"en-US\"),\n  // startTime: event.startTime,\n  // end: event.endTime,\n  // allDay: false,\n  // display: \"block\",\n  title: \"BCH237\",\n  start: \"2022-08-24T03:30:00\",\n  end: \"2022-08-24T03:30:00\",\n  extendedProps: {\n    department: \"BioChemistry\"\n  },\n  description: \"Lecture\"\n});\n\nconst CalendarShift = props => {\n  return /*#__PURE__*/_jsxDEV(List, { ...props,\n    aside: /*#__PURE__*/_jsxDEV(FilterShifts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }, this),\n    resource: \"getShiftSchedule\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      convertToEvent: converter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = CalendarShift;\nexport default CalendarShift;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EventContent\");\n$RefreshReg$(_c2, \"CalendarShift\");","map":{"version":3,"names":["axios","React","useEffect","useState","List","Datagrid","TextField","EditButton","DeleteButton","DateField","WrapperField","TextInput","DateTimeInput","SimpleForm","Calendar","CompleteCalendar","FilterShifts","PurpleTextField","EventContent","event","console","log","getRandomColor","letters","color","i","Math","floor","random","converter","title","start","end","extendedProps","department","description","CalendarShift","props"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/src/components/ShiftSchedule/Calendar.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EditButton,\n  DeleteButton,\n  DateField,\n  WrapperField,\n  TextInput,\n  DateTimeInput,\n  SimpleForm,\n} from \"react-admin\";\nimport { Calendar, CompleteCalendar } from \"@react-admin/ra-calendar\";\nimport FilterShifts from \"../../Utils/FilterShifts\";\nimport PurpleTextField from \"../../Utils/TextField\";\n\nconst EventContent = (event) => {\n  console.log(\"event\", event);\n};\nfunction getRandomColor() {\n  var letters = \"0123456789ABCDEF\";\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\nconst converter = (event) => ({\n  // id: String(event.id),\n  // title: event.employeeId,\n  // start: new Date(event.startTime).toISOString(\"en-US\"),\n  // startTime: event.startTime,\n  // end: event.endTime,\n  // allDay: false,\n  // display: \"block\",\n\n  title: \"BCH237\",\n  start: \"2022-08-24T03:30:00\",\n  end: \"2022-08-24T03:30:00\",\n  extendedProps: {\n    department: \"BioChemistry\",\n  },\n  description: \"Lecture\",\n});\nconst CalendarShift = (props) => {\n  return (\n    <List {...props} aside={<FilterShifts />} resource=\"getShiftSchedule\">\n      <Calendar convertToEvent={converter} />\n    </List>\n  );\n};\n\nexport default CalendarShift;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,IADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,YALF,EAMEC,SANF,EAOEC,YAPF,EAQEC,SARF,EASEC,aATF,EAUEC,UAVF,QAWO,aAXP;AAYA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,0BAA3C;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAC9BC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD,CAFD;;KAAMD,Y;;AAGN,SAASI,cAAT,GAA0B;EACxB,IAAIC,OAAO,GAAG,kBAAd;EACA,IAAIC,KAAK,GAAG,GAAZ;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;IAC1BD,KAAK,IAAID,OAAO,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAhB;EACD;;EACD,OAAOJ,KAAP;AACD;;AACD,MAAMK,SAAS,GAAIV,KAAD,KAAY;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA;EAEAW,KAAK,EAAE,QATqB;EAU5BC,KAAK,EAAE,qBAVqB;EAW5BC,GAAG,EAAE,qBAXuB;EAY5BC,aAAa,EAAE;IACbC,UAAU,EAAE;EADC,CAZa;EAe5BC,WAAW,EAAE;AAfe,CAAZ,CAAlB;;AAiBA,MAAMC,aAAa,GAAIC,KAAD,IAAW;EAC/B,oBACE,QAAC,IAAD,OAAUA,KAAV;IAAiB,KAAK,eAAE,QAAC,YAAD;MAAA;MAAA;MAAA;IAAA,QAAxB;IAA0C,QAAQ,EAAC,kBAAnD;IAAA,uBACE,QAAC,QAAD;MAAU,cAAc,EAAER;IAA1B;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAND;;MAAMO,a;AAQN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}