{"ast":null,"code":"import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useLayoutEffect as useLayoutEffect$1, useEffect, useRef, useCallback, useState } from 'react';\n\nconst ratio = _ref => {\n  let {\n    width,\n    height\n  } = _ref;\n  return width / height;\n};\n\nconst round = function (value) {\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const factor = 10 ** decimals;\n  return Math.round((value + Number.EPSILON) * factor) / factor;\n};\n\nconst RankingFunctionComparator = rank => (a, b) => rank(b) - rank(a);\n\nconst MinHeap = comparator => {\n  const heap = [];\n  const compare = comparator;\n  let n = 0;\n\n  const greater = (i, j) => compare(heap[i], heap[j]) < 0;\n\n  const swap = (i, j) => {\n    const temp = heap[i];\n    heap[i] = heap[j];\n    heap[j] = temp;\n  };\n\n  const swim = k => {\n    let k2 = k >> 1;\n\n    while (k > 1 && greater(k2, k)) {\n      swap(k2, k);\n      k = k2;\n      k2 = k >> 1;\n    }\n  };\n\n  const sink = k => {\n    let j = k << 1;\n\n    while (j <= n) {\n      if (j < n && greater(j, j + 1)) j++;\n      if (!greater(k, j)) break;\n      swap(k, j);\n      k = j;\n      j = k << 1;\n    }\n  };\n\n  return {\n    push: element => {\n      n += 1;\n      heap[n] = element;\n      swim(n);\n    },\n    pop: () => {\n      if (n === 0) return undefined;\n      swap(1, n);\n      n -= 1;\n      const max = heap.pop();\n      sink(1);\n      return max;\n    },\n    size: () => n\n  };\n};\n\nconst buildPrecedentsMap = (graph, startNode, endNode) => {\n  const precedentsMap = {};\n  const visited = {};\n  const storedShortestPaths = {};\n  storedShortestPaths[startNode] = 0;\n  const pQueue = MinHeap(RankingFunctionComparator(el => el.weight));\n  pQueue.push({\n    id: startNode,\n    weight: 0\n  });\n  let shortestNode;\n\n  while ((shortestNode = pQueue.pop()) !== undefined) {\n    const shortestNodeId = shortestNode.id;\n    if (visited[shortestNodeId]) continue;\n    const neighboringNodes = graph(shortestNodeId);\n    visited[shortestNodeId] = 1;\n\n    for (const neighbor in neighboringNodes) {\n      const newTotalWeight = shortestNode.weight + neighboringNodes[neighbor];\n\n      if (storedShortestPaths[neighbor] === undefined || storedShortestPaths[neighbor] > newTotalWeight && (storedShortestPaths[neighbor] / newTotalWeight > 1.005 || precedentsMap[neighbor] < shortestNodeId)) {\n        storedShortestPaths[neighbor] = newTotalWeight;\n        pQueue.push({\n          id: neighbor,\n          weight: newTotalWeight\n        });\n        precedentsMap[neighbor] = shortestNodeId;\n      }\n    }\n  }\n\n  if (typeof storedShortestPaths[endNode] === \"undefined\") {\n    return undefined;\n  }\n\n  return precedentsMap;\n};\n\nconst getPathFromPrecedentsMap = (precedentsMap, endNode) => {\n  const nodes = [];\n  let n = endNode;\n\n  while (n) {\n    nodes.push(n);\n    n = precedentsMap[n];\n  }\n\n  return nodes.reverse();\n};\n\nconst findShortestPath = (graph, startNode, endNode) => {\n  const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n  return precedentsMap !== undefined ? getPathFromPrecedentsMap(precedentsMap, endNode) : undefined;\n};\n\nconst findIdealNodeSearch = _ref2 => {\n  let {\n    photos,\n    targetRowHeight,\n    containerWidth\n  } = _ref2;\n  const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\n  return round(containerWidth / targetRowHeight / minRatio) + 2;\n};\n\nconst getCommonHeight = (row, containerWidth, spacing, padding) => {\n  const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\n  const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\n  return rowWidth / totalAspectRatio;\n};\n\nconst cost = (photos, i, j, width, targetRowHeight, spacing, padding) => {\n  const row = photos.slice(i, j);\n  const commonHeight = getCommonHeight(row, width, spacing, padding);\n  return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : undefined;\n};\n\nconst makeGetNeighbors$1 = _ref3 => {\n  let {\n    photos,\n    layoutOptions,\n    targetRowHeight,\n    limitNodeSearch,\n    rowConstraints,\n    instrumentation\n  } = _ref3;\n  return node => {\n    var _a, _b;\n\n    const {\n      containerWidth,\n      spacing,\n      padding\n    } = layoutOptions;\n    const results = {};\n    const start = +node;\n    results[+start] = 0;\n    const startOffset = (_a = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.minPhotos) !== null && _a !== void 0 ? _a : 1;\n    const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.maxPhotos) !== null && _b !== void 0 ? _b : Infinity);\n\n    for (let i = start + startOffset; i < photos.length + 1; i += 1) {\n      if (i - start > endOffset && !(instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.fullGraphSearch)) break;\n      const currentCost = cost(photos, start, i, containerWidth, targetRowHeight, spacing, padding);\n      if (currentCost === undefined) break;\n      results[i.toString()] = currentCost;\n    }\n\n    return results;\n  };\n};\n\nconst computeRowsLayout = _ref4 => {\n  let {\n    photos,\n    layoutOptions,\n    instrumentation\n  } = _ref4;\n\n  var _a, _b;\n\n  const {\n    spacing,\n    padding,\n    containerWidth,\n    targetRowHeight,\n    rowConstraints\n  } = layoutOptions;\n  (_a = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onStartLayoutComputation) === null || _a === void 0 ? void 0 : _a.call(instrumentation);\n  const limitNodeSearch = findIdealNodeSearch({\n    photos,\n    containerWidth,\n    targetRowHeight\n  });\n  const getNeighbors = makeGetNeighbors$1({\n    photos,\n    layoutOptions,\n    targetRowHeight,\n    limitNodeSearch,\n    rowConstraints,\n    instrumentation\n  });\n  const path = findShortestPath(getNeighbors, \"0\", `${photos.length}`);\n  if (path === undefined) return undefined;\n  const result = [];\n\n  for (let i = 1; i < path.length; i += 1) {\n    const row = photos.map((photo, index) => ({\n      photo,\n      index\n    })).slice(+path[i - 1], +path[i]);\n    const height = getCommonHeight(row.map(_ref5 => {\n      let {\n        photo\n      } = _ref5;\n      return photo;\n    }), containerWidth, spacing, padding);\n    result.push(row.map((_ref6, photoIndex) => {\n      let {\n        photo,\n        index\n      } = _ref6;\n      return {\n        photo,\n        layout: {\n          height,\n          width: height * ratio(photo),\n          index,\n          photoIndex,\n          photosCount: row.length\n        }\n      };\n    }));\n  }\n\n  (_b = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onFinishLayoutComputation) === null || _b === void 0 ? void 0 : _b.call(instrumentation, result);\n  return result;\n};\n\nconst calcWidth = (base, _ref7, _ref8) => {\n  let {\n    width,\n    photosCount\n  } = _ref7;\n  let {\n    spacing,\n    padding,\n    containerWidth\n  } = _ref8;\n  const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\n  return `calc((${base} - ${gaps}px) / ${round((containerWidth - gaps) / width, 5)})`;\n};\n\nconst cssWidth$1 = (layout, layoutOptions) => {\n  if (layoutOptions.layout !== \"rows\") {\n    return `calc(100% - ${2 * layoutOptions.padding}px)`;\n  }\n\n  return calcWidth(\"100%\", layout, layoutOptions);\n};\n\nconst calculateSizesValue = (size, layout, layoutOptions) => {\n  var _a, _b;\n\n  return calcWidth((_b = (_a = size.match(/calc\\((.*)\\)/)) === null || _a === void 0 ? void 0 : _a[1]) !== null && _b !== void 0 ? _b : size, layout, layoutOptions);\n};\n\nconst srcSetAndSizes = (photo, layout, layoutOptions) => {\n  let srcSet, sizes;\n\n  if (photo.images && photo.images.length > 0) {\n    srcSet = photo.images.concat([{\n      src: photo.src,\n      width: photo.width,\n      height: photo.height\n    }]).sort((first, second) => first.width - second.width).map(image => `${image.src} ${image.width}w`).join(\", \");\n  }\n\n  if (layoutOptions.sizes) {\n    sizes = (layoutOptions.sizes.sizes || []).map(_ref9 => {\n      let {\n        viewport,\n        size\n      } = _ref9;\n      return `${viewport} ${calculateSizesValue(size, layout, layoutOptions)}`;\n    }).concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions)).join(\", \");\n  } else {\n    sizes = `${Math.ceil(layout.width / (layoutOptions.viewportWidth || layoutOptions.containerWidth) * 100)}vw`;\n  }\n\n  return {\n    srcSet,\n    sizes\n  };\n};\n\nconst PhotoRenderer = props => {\n  var _a, _b;\n\n  const {\n    photo,\n    layout,\n    layoutOptions,\n    imageProps: {\n      style,\n      ...restImageProps\n    } = {},\n    renderPhoto\n  } = props;\n  const {\n    onClick\n  } = layoutOptions;\n  const imageStyle = {\n    display: \"block\",\n    boxSizing: \"content-box\",\n    width: cssWidth$1(layout, layoutOptions),\n    height: \"auto\",\n    aspectRatio: `${photo.width} / ${photo.height}`,\n    ...(layoutOptions.padding ? {\n      padding: `${layoutOptions.padding}px`\n    } : null),\n    ...((layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") && layout.photoIndex < layout.photosCount - 1 ? {\n      marginBottom: `${layoutOptions.spacing}px`\n    } : null),\n    ...(onClick ? {\n      cursor: \"pointer\"\n    } : null),\n    ...style\n  };\n  const handleClick = onClick ? event => {\n    onClick(event, photo, layout.index);\n  } : undefined;\n  const imageProps = {\n    src: photo.src,\n    alt: (_a = photo.alt) !== null && _a !== void 0 ? _a : \"\",\n    title: photo.title,\n    onClick: handleClick,\n    style: imageStyle,\n    className: \"react-photo-album--photo\",\n    ...srcSetAndSizes(photo, layout, layoutOptions),\n    ...restImageProps\n  };\n\n  const renderDefaultPhoto = function () {\n    let {\n      wrapped\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      src,\n      alt,\n      srcSet,\n      sizes,\n      style,\n      ...rest\n    } = imageProps;\n    return jsx(\"img\", {\n      alt: alt,\n      ...(srcSet ? {\n        srcSet,\n        sizes\n      } : null),\n      src: src,\n      style: wrapped ? {\n        display: \"block\",\n        width: \"100%\",\n        height: \"100%\"\n      } : style,\n      ...rest\n    });\n  };\n\n  const wrapperStyle = (_ref10 => {\n    let {\n      display,\n      boxSizing,\n      width,\n      aspectRatio,\n      padding,\n      marginBottom\n    } = _ref10;\n    return {\n      display,\n      boxSizing,\n      width,\n      aspectRatio,\n      padding,\n      marginBottom\n    };\n  })(imageStyle);\n\n  return jsx(Fragment, {\n    children: (_b = renderPhoto === null || renderPhoto === void 0 ? void 0 : renderPhoto({\n      photo,\n      layout,\n      layoutOptions,\n      imageProps,\n      renderDefaultPhoto,\n      wrapperStyle\n    })) !== null && _b !== void 0 ? _b : renderDefaultPhoto()\n  });\n};\n\nconst defaultRenderRowContainer = _ref11 => {\n  let {\n    rowContainerProps,\n    children\n  } = _ref11;\n  return jsx(\"div\", { ...rowContainerProps,\n    children: children\n  });\n};\n\nconst RowContainerRenderer = props => {\n  const {\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    renderRowContainer,\n    rowContainerProps: {\n      style,\n      ...restRowContainerProps\n    } = {},\n    children\n  } = props;\n  const rowContainerProps = {\n    className: \"react-photo-album--row\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      justifyContent: \"space-between\",\n      ...(rowIndex < rowsCount - 1 ? {\n        marginBottom: `${layoutOptions.spacing}px`\n      } : null),\n      ...style\n    },\n    ...restRowContainerProps\n  };\n  return jsx(Fragment, {\n    children: (renderRowContainer !== null && renderRowContainer !== void 0 ? renderRowContainer : defaultRenderRowContainer)({\n      layoutOptions,\n      rowIndex,\n      rowsCount,\n      rowContainerProps,\n      children\n    })\n  });\n};\n\nconst RowsLayout = props => {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderRowContainer,\n    componentsProps,\n    instrumentation\n  } = props;\n  const rowsLayout = computeRowsLayout({\n    photos,\n    layoutOptions,\n    instrumentation\n  });\n  if (rowsLayout === undefined) return jsx(Fragment, {});\n  return jsx(Fragment, {\n    children: rowsLayout.map((row, rowIndex) => jsx(RowContainerRenderer, {\n      layoutOptions: layoutOptions,\n      rowIndex: rowIndex,\n      rowsCount: rowsLayout.length,\n      renderRowContainer: renderRowContainer,\n      rowContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.rowContainerProps,\n      children: row.map(_ref12 => {\n        let {\n          photo,\n          layout\n        } = _ref12;\n        return jsx(PhotoRenderer, {\n          photo: photo,\n          layout: layout,\n          layoutOptions: layoutOptions,\n          renderPhoto: renderPhoto,\n          imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps\n        }, photo.key || photo.src);\n      })\n    }, `row-${rowIndex}`))\n  });\n};\n\nconst computeShortestPath = (graph, pathLength, startNode, endNode) => {\n  const comp = [];\n  const queue = {\n    0: {\n      [startNode]: null\n    }\n  };\n\n  for (let length = 0; length < pathLength; length += 1) {\n    Object.keys(queue[length]).forEach(n => {\n      const node = +n;\n      const accumulatedWeight = length > 0 && comp[node][length] ? comp[node][length][1] : 0;\n      graph(node).forEach(_ref13 => {\n        let {\n          neighbor,\n          weight\n        } = _ref13;\n\n        if (!comp[neighbor]) {\n          comp[neighbor] = [];\n        }\n\n        const newTotalWeight = accumulatedWeight + weight;\n\n        if (!comp[neighbor][length + 1] || comp[neighbor][length + 1][1] > newTotalWeight && (comp[neighbor][length + 1][1] / newTotalWeight > 1.0001 || node < comp[neighbor][length + 1][0])) {\n          comp[neighbor][length + 1] = [node, newTotalWeight];\n        }\n\n        if (length < pathLength - 1 && neighbor !== endNode) {\n          if (!queue[length + 1]) {\n            queue[length + 1] = {};\n          }\n\n          queue[length + 1][neighbor] = null;\n        }\n      });\n    });\n  }\n\n  return comp;\n};\n\nconst reconstructShortestPath = (comp, pathLength, endNode) => {\n  const path = [endNode];\n\n  for (let node = endNode, length = pathLength; length > 0; length -= 1) {\n    const [prevNode] = comp[node][length];\n    node = prevNode;\n    path.push(node);\n  }\n\n  return path.reverse();\n};\n\nconst findShortestPathLengthN = (graph, pathLength, startNode, endNode) => reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n\nconst makeGetNeighbors = _ref14 => {\n  let {\n    photos,\n    spacing,\n    padding,\n    targetColumnWidth,\n    targetColumnHeight,\n    instrumentation\n  } = _ref14;\n  return node => {\n    const results = [];\n    const cutOffHeight = targetColumnHeight * 1.5;\n    let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\n\n    for (let i = node + 1; i < photos.length + 1; i += 1) {\n      results.push({\n        neighbor: i,\n        weight: (targetColumnHeight - height) ** 2\n      });\n\n      if (height > cutOffHeight && !(instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.fullGraphSearch) || i === photos.length) {\n        break;\n      }\n\n      height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\n    }\n\n    return results;\n  };\n};\n\nconst buildColumnsModel = _ref15 => {\n  let {\n    path,\n    photos,\n    containerWidth,\n    columnsGaps,\n    columnsRatios,\n    spacing,\n    padding\n  } = _ref15;\n  const columnsModel = [];\n  const totalRatio = columnsRatios.reduce((acc, ratio) => acc + ratio, 0);\n\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.map((photo, index) => ({\n      photo,\n      index\n    })).slice(path[i], path[i + 1]);\n    const totalAdjustedGaps = columnsRatios.reduce((acc, ratio, index) => acc + (columnsGaps[i] - columnsGaps[index]) * ratio, 0);\n    const columnWidth = (containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) * columnsRatios[i] / totalRatio;\n    columnsModel.push(column.map((_ref16, photoIndex) => {\n      let {\n        photo,\n        index\n      } = _ref16;\n      return {\n        photo,\n        layout: {\n          width: columnWidth,\n          height: columnWidth / ratio(photo),\n          index,\n          photoIndex,\n          photosCount: column.length\n        }\n      };\n    }));\n  }\n\n  return columnsModel;\n};\n\nconst computeColumnsModel = _ref17 => {\n  let {\n    photos,\n    layoutOptions,\n    targetColumnWidth,\n    instrumentation\n  } = _ref17;\n\n  var _a;\n\n  const {\n    columns,\n    spacing,\n    padding,\n    containerWidth\n  } = layoutOptions;\n  const columnsGaps = [];\n  const columnsRatios = [];\n\n  if (photos.length <= columns) {\n    for (let index = 0; index < photos.length; index += 1) {\n      columnsGaps[index] = 2 * padding;\n      columnsRatios[index] = ratio(photos[index]);\n    }\n\n    const columnsModel = buildColumnsModel({\n      path: Array.from({\n        length: photos.length + 1\n      }).map((_, index) => index),\n      photos,\n      columnsRatios,\n      columnsGaps,\n      containerWidth,\n      spacing,\n      padding\n    });\n\n    for (let i = photos.length; i < (((_a = layoutOptions.columnConstraints) === null || _a === void 0 ? void 0 : _a.minColumns) || 0); i += 1) {\n      columnsGaps[i] = 0;\n      columnsRatios[i] = photos.length > 0 ? photos.reduce((acc, photo) => acc + ratio(photo), 0) / photos.length : 1;\n      columnsModel[i] = [];\n    }\n\n    return {\n      columnsGaps,\n      columnsRatios,\n      columnsModel\n    };\n  }\n\n  const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) + spacing * (photos.length - columns) + 2 * padding * photos.length) / columns;\n  const getNeighbors = makeGetNeighbors({\n    photos,\n    targetColumnWidth,\n    targetColumnHeight,\n    spacing,\n    padding,\n    instrumentation\n  });\n  const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length).map(node => +node);\n\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.slice(path[i], path[i + 1]);\n    columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\n    columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\n  }\n\n  const columnsModel = buildColumnsModel({\n    path,\n    photos,\n    columnsRatios,\n    columnsGaps,\n    containerWidth,\n    spacing,\n    padding\n  });\n  return {\n    columnsGaps,\n    columnsRatios,\n    columnsModel\n  };\n};\n\nconst computeLayout = props => {\n  const {\n    photos,\n    layoutOptions,\n    instrumentation\n  } = props;\n  const {\n    columns,\n    spacing,\n    padding,\n    containerWidth\n  } = layoutOptions;\n  const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  const {\n    columnsGaps,\n    columnsRatios,\n    columnsModel\n  } = computeColumnsModel({\n    photos,\n    layoutOptions,\n    targetColumnWidth,\n    instrumentation\n  });\n\n  if (columnsModel.findIndex(columnModel => columnModel.findIndex(_ref18 => {\n    let {\n      layout: {\n        width,\n        height\n      }\n    } = _ref18;\n    return width < 0 || height < 0;\n  }) >= 0) >= 0) {\n    if (columns > 1) {\n      return computeLayout({\n        photos,\n        layoutOptions: { ...layoutOptions,\n          columns: columns - 1\n        },\n        instrumentation\n      });\n    } else {\n      return undefined;\n    }\n  }\n\n  return {\n    columnsModel,\n    columnsGaps,\n    columnsRatios\n  };\n};\n\nconst computeColumnsLayout = _ref19 => {\n  let {\n    photos,\n    layoutOptions,\n    instrumentation\n  } = _ref19;\n\n  var _a, _b, _c;\n\n  (_a = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onStartLayoutComputation) === null || _a === void 0 ? void 0 : _a.call(instrumentation);\n  const result = computeLayout({\n    photos,\n    layoutOptions: { ...layoutOptions,\n      columns: Math.min(layoutOptions.columns, Math.max(photos.length, ((_b = layoutOptions.columnConstraints) === null || _b === void 0 ? void 0 : _b.minColumns) || 0))\n    },\n    instrumentation\n  });\n  (_c = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onFinishLayoutComputation) === null || _c === void 0 ? void 0 : _c.call(instrumentation, result);\n  return result;\n};\n\nconst defaultRenderColumnContainer = _ref20 => {\n  let {\n    columnContainerProps,\n    children\n  } = _ref20;\n  return jsx(\"div\", { ...columnContainerProps,\n    children: children\n  });\n};\n\nconst cssWidth = props => {\n  const {\n    layoutOptions,\n    columnIndex,\n    columnsCount,\n    columnsGaps,\n    columnsRatios\n  } = props;\n  const {\n    layout,\n    spacing,\n    padding\n  } = layoutOptions;\n\n  if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\n    return `calc((100% - ${spacing * (columnsCount - 1)}px) / ${columnsCount})`;\n  }\n\n  const totalRatio = columnsRatios.reduce((acc, ratio) => acc + ratio, 0);\n  const totalAdjustedGaps = columnsRatios.reduce((acc, ratio, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio, 0);\n  return `calc((100% - ${round((columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps, 3)}px) * ${round(columnsRatios[columnIndex] / totalRatio, 5)} + ${2 * padding}px)`;\n};\n\nconst ColumnContainerRenderer = props => {\n  const {\n    layoutOptions,\n    renderColumnContainer,\n    children,\n    columnContainerProps: {\n      style,\n      ...restColumnContainerProps\n    } = {},\n    ...rest\n  } = props;\n  const columnContainerProps = {\n    className: \"react-photo-album--column\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      width: cssWidth(props),\n      justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\n      ...style\n    },\n    ...restColumnContainerProps\n  };\n  return jsx(Fragment, {\n    children: (renderColumnContainer !== null && renderColumnContainer !== void 0 ? renderColumnContainer : defaultRenderColumnContainer)({\n      layoutOptions,\n      columnContainerProps,\n      children,\n      ...rest\n    })\n  });\n};\n\nconst ColumnsLayout = props => {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps,\n    instrumentation\n  } = props;\n  const columnsLayout = computeColumnsLayout({\n    photos,\n    layoutOptions,\n    instrumentation\n  });\n  if (columnsLayout === undefined) return jsx(Fragment, {});\n  const {\n    columnsModel,\n    columnsRatios,\n    columnsGaps\n  } = columnsLayout;\n  return jsx(Fragment, {\n    children: columnsModel.map((column, columnIndex) => jsx(ColumnContainerRenderer, {\n      layoutOptions: layoutOptions,\n      columnIndex: columnIndex,\n      columnsCount: columnsModel.length,\n      columnsGaps: columnsGaps,\n      columnsRatios: columnsRatios,\n      renderColumnContainer: renderColumnContainer,\n      columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps,\n      children: column.map(_ref21 => {\n        let {\n          photo,\n          layout\n        } = _ref21;\n        return jsx(PhotoRenderer, {\n          photo: photo,\n          layout: layout,\n          layoutOptions: layoutOptions,\n          renderPhoto: renderPhoto,\n          imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps\n        }, photo.key || photo.src);\n      })\n    }, `column-${columnIndex}`))\n  });\n};\n\nconst computeMasonryLayout = props => {\n  var _a, _b, _c;\n\n  const {\n    photos,\n    layoutOptions,\n    instrumentation\n  } = props;\n  const {\n    spacing,\n    padding,\n    containerWidth\n  } = layoutOptions;\n  const columns = Math.min(layoutOptions.columns, Math.max(photos.length, ((_a = layoutOptions.columnConstraints) === null || _a === void 0 ? void 0 : _a.minColumns) || 0));\n  (_b = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onStartLayoutComputation) === null || _b === void 0 ? void 0 : _b.call(instrumentation);\n  const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n\n  if (columnWidth <= 0) {\n    return columns > 1 ? computeMasonryLayout({ ...props,\n      layoutOptions: { ...layoutOptions,\n        columns: columns - 1\n      }\n    }) : undefined;\n  }\n\n  const columnsCurrentTopPositions = [];\n\n  for (let i = 0; i < columns; i += 1) {\n    columnsCurrentTopPositions[i] = 0;\n  }\n\n  const columnsModel = photos.reduce((acc, photo, index) => {\n    const shortestColumn = columnsCurrentTopPositions.reduce((acc, item, i) => item < columnsCurrentTopPositions[acc] - 1 ? i : acc, 0);\n    columnsCurrentTopPositions[shortestColumn] = columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\n    acc[shortestColumn].push({\n      photo,\n      index\n    });\n    return acc;\n  }, Array.from({\n    length: columns\n  }).map(() => []));\n  const result = columnsModel.map(column => column.map((_ref22, photoIndex) => {\n    let {\n      photo,\n      index\n    } = _ref22;\n    return {\n      photo,\n      layout: {\n        width: columnWidth,\n        height: columnWidth / ratio(photo),\n        index,\n        photoIndex,\n        photosCount: column.length\n      }\n    };\n  }));\n  (_c = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onFinishLayoutComputation) === null || _c === void 0 ? void 0 : _c.call(instrumentation, result);\n  return result;\n};\n\nconst MasonryLayout = props => {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps,\n    instrumentation\n  } = props;\n  const masonryLayout = computeMasonryLayout({\n    photos,\n    layoutOptions,\n    instrumentation\n  });\n  if (masonryLayout === undefined) return jsx(Fragment, {});\n  return jsx(Fragment, {\n    children: masonryLayout.map((column, columnIndex) => jsx(ColumnContainerRenderer, {\n      layoutOptions: layoutOptions,\n      columnsCount: masonryLayout.length,\n      columnIndex: columnIndex,\n      renderColumnContainer: renderColumnContainer,\n      columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps,\n      children: column.map(_ref23 => {\n        let {\n          photo,\n          layout\n        } = _ref23;\n        return jsx(PhotoRenderer, {\n          photo: photo,\n          layout: layout,\n          layoutOptions: layoutOptions,\n          renderPhoto: renderPhoto,\n          imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps\n        }, photo.key || photo.src);\n      })\n    }, `masonry-column-${columnIndex}`))\n  });\n};\n\nconst defaultRenderContainer = _ref24 => {\n  let {\n    containerProps,\n    children,\n    containerRef\n  } = _ref24;\n  return jsx(\"div\", {\n    ref: containerRef,\n    ...containerProps,\n    children: children\n  });\n};\n\nconst ContainerRenderer = props => {\n  const {\n    layoutOptions,\n    renderContainer,\n    children,\n    containerRef,\n    containerProps: {\n      style,\n      ...restContainerProps\n    } = {}\n  } = props;\n  const {\n    layout\n  } = layoutOptions;\n  const containerProps = {\n    className: `react-photo-album react-photo-album--${layout}`,\n    style: {\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      flexDirection: layout === \"rows\" ? \"column\" : \"row\",\n      ...style\n    },\n    ...restContainerProps\n  };\n\n  if (renderContainer && typeof renderContainer === \"object\") {\n    const Component = renderContainer;\n    return jsx(Component, {\n      ref: containerRef,\n      layoutOptions: layoutOptions,\n      containerProps: containerProps,\n      children: children\n    });\n  }\n\n  return jsx(Fragment, {\n    children: (renderContainer !== null && renderContainer !== void 0 ? renderContainer : defaultRenderContainer)({\n      containerProps,\n      containerRef,\n      layoutOptions,\n      children\n    })\n  });\n};\n\nconst useLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect$1 : useEffect;\n\nconst useEventCallback = fn => {\n  const ref = useRef(fn);\n  useLayoutEffect(() => {\n    ref.current = fn;\n  });\n  return useCallback(function () {\n    var _a;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.call(ref, ...args);\n  }, []);\n};\n\nconst useContainerWidth = (resizeObserverProvider, breakpoints) => {\n  const [containerWidth, setContainerWidth] = useState();\n  const [scrollbarWidth, setScrollbarWidth] = useState();\n  const ref = useRef(null);\n  const observerRef = useRef();\n  const updateWidth = useEventCallback(() => {\n    var _a;\n\n    let newWidth = (_a = ref.current) === null || _a === void 0 ? void 0 : _a.clientWidth;\n\n    if (newWidth !== undefined && breakpoints && breakpoints.length > 0) {\n      const sortedBreakpoints = [...breakpoints.filter(x => x > 0)].sort((a, b) => b - a);\n      sortedBreakpoints.push(Math.floor(sortedBreakpoints[sortedBreakpoints.length - 1] / 2));\n      const threshold = newWidth;\n      newWidth = sortedBreakpoints.find((breakpoint, index) => breakpoint <= threshold || index === sortedBreakpoints.length - 1);\n    }\n\n    const newScrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n\n    if (newScrollbarWidth !== scrollbarWidth) {\n      setScrollbarWidth(newScrollbarWidth);\n    }\n\n    if (containerWidth !== undefined && scrollbarWidth !== undefined && newWidth !== undefined && newWidth > containerWidth && newWidth - containerWidth <= 20 && newScrollbarWidth < scrollbarWidth) {\n      return;\n    }\n\n    if (newWidth !== containerWidth) {\n      setContainerWidth(newWidth);\n    }\n  });\n  const containerRef = useEventCallback(node => {\n    var _a, _b;\n\n    (_a = observerRef.current) === null || _a === void 0 ? void 0 : _a.disconnect();\n    observerRef.current = undefined;\n    ref.current = node;\n    updateWidth();\n\n    if (node) {\n      observerRef.current = typeof ResizeObserver !== \"undefined\" ? new ResizeObserver(updateWidth) : resizeObserverProvider === null || resizeObserverProvider === void 0 ? void 0 : resizeObserverProvider(updateWidth);\n      (_b = observerRef.current) === null || _b === void 0 ? void 0 : _b.observe(node);\n    }\n  });\n  return {\n    containerRef,\n    containerWidth\n  };\n};\n\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\n\nconst unwrap = (value, containerWidth) => typeof value === \"function\" ? value(containerWidth) : value;\n\nconst unwrapParameter = (value, containerWidth) => typeof value !== \"undefined\" ? unwrap(value, containerWidth) : undefined;\n\nconst selectResponsiveValue = (values, containerWidth) => {\n  const index = breakpoints.findIndex(breakpoint => breakpoint <= containerWidth);\n  return unwrap(values[index >= 0 ? index : 0], containerWidth);\n};\n\nconst resolveResponsiveParameter = function (parameter, containerWidth, values) {\n  let minValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  const value = unwrapParameter(parameter, containerWidth);\n  return Math.round(Math.max(value === undefined ? selectResponsiveValue(values, containerWidth) : value, minValue));\n};\n\nconst resolveLayoutOptions = _ref25 => {\n  let {\n    layout,\n    onClick,\n    viewportWidth,\n    containerWidth,\n    targetRowHeight,\n    rowConstraints,\n    columnConstraints,\n    columns,\n    spacing,\n    padding,\n    sizes\n  } = _ref25;\n  return {\n    layout,\n    onClick,\n    viewportWidth,\n    containerWidth,\n    columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\n    spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\n    padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\n    targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [w => w / 5, w => w / 4, w => w / 3, w => w / 2]),\n    rowConstraints: unwrapParameter(rowConstraints, containerWidth),\n    columnConstraints: unwrapParameter(columnConstraints, containerWidth),\n    sizes\n  };\n};\n\nconst resolveComponentsProps = (componentsProps, containerWidth) => typeof componentsProps === \"function\" ? componentsProps(containerWidth) : componentsProps;\n\nconst PhotoAlbum = props => {\n  const {\n    photos,\n    layout,\n    renderPhoto,\n    renderContainer,\n    renderRowContainer,\n    renderColumnContainer,\n    defaultContainerWidth,\n    resizeObserverProvider,\n    breakpoints,\n    instrumentation\n  } = props;\n  const [mounted, setMounted] = useState(false);\n  const {\n    containerRef,\n    containerWidth\n  } = useContainerWidth(resizeObserverProvider, breakpoints);\n  useLayoutEffect(() => setMounted(true), []);\n  if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos)) return jsx(Fragment, {});\n  const layoutOptions = resolveLayoutOptions({\n    containerWidth: mounted && containerWidth || defaultContainerWidth || 800,\n    viewportWidth: mounted && window.innerWidth || undefined,\n    ...props\n  });\n  const componentsProps = resolveComponentsProps(props.componentsProps, layoutOptions.containerWidth);\n  const commonLayoutProps = {\n    photos,\n    renderPhoto,\n    componentsProps,\n    instrumentation\n  };\n  return jsx(ContainerRenderer, {\n    containerRef: containerRef,\n    layoutOptions: layoutOptions,\n    renderContainer: renderContainer,\n    containerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.containerProps,\n    children: layout === \"rows\" ? jsx(RowsLayout, {\n      layoutOptions: layoutOptions,\n      renderRowContainer: renderRowContainer,\n      ...commonLayoutProps\n    }) : layout === \"columns\" ? jsx(ColumnsLayout, {\n      layoutOptions: layoutOptions,\n      renderColumnContainer: renderColumnContainer,\n      ...commonLayoutProps\n    }) : jsx(MasonryLayout, {\n      layoutOptions: layoutOptions,\n      renderColumnContainer: renderColumnContainer,\n      ...commonLayoutProps\n    })\n  });\n};\n\nexport { PhotoAlbum, PhotoAlbum as default };","map":{"version":3,"names":["jsx","Fragment","useLayoutEffect","useLayoutEffect$1","useEffect","useRef","useCallback","useState","ratio","width","height","round","value","decimals","factor","Math","Number","EPSILON","RankingFunctionComparator","rank","a","b","MinHeap","comparator","heap","compare","n","greater","i","j","swap","temp","swim","k","k2","sink","push","element","pop","undefined","max","size","buildPrecedentsMap","graph","startNode","endNode","precedentsMap","visited","storedShortestPaths","pQueue","el","weight","id","shortestNode","shortestNodeId","neighboringNodes","neighbor","newTotalWeight","getPathFromPrecedentsMap","nodes","reverse","findShortestPath","findIdealNodeSearch","photos","targetRowHeight","containerWidth","minRatio","reduce","acc","photo","min","MAX_VALUE","getCommonHeight","row","spacing","padding","rowWidth","length","totalAspectRatio","cost","slice","commonHeight","makeGetNeighbors$1","layoutOptions","limitNodeSearch","rowConstraints","instrumentation","node","_a","_b","results","start","startOffset","minPhotos","endOffset","maxPhotos","Infinity","fullGraphSearch","currentCost","toString","computeRowsLayout","onStartLayoutComputation","call","getNeighbors","path","result","map","index","photoIndex","layout","photosCount","onFinishLayoutComputation","calcWidth","base","gaps","cssWidth$1","calculateSizesValue","match","srcSetAndSizes","srcSet","sizes","images","concat","src","sort","first","second","image","join","viewport","ceil","viewportWidth","PhotoRenderer","props","imageProps","style","restImageProps","renderPhoto","onClick","imageStyle","display","boxSizing","aspectRatio","marginBottom","cursor","handleClick","event","alt","title","className","renderDefaultPhoto","wrapped","rest","wrapperStyle","children","defaultRenderRowContainer","rowContainerProps","RowContainerRenderer","rowIndex","rowsCount","renderRowContainer","restRowContainerProps","flexDirection","flexWrap","alignItems","justifyContent","RowsLayout","componentsProps","rowsLayout","key","computeShortestPath","pathLength","comp","queue","Object","keys","forEach","accumulatedWeight","reconstructShortestPath","prevNode","findShortestPathLengthN","makeGetNeighbors","targetColumnWidth","targetColumnHeight","cutOffHeight","buildColumnsModel","columnsGaps","columnsRatios","columnsModel","totalRatio","column","totalAdjustedGaps","columnWidth","computeColumnsModel","columns","Array","from","_","columnConstraints","minColumns","computeLayout","findIndex","columnModel","computeColumnsLayout","_c","defaultRenderColumnContainer","columnContainerProps","cssWidth","columnIndex","columnsCount","ColumnContainerRenderer","renderColumnContainer","restColumnContainerProps","ColumnsLayout","columnsLayout","computeMasonryLayout","columnsCurrentTopPositions","shortestColumn","item","MasonryLayout","masonryLayout","defaultRenderContainer","containerProps","containerRef","ref","ContainerRenderer","renderContainer","restContainerProps","Component","window","useEventCallback","fn","current","args","useContainerWidth","resizeObserverProvider","breakpoints","setContainerWidth","scrollbarWidth","setScrollbarWidth","observerRef","updateWidth","newWidth","clientWidth","sortedBreakpoints","filter","x","floor","threshold","find","breakpoint","newScrollbarWidth","innerWidth","document","documentElement","disconnect","ResizeObserver","observe","freeze","unwrap","unwrapParameter","selectResponsiveValue","values","resolveResponsiveParameter","parameter","minValue","resolveLayoutOptions","w","resolveComponentsProps","PhotoAlbum","defaultContainerWidth","mounted","setMounted","includes","isArray","commonLayoutProps","default"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/react-photo-album/dist/index.esm.js"],"sourcesContent":["import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useLayoutEffect as useLayoutEffect$1, useEffect, useRef, useCallback, useState } from 'react';\n\nconst ratio = ({ width, height }) => width / height;\n\nconst round = (value, decimals = 0) => {\r\n    const factor = 10 ** decimals;\r\n    return Math.round((value + Number.EPSILON) * factor) / factor;\r\n};\n\nconst RankingFunctionComparator = (rank) => (a, b) => rank(b) - rank(a);\r\nconst MinHeap = (comparator) => {\r\n    const heap = [];\r\n    const compare = comparator;\r\n    let n = 0;\r\n    const greater = (i, j) => compare(heap[i], heap[j]) < 0;\r\n    const swap = (i, j) => {\r\n        const temp = heap[i];\r\n        heap[i] = heap[j];\r\n        heap[j] = temp;\r\n    };\r\n    const swim = (k) => {\r\n        let k2 = k >> 1;\r\n        while (k > 1 && greater(k2, k)) {\r\n            swap(k2, k);\r\n            k = k2;\r\n            k2 = k >> 1;\r\n        }\r\n    };\r\n    const sink = (k) => {\r\n        let j = k << 1;\r\n        while (j <= n) {\r\n            if (j < n && greater(j, j + 1))\r\n                j++;\r\n            if (!greater(k, j))\r\n                break;\r\n            swap(k, j);\r\n            k = j;\r\n            j = k << 1;\r\n        }\r\n    };\r\n    return {\r\n        push: (element) => {\r\n            n += 1;\r\n            heap[n] = element;\r\n            swim(n);\r\n        },\r\n        pop: () => {\r\n            if (n === 0)\r\n                return undefined;\r\n            swap(1, n);\r\n            n -= 1;\r\n            const max = heap.pop();\r\n            sink(1);\r\n            return max;\r\n        },\r\n        size: () => n,\r\n    };\r\n};\n\nconst buildPrecedentsMap = (graph, startNode, endNode) => {\r\n    const precedentsMap = {};\r\n    const visited = {};\r\n    const storedShortestPaths = {};\r\n    storedShortestPaths[startNode] = 0;\r\n    const pQueue = MinHeap(RankingFunctionComparator((el) => el.weight));\r\n    pQueue.push({ id: startNode, weight: 0 });\r\n    let shortestNode;\r\n    while ((shortestNode = pQueue.pop()) !== undefined) {\r\n        const shortestNodeId = shortestNode.id;\r\n        if (visited[shortestNodeId])\r\n            continue;\r\n        const neighboringNodes = graph(shortestNodeId);\r\n        visited[shortestNodeId] = 1;\r\n        for (const neighbor in neighboringNodes) {\r\n            const newTotalWeight = shortestNode.weight + neighboringNodes[neighbor];\r\n            if (storedShortestPaths[neighbor] === undefined ||\r\n                (storedShortestPaths[neighbor] > newTotalWeight &&\r\n                    (storedShortestPaths[neighbor] / newTotalWeight > 1.005 ||\r\n                        precedentsMap[neighbor] < shortestNodeId))) {\r\n                storedShortestPaths[neighbor] = newTotalWeight;\r\n                pQueue.push({ id: neighbor, weight: newTotalWeight });\r\n                precedentsMap[neighbor] = shortestNodeId;\r\n            }\r\n        }\r\n    }\r\n    if (typeof storedShortestPaths[endNode] === \"undefined\") {\r\n        return undefined;\r\n    }\r\n    return precedentsMap;\r\n};\r\nconst getPathFromPrecedentsMap = (precedentsMap, endNode) => {\r\n    const nodes = [];\r\n    let n = endNode;\r\n    while (n) {\r\n        nodes.push(n);\r\n        n = precedentsMap[n];\r\n    }\r\n    return nodes.reverse();\r\n};\r\nconst findShortestPath = (graph, startNode, endNode) => {\r\n    const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\r\n    return precedentsMap !== undefined ? getPathFromPrecedentsMap(precedentsMap, endNode) : undefined;\r\n};\n\nconst findIdealNodeSearch = ({ photos, targetRowHeight, containerWidth, }) => {\r\n    const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\r\n    return round(containerWidth / targetRowHeight / minRatio) + 2;\r\n};\r\nconst getCommonHeight = (row, containerWidth, spacing, padding) => {\r\n    const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\r\n    const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\r\n    return rowWidth / totalAspectRatio;\r\n};\r\nconst cost = (photos, i, j, width, targetRowHeight, spacing, padding) => {\r\n    const row = photos.slice(i, j);\r\n    const commonHeight = getCommonHeight(row, width, spacing, padding);\r\n    return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : undefined;\r\n};\r\nconst makeGetNeighbors$1 = ({ photos, layoutOptions, targetRowHeight, limitNodeSearch, rowConstraints, instrumentation, }) => (node) => {\r\n    var _a, _b;\r\n    const { containerWidth, spacing, padding } = layoutOptions;\r\n    const results = {};\r\n    const start = +node;\r\n    results[+start] = 0;\r\n    const startOffset = (_a = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.minPhotos) !== null && _a !== void 0 ? _a : 1;\r\n    const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.maxPhotos) !== null && _b !== void 0 ? _b : Infinity);\r\n    for (let i = start + startOffset; i < photos.length + 1; i += 1) {\r\n        if (i - start > endOffset && !(instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.fullGraphSearch))\r\n            break;\r\n        const currentCost = cost(photos, start, i, containerWidth, targetRowHeight, spacing, padding);\r\n        if (currentCost === undefined)\r\n            break;\r\n        results[i.toString()] = currentCost;\r\n    }\r\n    return results;\r\n};\r\nconst computeRowsLayout = ({ photos, layoutOptions, instrumentation, }) => {\r\n    var _a, _b;\r\n    const { spacing, padding, containerWidth, targetRowHeight, rowConstraints } = layoutOptions;\r\n    (_a = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onStartLayoutComputation) === null || _a === void 0 ? void 0 : _a.call(instrumentation);\r\n    const limitNodeSearch = findIdealNodeSearch({ photos, containerWidth, targetRowHeight });\r\n    const getNeighbors = makeGetNeighbors$1({\r\n        photos,\r\n        layoutOptions,\r\n        targetRowHeight,\r\n        limitNodeSearch,\r\n        rowConstraints,\r\n        instrumentation,\r\n    });\r\n    const path = findShortestPath(getNeighbors, \"0\", `${photos.length}`);\r\n    if (path === undefined)\r\n        return undefined;\r\n    const result = [];\r\n    for (let i = 1; i < path.length; i += 1) {\r\n        const row = photos.map((photo, index) => ({ photo, index })).slice(+path[i - 1], +path[i]);\r\n        const height = getCommonHeight(row.map(({ photo }) => photo), containerWidth, spacing, padding);\r\n        result.push(row.map(({ photo, index }, photoIndex) => ({\r\n            photo,\r\n            layout: {\r\n                height,\r\n                width: height * ratio(photo),\r\n                index,\r\n                photoIndex,\r\n                photosCount: row.length,\r\n            },\r\n        })));\r\n    }\r\n    (_b = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onFinishLayoutComputation) === null || _b === void 0 ? void 0 : _b.call(instrumentation, result);\r\n    return result;\r\n};\n\nconst calcWidth = (base, { width, photosCount }, { spacing, padding, containerWidth }) => {\r\n    const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\r\n    return `calc((${base} - ${gaps}px) / ${round((containerWidth - gaps) / width, 5)})`;\r\n};\r\nconst cssWidth$1 = (layout, layoutOptions) => {\r\n    if (layoutOptions.layout !== \"rows\") {\r\n        return `calc(100% - ${2 * layoutOptions.padding}px)`;\r\n    }\r\n    return calcWidth(\"100%\", layout, layoutOptions);\r\n};\r\nconst calculateSizesValue = (size, layout, layoutOptions) => { var _a, _b; return calcWidth((_b = (_a = size.match(/calc\\((.*)\\)/)) === null || _a === void 0 ? void 0 : _a[1]) !== null && _b !== void 0 ? _b : size, layout, layoutOptions); };\r\nconst srcSetAndSizes = (photo, layout, layoutOptions) => {\r\n    let srcSet, sizes;\r\n    if (photo.images && photo.images.length > 0) {\r\n        srcSet = photo.images\r\n            .concat([\r\n            {\r\n                src: photo.src,\r\n                width: photo.width,\r\n                height: photo.height,\r\n            },\r\n        ])\r\n            .sort((first, second) => first.width - second.width)\r\n            .map((image) => `${image.src} ${image.width}w`)\r\n            .join(\", \");\r\n    }\r\n    if (layoutOptions.sizes) {\r\n        sizes = (layoutOptions.sizes.sizes || [])\r\n            .map(({ viewport, size }) => `${viewport} ${calculateSizesValue(size, layout, layoutOptions)}`)\r\n            .concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions))\r\n            .join(\", \");\r\n    }\r\n    else {\r\n        sizes = `${Math.ceil((layout.width / (layoutOptions.viewportWidth || layoutOptions.containerWidth)) * 100)}vw`;\r\n    }\r\n    return { srcSet, sizes };\r\n};\r\nconst PhotoRenderer = (props) => {\r\n    var _a, _b;\r\n    const { photo, layout, layoutOptions, imageProps: { style, ...restImageProps } = {}, renderPhoto } = props;\r\n    const { onClick } = layoutOptions;\r\n    const imageStyle = {\r\n        display: \"block\",\r\n        boxSizing: \"content-box\",\r\n        width: cssWidth$1(layout, layoutOptions),\r\n        height: \"auto\",\r\n        aspectRatio: `${photo.width} / ${photo.height}`,\r\n        ...(layoutOptions.padding ? { padding: `${layoutOptions.padding}px` } : null),\r\n        ...((layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") &&\r\n            layout.photoIndex < layout.photosCount - 1\r\n            ? { marginBottom: `${layoutOptions.spacing}px` }\r\n            : null),\r\n        ...(onClick ? { cursor: \"pointer\" } : null),\r\n        ...style,\r\n    };\r\n    const handleClick = onClick\r\n        ? (event) => {\r\n            onClick(event, photo, layout.index);\r\n        }\r\n        : undefined;\r\n    const imageProps = {\r\n        src: photo.src,\r\n        alt: (_a = photo.alt) !== null && _a !== void 0 ? _a : \"\",\r\n        title: photo.title,\r\n        onClick: handleClick,\r\n        style: imageStyle,\r\n        className: \"react-photo-album--photo\",\r\n        ...srcSetAndSizes(photo, layout, layoutOptions),\r\n        ...restImageProps,\r\n    };\r\n    const renderDefaultPhoto = ({ wrapped } = {}) => {\r\n        const { src, alt, srcSet, sizes, style, ...rest } = imageProps;\r\n        return (jsx(\"img\", { alt: alt, ...(srcSet ? { srcSet, sizes } : null), src: src, style: wrapped ? { display: \"block\", width: \"100%\", height: \"100%\" } : style, ...rest }));\r\n    };\r\n    const wrapperStyle = (({ display, boxSizing, width, aspectRatio, padding, marginBottom }) => ({\r\n        display,\r\n        boxSizing,\r\n        width,\r\n        aspectRatio,\r\n        padding,\r\n        marginBottom,\r\n    }))(imageStyle);\r\n    return (jsx(Fragment, { children: (_b = renderPhoto === null || renderPhoto === void 0 ? void 0 : renderPhoto({\r\n            photo,\r\n            layout,\r\n            layoutOptions,\r\n            imageProps,\r\n            renderDefaultPhoto,\r\n            wrapperStyle,\r\n        })) !== null && _b !== void 0 ? _b : renderDefaultPhoto() }));\r\n};\n\nconst defaultRenderRowContainer = ({ rowContainerProps, children, }) => jsx(\"div\", { ...rowContainerProps, children: children });\r\nconst RowContainerRenderer = (props) => {\r\n    const { layoutOptions, rowIndex, rowsCount, renderRowContainer, rowContainerProps: { style, ...restRowContainerProps } = {}, children, } = props;\r\n    const rowContainerProps = {\r\n        className: \"react-photo-album--row\",\r\n        style: {\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            flexWrap: \"nowrap\",\r\n            alignItems: \"flex-start\",\r\n            justifyContent: \"space-between\",\r\n            ...(rowIndex < rowsCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null),\r\n            ...style,\r\n        },\r\n        ...restRowContainerProps,\r\n    };\r\n    return (jsx(Fragment, { children: (renderRowContainer !== null && renderRowContainer !== void 0 ? renderRowContainer : defaultRenderRowContainer)({\r\n            layoutOptions,\r\n            rowIndex,\r\n            rowsCount,\r\n            rowContainerProps,\r\n            children,\r\n        }) }));\r\n};\n\nconst RowsLayout = (props) => {\r\n    const { photos, layoutOptions, renderPhoto, renderRowContainer, componentsProps, instrumentation } = props;\r\n    const rowsLayout = computeRowsLayout({ photos, layoutOptions, instrumentation });\r\n    if (rowsLayout === undefined)\r\n        return jsx(Fragment, {});\r\n    return (jsx(Fragment, { children: rowsLayout.map((row, rowIndex) => (jsx(RowContainerRenderer, { layoutOptions: layoutOptions, rowIndex: rowIndex, rowsCount: rowsLayout.length, renderRowContainer: renderRowContainer, rowContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.rowContainerProps, children: row.map(({ photo, layout }) => (jsx(PhotoRenderer, { photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }, photo.key || photo.src))) }, `row-${rowIndex}`))) }));\r\n};\n\nconst computeShortestPath = (graph, pathLength, startNode, endNode) => {\r\n    const comp = [];\r\n    const queue = { 0: { [startNode]: null } };\r\n    for (let length = 0; length < pathLength; length += 1) {\r\n        Object.keys(queue[length]).forEach((n) => {\r\n            const node = +n;\r\n            const accumulatedWeight = length > 0 && comp[node][length] ? comp[node][length][1] : 0;\r\n            graph(node).forEach(({ neighbor, weight }) => {\r\n                if (!comp[neighbor]) {\r\n                    comp[neighbor] = [];\r\n                }\r\n                const newTotalWeight = accumulatedWeight + weight;\r\n                if (!comp[neighbor][length + 1] ||\r\n                    (comp[neighbor][length + 1][1] > newTotalWeight &&\r\n                        (comp[neighbor][length + 1][1] / newTotalWeight > 1.0001 ||\r\n                            node < comp[neighbor][length + 1][0]))) {\r\n                    comp[neighbor][length + 1] = [node, newTotalWeight];\r\n                }\r\n                if (length < pathLength - 1 && neighbor !== endNode) {\r\n                    if (!queue[length + 1]) {\r\n                        queue[length + 1] = {};\r\n                    }\r\n                    queue[length + 1][neighbor] = null;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    return comp;\r\n};\r\nconst reconstructShortestPath = (comp, pathLength, endNode) => {\r\n    const path = [endNode];\r\n    for (let node = endNode, length = pathLength; length > 0; length -= 1) {\r\n        const [prevNode] = comp[node][length];\r\n        node = prevNode;\r\n        path.push(node);\r\n    }\r\n    return path.reverse();\r\n};\r\nconst findShortestPathLengthN = (graph, pathLength, startNode, endNode) => reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n\nconst makeGetNeighbors = ({ photos, spacing, padding, targetColumnWidth, targetColumnHeight, instrumentation, }) => (node) => {\r\n    const results = [];\r\n    const cutOffHeight = targetColumnHeight * 1.5;\r\n    let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\r\n    for (let i = node + 1; i < photos.length + 1; i += 1) {\r\n        results.push({ neighbor: i, weight: (targetColumnHeight - height) ** 2 });\r\n        if ((height > cutOffHeight && !(instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.fullGraphSearch)) || i === photos.length) {\r\n            break;\r\n        }\r\n        height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\r\n    }\r\n    return results;\r\n};\r\nconst buildColumnsModel = ({ path, photos, containerWidth, columnsGaps, columnsRatios, spacing, padding, }) => {\r\n    const columnsModel = [];\r\n    const totalRatio = columnsRatios.reduce((acc, ratio) => acc + ratio, 0);\r\n    for (let i = 0; i < path.length - 1; i += 1) {\r\n        const column = photos.map((photo, index) => ({ photo, index })).slice(path[i], path[i + 1]);\r\n        const totalAdjustedGaps = columnsRatios.reduce((acc, ratio, index) => acc + (columnsGaps[i] - columnsGaps[index]) * ratio, 0);\r\n        const columnWidth = ((containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) *\r\n            columnsRatios[i]) /\r\n            totalRatio;\r\n        columnsModel.push(column.map(({ photo, index }, photoIndex) => ({\r\n            photo,\r\n            layout: {\r\n                width: columnWidth,\r\n                height: columnWidth / ratio(photo),\r\n                index,\r\n                photoIndex,\r\n                photosCount: column.length,\r\n            },\r\n        })));\r\n    }\r\n    return columnsModel;\r\n};\r\nconst computeColumnsModel = ({ photos, layoutOptions, targetColumnWidth, instrumentation, }) => {\r\n    var _a;\r\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\r\n    const columnsGaps = [];\r\n    const columnsRatios = [];\r\n    if (photos.length <= columns) {\r\n        for (let index = 0; index < photos.length; index += 1) {\r\n            columnsGaps[index] = 2 * padding;\r\n            columnsRatios[index] = ratio(photos[index]);\r\n        }\r\n        const columnsModel = buildColumnsModel({\r\n            path: Array.from({ length: photos.length + 1 }).map((_, index) => index),\r\n            photos,\r\n            columnsRatios,\r\n            columnsGaps,\r\n            containerWidth,\r\n            spacing,\r\n            padding,\r\n        });\r\n        for (let i = photos.length; i < (((_a = layoutOptions.columnConstraints) === null || _a === void 0 ? void 0 : _a.minColumns) || 0); i += 1) {\r\n            columnsGaps[i] = 0;\r\n            columnsRatios[i] =\r\n                photos.length > 0 ? photos.reduce((acc, photo) => acc + ratio(photo), 0) / photos.length : 1;\r\n            columnsModel[i] = [];\r\n        }\r\n        return { columnsGaps, columnsRatios, columnsModel };\r\n    }\r\n    const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) +\r\n        spacing * (photos.length - columns) +\r\n        2 * padding * photos.length) /\r\n        columns;\r\n    const getNeighbors = makeGetNeighbors({\r\n        photos,\r\n        targetColumnWidth,\r\n        targetColumnHeight,\r\n        spacing,\r\n        padding,\r\n        instrumentation,\r\n    });\r\n    const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length).map((node) => +node);\r\n    for (let i = 0; i < path.length - 1; i += 1) {\r\n        const column = photos.slice(path[i], path[i + 1]);\r\n        columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\r\n        columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\r\n    }\r\n    const columnsModel = buildColumnsModel({\r\n        path,\r\n        photos,\r\n        columnsRatios,\r\n        columnsGaps,\r\n        containerWidth,\r\n        spacing,\r\n        padding,\r\n    });\r\n    return { columnsGaps, columnsRatios, columnsModel };\r\n};\r\nconst computeLayout = (props) => {\r\n    const { photos, layoutOptions, instrumentation } = props;\r\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\r\n    const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\r\n    const { columnsGaps, columnsRatios, columnsModel } = computeColumnsModel({\r\n        photos,\r\n        layoutOptions,\r\n        targetColumnWidth,\r\n        instrumentation,\r\n    });\r\n    if (columnsModel.findIndex((columnModel) => columnModel.findIndex(({ layout: { width, height } }) => width < 0 || height < 0) >= 0) >= 0) {\r\n        if (columns > 1) {\r\n            return computeLayout({\r\n                photos,\r\n                layoutOptions: {\r\n                    ...layoutOptions,\r\n                    columns: columns - 1,\r\n                },\r\n                instrumentation,\r\n            });\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    return { columnsModel, columnsGaps, columnsRatios };\r\n};\r\nconst computeColumnsLayout = ({ photos, layoutOptions, instrumentation, }) => {\r\n    var _a, _b, _c;\r\n    (_a = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onStartLayoutComputation) === null || _a === void 0 ? void 0 : _a.call(instrumentation);\r\n    const result = computeLayout({\r\n        photos,\r\n        layoutOptions: {\r\n            ...layoutOptions,\r\n            columns: Math.min(layoutOptions.columns, Math.max(photos.length, ((_b = layoutOptions.columnConstraints) === null || _b === void 0 ? void 0 : _b.minColumns) || 0)),\r\n        },\r\n        instrumentation,\r\n    });\r\n    (_c = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onFinishLayoutComputation) === null || _c === void 0 ? void 0 : _c.call(instrumentation, result);\r\n    return result;\r\n};\n\nconst defaultRenderColumnContainer = ({ columnContainerProps, children, }) => jsx(\"div\", { ...columnContainerProps, children: children });\r\nconst cssWidth = (props) => {\r\n    const { layoutOptions, columnIndex, columnsCount, columnsGaps, columnsRatios } = props;\r\n    const { layout, spacing, padding } = layoutOptions;\r\n    if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\r\n        return `calc((100% - ${spacing * (columnsCount - 1)}px) / ${columnsCount})`;\r\n    }\r\n    const totalRatio = columnsRatios.reduce((acc, ratio) => acc + ratio, 0);\r\n    const totalAdjustedGaps = columnsRatios.reduce((acc, ratio, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio, 0);\r\n    return `calc((100% - ${round((columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps, 3)}px) * ${round(columnsRatios[columnIndex] / totalRatio, 5)} + ${2 * padding}px)`;\r\n};\r\nconst ColumnContainerRenderer = (props) => {\r\n    const { layoutOptions, renderColumnContainer, children, columnContainerProps: { style, ...restColumnContainerProps } = {}, ...rest } = props;\r\n    const columnContainerProps = {\r\n        className: \"react-photo-album--column\",\r\n        style: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            flexWrap: \"nowrap\",\r\n            alignItems: \"flex-start\",\r\n            width: cssWidth(props),\r\n            justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\r\n            ...style,\r\n        },\r\n        ...restColumnContainerProps,\r\n    };\r\n    return (jsx(Fragment, { children: (renderColumnContainer !== null && renderColumnContainer !== void 0 ? renderColumnContainer : defaultRenderColumnContainer)({\r\n            layoutOptions,\r\n            columnContainerProps,\r\n            children,\r\n            ...rest,\r\n        }) }));\r\n};\n\nconst ColumnsLayout = (props) => {\r\n    const { photos, layoutOptions, renderPhoto, renderColumnContainer, componentsProps, instrumentation } = props;\r\n    const columnsLayout = computeColumnsLayout({ photos, layoutOptions, instrumentation });\r\n    if (columnsLayout === undefined)\r\n        return jsx(Fragment, {});\r\n    const { columnsModel, columnsRatios, columnsGaps } = columnsLayout;\r\n    return (jsx(Fragment, { children: columnsModel.map((column, columnIndex) => (jsx(ColumnContainerRenderer, { layoutOptions: layoutOptions, columnIndex: columnIndex, columnsCount: columnsModel.length, columnsGaps: columnsGaps, columnsRatios: columnsRatios, renderColumnContainer: renderColumnContainer, columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps, children: column.map(({ photo, layout }) => (jsx(PhotoRenderer, { photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }, photo.key || photo.src))) }, `column-${columnIndex}`))) }));\r\n};\n\nconst computeMasonryLayout = (props) => {\r\n    var _a, _b, _c;\r\n    const { photos, layoutOptions, instrumentation } = props;\r\n    const { spacing, padding, containerWidth } = layoutOptions;\r\n    const columns = Math.min(layoutOptions.columns, Math.max(photos.length, ((_a = layoutOptions.columnConstraints) === null || _a === void 0 ? void 0 : _a.minColumns) || 0));\r\n    (_b = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onStartLayoutComputation) === null || _b === void 0 ? void 0 : _b.call(instrumentation);\r\n    const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\r\n    if (columnWidth <= 0) {\r\n        return columns > 1\r\n            ? computeMasonryLayout({\r\n                ...props,\r\n                layoutOptions: { ...layoutOptions, columns: columns - 1 },\r\n            })\r\n            : undefined;\r\n    }\r\n    const columnsCurrentTopPositions = [];\r\n    for (let i = 0; i < columns; i += 1) {\r\n        columnsCurrentTopPositions[i] = 0;\r\n    }\r\n    const columnsModel = photos.reduce((acc, photo, index) => {\r\n        const shortestColumn = columnsCurrentTopPositions.reduce((acc, item, i) => item < columnsCurrentTopPositions[acc] - 1 ? i : acc, 0);\r\n        columnsCurrentTopPositions[shortestColumn] =\r\n            columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\r\n        acc[shortestColumn].push({ photo, index });\r\n        return acc;\r\n    }, Array.from({ length: columns }).map(() => []));\r\n    const result = columnsModel.map((column) => column.map(({ photo, index }, photoIndex) => ({\r\n        photo,\r\n        layout: {\r\n            width: columnWidth,\r\n            height: columnWidth / ratio(photo),\r\n            index,\r\n            photoIndex,\r\n            photosCount: column.length,\r\n        },\r\n    })));\r\n    (_c = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onFinishLayoutComputation) === null || _c === void 0 ? void 0 : _c.call(instrumentation, result);\r\n    return result;\r\n};\n\nconst MasonryLayout = (props) => {\r\n    const { photos, layoutOptions, renderPhoto, renderColumnContainer, componentsProps, instrumentation } = props;\r\n    const masonryLayout = computeMasonryLayout({ photos, layoutOptions, instrumentation });\r\n    if (masonryLayout === undefined)\r\n        return jsx(Fragment, {});\r\n    return (jsx(Fragment, { children: masonryLayout.map((column, columnIndex) => (jsx(ColumnContainerRenderer, { layoutOptions: layoutOptions, columnsCount: masonryLayout.length, columnIndex: columnIndex, renderColumnContainer: renderColumnContainer, columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps, children: column.map(({ photo, layout }) => (jsx(PhotoRenderer, { photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }, photo.key || photo.src))) }, `masonry-column-${columnIndex}`))) }));\r\n};\n\nconst defaultRenderContainer = ({ containerProps, children, containerRef, }) => (jsx(\"div\", { ref: containerRef, ...containerProps, children: children }));\r\nconst ContainerRenderer = (props) => {\r\n    const { layoutOptions, renderContainer, children, containerRef, containerProps: { style, ...restContainerProps } = {}, } = props;\r\n    const { layout } = layoutOptions;\r\n    const containerProps = {\r\n        className: `react-photo-album react-photo-album--${layout}`,\r\n        style: {\r\n            display: \"flex\",\r\n            flexWrap: \"nowrap\",\r\n            justifyContent: \"space-between\",\r\n            flexDirection: layout === \"rows\" ? \"column\" : \"row\",\r\n            ...style,\r\n        },\r\n        ...restContainerProps,\r\n    };\r\n    if (renderContainer && typeof renderContainer === \"object\") {\r\n        const Component = renderContainer;\r\n        return (jsx(Component, { ref: containerRef, layoutOptions: layoutOptions, containerProps: containerProps, children: children }));\r\n    }\r\n    return (jsx(Fragment, { children: (renderContainer !== null && renderContainer !== void 0 ? renderContainer : defaultRenderContainer)({\r\n            containerProps,\r\n            containerRef,\r\n            layoutOptions,\r\n            children,\r\n        }) }));\r\n};\n\nconst useLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect$1 : useEffect;\n\nconst useEventCallback = (fn) => {\r\n    const ref = useRef(fn);\r\n    useLayoutEffect(() => {\r\n        ref.current = fn;\r\n    });\r\n    return useCallback((...args) => { var _a; return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.call(ref, ...args); }, []);\r\n};\n\nconst useContainerWidth = (resizeObserverProvider, breakpoints) => {\r\n    const [containerWidth, setContainerWidth] = useState();\r\n    const [scrollbarWidth, setScrollbarWidth] = useState();\r\n    const ref = useRef(null);\r\n    const observerRef = useRef();\r\n    const updateWidth = useEventCallback(() => {\r\n        var _a;\r\n        let newWidth = (_a = ref.current) === null || _a === void 0 ? void 0 : _a.clientWidth;\r\n        if (newWidth !== undefined && breakpoints && breakpoints.length > 0) {\r\n            const sortedBreakpoints = [...breakpoints.filter((x) => x > 0)].sort((a, b) => b - a);\r\n            sortedBreakpoints.push(Math.floor(sortedBreakpoints[sortedBreakpoints.length - 1] / 2));\r\n            const threshold = newWidth;\r\n            newWidth = sortedBreakpoints.find((breakpoint, index) => breakpoint <= threshold || index === sortedBreakpoints.length - 1);\r\n        }\r\n        const newScrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\r\n        if (newScrollbarWidth !== scrollbarWidth) {\r\n            setScrollbarWidth(newScrollbarWidth);\r\n        }\r\n        if (containerWidth !== undefined &&\r\n            scrollbarWidth !== undefined &&\r\n            newWidth !== undefined &&\r\n            newWidth > containerWidth &&\r\n            newWidth - containerWidth <= 20 &&\r\n            newScrollbarWidth < scrollbarWidth) {\r\n            return;\r\n        }\r\n        if (newWidth !== containerWidth) {\r\n            setContainerWidth(newWidth);\r\n        }\r\n    });\r\n    const containerRef = useEventCallback((node) => {\r\n        var _a, _b;\r\n        (_a = observerRef.current) === null || _a === void 0 ? void 0 : _a.disconnect();\r\n        observerRef.current = undefined;\r\n        ref.current = node;\r\n        updateWidth();\r\n        if (node) {\r\n            observerRef.current =\r\n                typeof ResizeObserver !== \"undefined\"\r\n                    ? new ResizeObserver(updateWidth)\r\n                    : resizeObserverProvider === null || resizeObserverProvider === void 0 ? void 0 : resizeObserverProvider(updateWidth);\r\n            (_b = observerRef.current) === null || _b === void 0 ? void 0 : _b.observe(node);\r\n        }\r\n    });\r\n    return { containerRef, containerWidth };\r\n};\n\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\r\nconst unwrap = (value, containerWidth) => typeof value === \"function\" ? value(containerWidth) : value;\r\nconst unwrapParameter = (value, containerWidth) => typeof value !== \"undefined\" ? unwrap(value, containerWidth) : undefined;\r\nconst selectResponsiveValue = (values, containerWidth) => {\r\n    const index = breakpoints.findIndex((breakpoint) => breakpoint <= containerWidth);\r\n    return unwrap(values[index >= 0 ? index : 0], containerWidth);\r\n};\r\nconst resolveResponsiveParameter = (parameter, containerWidth, values, minValue = 0) => {\r\n    const value = unwrapParameter(parameter, containerWidth);\r\n    return Math.round(Math.max(value === undefined ? selectResponsiveValue(values, containerWidth) : value, minValue));\r\n};\n\nconst resolveLayoutOptions = ({ layout, onClick, viewportWidth, containerWidth, targetRowHeight, rowConstraints, columnConstraints, columns, spacing, padding, sizes, }) => ({\r\n    layout,\r\n    onClick,\r\n    viewportWidth,\r\n    containerWidth,\r\n    columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\r\n    spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\r\n    padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\r\n    targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [\r\n        (w) => w / 5,\r\n        (w) => w / 4,\r\n        (w) => w / 3,\r\n        (w) => w / 2,\r\n    ]),\r\n    rowConstraints: unwrapParameter(rowConstraints, containerWidth),\r\n    columnConstraints: unwrapParameter(columnConstraints, containerWidth),\r\n    sizes,\r\n});\r\nconst resolveComponentsProps = (componentsProps, containerWidth) => typeof componentsProps === \"function\" ? componentsProps(containerWidth) : componentsProps;\r\nconst PhotoAlbum = (props) => {\r\n    const { photos, layout, renderPhoto, renderContainer, renderRowContainer, renderColumnContainer, defaultContainerWidth, resizeObserverProvider, breakpoints, instrumentation, } = props;\r\n    const [mounted, setMounted] = useState(false);\r\n    const { containerRef, containerWidth } = useContainerWidth(resizeObserverProvider, breakpoints);\r\n    useLayoutEffect(() => setMounted(true), []);\r\n    if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos))\r\n        return jsx(Fragment, {});\r\n    const layoutOptions = resolveLayoutOptions({\r\n        containerWidth: (mounted && containerWidth) || defaultContainerWidth || 800,\r\n        viewportWidth: (mounted && window.innerWidth) || undefined,\r\n        ...props,\r\n    });\r\n    const componentsProps = resolveComponentsProps(props.componentsProps, layoutOptions.containerWidth);\r\n    const commonLayoutProps = { photos, renderPhoto, componentsProps, instrumentation };\r\n    return (jsx(ContainerRenderer, { containerRef: containerRef, layoutOptions: layoutOptions, renderContainer: renderContainer, containerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.containerProps, children: layout === \"rows\" ? (jsx(RowsLayout, { layoutOptions: layoutOptions, renderRowContainer: renderRowContainer, ...commonLayoutProps })) : layout === \"columns\" ? (jsx(ColumnsLayout, { layoutOptions: layoutOptions, renderColumnContainer: renderColumnContainer, ...commonLayoutProps })) : (jsx(MasonryLayout, { layoutOptions: layoutOptions, renderColumnContainer: renderColumnContainer, ...commonLayoutProps })) }));\r\n};\n\nexport { PhotoAlbum, PhotoAlbum as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}