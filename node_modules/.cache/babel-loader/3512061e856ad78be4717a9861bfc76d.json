{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ShowBase } from 'ra-core';\nimport { ShowView } from './ShowView';\n/**\n * Page component for the Show view\n *\n * The `<Show>` component handles the headless logic of the Show page:\n * - it calls useShowController to fetch the record from the data provider,\n * - it creates a ShowContext and a RecordContext,\n * - it computes the default page title\n * - it renders the page layout with the correct title and actions\n *\n * `<Show>` is not responsible for rendering the actual page -\n * that's the job of its child component (usually `<SimpleShowLayout>`).\n *\n * @example\n *\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Show, SimpleShowLayout, TextField } from 'react-admin';\n *\n * export const PostShow = () => (\n *     <Show>\n *         <SimpleShowLayout>\n *             <TextField source=\"title\" />\n *         </SimpleShowLayout>\n *     </Show>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostShow } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" show={PostShow} />\n *     </Admin>\n * );\n * export default App;\n *\n * @param {ShowProps} props\n * @param {ReactElement|false} props.actions An element to display above the page content, or false to disable actions.\n * @param {string} props.className A className to apply to the page content.\n * @param {ElementType} props.component The component to use as root component (div by default).\n * @param {boolean} props.emptyWhileLoading Do not display the page content while loading the initial data.\n * @param {string} props.id The id of the resource to display (grabbed from the route params if not defined).\n * @param {Object} props.queryClient Options to pass to the react-query useQuery hook.\n * @param {string} props.resource The resource to fetch from the data provider (grabbed from the ResourceContext if not defined).\n * @param {Object} props.sx Custom style object.\n * @param {ElementType|string} props.title The title of the page. Defaults to `#{resource} #${id}`.\n *\n * @see ShowView for the actual rendering\n */\n\nexport var Show = function (_a) {\n  var id = _a.id,\n      resource = _a.resource,\n      queryOptions = _a.queryOptions,\n      disableAuthentication = _a.disableAuthentication,\n      rest = __rest(_a, [\"id\", \"resource\", \"queryOptions\", \"disableAuthentication\"]);\n\n  return React.createElement(ShowBase, {\n    id: id,\n    disableAuthentication: disableAuthentication,\n    queryOptions: queryOptions,\n    resource: resource\n  }, React.createElement(ShowView, __assign({}, rest)));\n};\nShow.propTypes = {\n  actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  disableAuthentication: PropTypes.bool,\n  emptyWhileLoading: PropTypes.bool,\n  component: PropTypes.elementType,\n  resource: PropTypes.string,\n  title: PropTypes.node,\n  sx: PropTypes.any\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","PropTypes","ShowBase","ShowView","Show","_a","id","resource","queryOptions","disableAuthentication","rest","createElement","propTypes","actions","oneOfType","element","bool","children","node","isRequired","className","string","emptyWhileLoading","component","elementType","title","sx","any"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-ui-materialui/dist/esm/detail/Show.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ShowBase } from 'ra-core';\nimport { ShowView } from './ShowView';\n/**\n * Page component for the Show view\n *\n * The `<Show>` component handles the headless logic of the Show page:\n * - it calls useShowController to fetch the record from the data provider,\n * - it creates a ShowContext and a RecordContext,\n * - it computes the default page title\n * - it renders the page layout with the correct title and actions\n *\n * `<Show>` is not responsible for rendering the actual page -\n * that's the job of its child component (usually `<SimpleShowLayout>`).\n *\n * @example\n *\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Show, SimpleShowLayout, TextField } from 'react-admin';\n *\n * export const PostShow = () => (\n *     <Show>\n *         <SimpleShowLayout>\n *             <TextField source=\"title\" />\n *         </SimpleShowLayout>\n *     </Show>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostShow } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" show={PostShow} />\n *     </Admin>\n * );\n * export default App;\n *\n * @param {ShowProps} props\n * @param {ReactElement|false} props.actions An element to display above the page content, or false to disable actions.\n * @param {string} props.className A className to apply to the page content.\n * @param {ElementType} props.component The component to use as root component (div by default).\n * @param {boolean} props.emptyWhileLoading Do not display the page content while loading the initial data.\n * @param {string} props.id The id of the resource to display (grabbed from the route params if not defined).\n * @param {Object} props.queryClient Options to pass to the react-query useQuery hook.\n * @param {string} props.resource The resource to fetch from the data provider (grabbed from the ResourceContext if not defined).\n * @param {Object} props.sx Custom style object.\n * @param {ElementType|string} props.title The title of the page. Defaults to `#{resource} #${id}`.\n *\n * @see ShowView for the actual rendering\n */\nexport var Show = function (_a) {\n    var id = _a.id, resource = _a.resource, queryOptions = _a.queryOptions, disableAuthentication = _a.disableAuthentication, rest = __rest(_a, [\"id\", \"resource\", \"queryOptions\", \"disableAuthentication\"]);\n    return (React.createElement(ShowBase, { id: id, disableAuthentication: disableAuthentication, queryOptions: queryOptions, resource: resource },\n        React.createElement(ShowView, __assign({}, rest))));\n};\nShow.propTypes = {\n    actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string,\n    disableAuthentication: PropTypes.bool,\n    emptyWhileLoading: PropTypes.bool,\n    component: PropTypes.elementType,\n    resource: PropTypes.string,\n    title: PropTypes.node,\n    sx: PropTypes.any,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}