{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport { useRef } from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { useDataProvider } from './useDataProvider';\nimport undoableEventEmitter from './undoableEventEmitter';\n/**\n * Get a callback to call the dataProvider.update() method, the result and the loading state.\n *\n * @param {string} resource\n * @param {Params} params The update parameters { id, data, previousData, meta }\n * @param {Object} options Options object to pass to the queryClient.\n * May include side effects to be executed upon success or failure, e.g. { onSuccess: () => { refresh(); } }\n * May include a mutation mode (optimistic/pessimistic/undoable), e.g. { mutationMode: 'undoable' }\n *\n * @typedef Params\n * @prop params.id The resource identifier, e.g. 123\n * @prop params.data The updates to merge into the record, e.g. { views: 10 }\n * @prop params.previousData The record before the update is applied\n * @prop params.meta Optional meta data\n *\n * @returns The current mutation state. Destructure as [update, { data, error, isLoading }].\n *\n * The return value updates according to the request state:\n *\n * - initial: [update, { isLoading: false, isIdle: true }]\n * - start:   [update, { isLoading: true }]\n * - success: [update, { data: [data from response], isLoading: false, isSuccess: true }]\n * - error:   [update, { error: [error from response], isLoading: false, isError: true }]\n *\n * The update() function must be called with a resource and a parameter object: update(resource, { id, data, previousData }, options)\n *\n * This hook uses react-query useMutation under the hood.\n * This means the state object contains mutate, isIdle, reset and other react-query methods.\n *\n * @see https://react-query.tanstack.com/reference/useMutation\n *\n * @example // set params when calling the update callback\n *\n * import { useUpdate } from 'react-admin';\n *\n * const IncreaseLikeButton = ({ record }) => {\n *     const diff = { likes: record.likes + 1 };\n *     const [update, { isLoading, error }] = useUpdate();\n *     const handleClick = () => {\n *         update('likes', { id: record.id, data: diff, previousData: record })\n *     }\n *     if (error) { return <p>ERROR</p>; }\n *     return <button disabled={isLoading} onClick={handleClick}>Like</div>;\n * };\n *\n * @example // set params when calling the hook\n *\n * import { useUpdate } from 'react-admin';\n *\n * const IncreaseLikeButton = ({ record }) => {\n *     const diff = { likes: record.likes + 1 };\n *     const [update, { isLoading, error }] = useUpdate('likes', { id: record.id, data: diff, previousData: record });\n *     if (error) { return <p>ERROR</p>; }\n *     return <button disabled={isLoading} onClick={() => update()}>Like</button>;\n * };\n *\n * @example // TypeScript\n * const [update, { data }] = useUpdate<Product>('products', { id, data: diff, previousData: product });\n *                    \\-- data is Product\n */\n\nexport var useUpdate = function (resource, params, options) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var dataProvider = useDataProvider();\n  var queryClient = useQueryClient();\n  var id = params.id,\n      data = params.data,\n      meta = params.meta;\n\n  var _a = options.mutationMode,\n      mutationMode = _a === void 0 ? 'pessimistic' : _a,\n      reactMutationOptions = __rest(options, [\"mutationMode\"]);\n\n  var mode = useRef(mutationMode);\n  var paramsRef = useRef(params);\n  var snapshot = useRef([]);\n\n  var updateCache = function (_a) {\n    var resource = _a.resource,\n        id = _a.id,\n        data = _a.data; // hack: only way to tell react-query not to fetch this query for the next 5 seconds\n    // because setQueryData doesn't accept a stale time option\n\n    var now = Date.now();\n    var updatedAt = mode.current === 'undoable' ? now + 5 * 1000 : now;\n\n    var updateColl = function (old) {\n      if (!old) return;\n      var index = old.findIndex( // eslint-disable-next-line eqeqeq\n      function (record) {\n        return record.id == id;\n      });\n\n      if (index === -1) {\n        return old;\n      }\n\n      return __spreadArray(__spreadArray(__spreadArray([], old.slice(0, index), true), [__assign(__assign({}, old[index]), data)], false), old.slice(index + 1), true);\n    };\n\n    queryClient.setQueryData([resource, 'getOne', {\n      id: String(id),\n      meta: meta\n    }], function (record) {\n      return __assign(__assign({}, record), data);\n    }, {\n      updatedAt: updatedAt\n    });\n    queryClient.setQueriesData([resource, 'getList'], function (res) {\n      return res && res.data ? {\n        data: updateColl(res.data),\n        total: res.total\n      } : res;\n    }, {\n      updatedAt: updatedAt\n    });\n    queryClient.setQueriesData([resource, 'getMany'], function (coll) {\n      return coll && coll.length > 0 ? updateColl(coll) : coll;\n    }, {\n      updatedAt: updatedAt\n    });\n    queryClient.setQueriesData([resource, 'getManyReference'], function (res) {\n      return res && res.data ? {\n        data: updateColl(res.data),\n        total: res.total\n      } : res;\n    }, {\n      updatedAt: updatedAt\n    });\n  };\n\n  var mutation = useMutation(function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.resource,\n        callTimeResource = _c === void 0 ? resource : _c,\n        _d = _b.id,\n        callTimeId = _d === void 0 ? paramsRef.current.id : _d,\n        _e = _b.data,\n        callTimeData = _e === void 0 ? paramsRef.current.data : _e,\n        _f = _b.meta,\n        callTimeMeta = _f === void 0 ? paramsRef.current.meta : _f,\n        _g = _b.previousData,\n        callTimePreviousData = _g === void 0 ? paramsRef.current.previousData : _g;\n\n    return dataProvider.update(callTimeResource, {\n      id: callTimeId,\n      data: callTimeData,\n      previousData: callTimePreviousData,\n      meta: callTimeMeta\n    }).then(function (_a) {\n      var data = _a.data;\n      return data;\n    });\n  }, __assign(__assign({}, reactMutationOptions), {\n    onMutate: function (variables) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var userContext;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!reactMutationOptions.onMutate) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , reactMutationOptions.onMutate(variables)];\n\n            case 1:\n              userContext = _a.sent() || {};\n              return [2\n              /*return*/\n              , __assign({\n                snapshot: snapshot.current\n              }, userContext)];\n\n            case 2:\n              // Return a context object with the snapshot value\n              return [2\n              /*return*/\n              , {\n                snapshot: snapshot.current\n              }];\n          }\n        });\n      });\n    },\n    onError: function (error, variables, context) {\n      if (variables === void 0) {\n        variables = {};\n      }\n\n      if (mode.current === 'optimistic' || mode.current === 'undoable') {\n        // If the mutation fails, use the context returned from onMutate to rollback\n        context.snapshot.forEach(function (_a) {\n          var key = _a[0],\n              value = _a[1];\n          queryClient.setQueryData(key, value);\n        });\n      }\n\n      if (reactMutationOptions.onError) {\n        return reactMutationOptions.onError(error, variables, context);\n      } // call-time error callback is executed by react-query\n\n    },\n    onSuccess: function (data, variables, context) {\n      if (variables === void 0) {\n        variables = {};\n      }\n\n      if (mode.current === 'pessimistic') {\n        // update the getOne and getList query cache with the new result\n        var _a = variables.resource,\n            callTimeResource = _a === void 0 ? resource : _a,\n            _b = variables.id,\n            callTimeId = _b === void 0 ? id : _b;\n        updateCache({\n          resource: callTimeResource,\n          id: callTimeId,\n          data: data\n        });\n\n        if (reactMutationOptions.onSuccess) {\n          reactMutationOptions.onSuccess(data, variables, context);\n        } // call-time success callback is executed by react-query\n\n      }\n    },\n    onSettled: function (data, error, variables, context) {\n      if (variables === void 0) {\n        variables = {};\n      }\n\n      if (mode.current === 'optimistic' || mode.current === 'undoable') {\n        // Always refetch after error or success:\n        context.snapshot.forEach(function (_a) {\n          var key = _a[0];\n          queryClient.invalidateQueries(key);\n        });\n      }\n\n      if (reactMutationOptions.onSettled) {\n        return reactMutationOptions.onSettled(data, error, variables, context);\n      }\n    }\n  }));\n\n  var update = function (callTimeResource, callTimeParams, updateOptions) {\n    if (callTimeResource === void 0) {\n      callTimeResource = resource;\n    }\n\n    if (callTimeParams === void 0) {\n      callTimeParams = {};\n    }\n\n    if (updateOptions === void 0) {\n      updateOptions = {};\n    }\n\n    return __awaiter(void 0, void 0, void 0, function () {\n      var mutationMode, returnPromise, onSuccess, onSettled, onError, _a, callTimeId, _b, callTimeData, _c, callTimeMeta, previousRecord, queryKeys;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            mutationMode = updateOptions.mutationMode, returnPromise = updateOptions.returnPromise, onSuccess = updateOptions.onSuccess, onSettled = updateOptions.onSettled, onError = updateOptions.onError; // store the hook time params *at the moment of the call*\n            // because they may change afterwards, which would break the undoable mode\n            // as the previousData would be overwritten by the optimistic update\n\n            paramsRef.current = params;\n\n            if (mutationMode) {\n              mode.current = mutationMode;\n            }\n\n            if (returnPromise && mode.current !== 'pessimistic') {\n              console.warn('The returnPromise parameter can only be used if the mutationMode is set to pessimistic');\n            }\n\n            if (mode.current === 'pessimistic') {\n              if (returnPromise) {\n                return [2\n                /*return*/\n                , mutation.mutateAsync(__assign({\n                  resource: callTimeResource\n                }, callTimeParams), {\n                  onSuccess: onSuccess,\n                  onSettled: onSettled,\n                  onError: onError\n                })];\n              }\n\n              return [2\n              /*return*/\n              , mutation.mutate(__assign({\n                resource: callTimeResource\n              }, callTimeParams), {\n                onSuccess: onSuccess,\n                onSettled: onSettled,\n                onError: onError\n              })];\n            }\n\n            _a = callTimeParams.id, callTimeId = _a === void 0 ? id : _a, _b = callTimeParams.data, callTimeData = _b === void 0 ? data : _b, _c = callTimeParams.meta, callTimeMeta = _c === void 0 ? meta : _c;\n            previousRecord = queryClient.getQueryData([callTimeResource, 'getOne', {\n              id: String(callTimeId),\n              meta: callTimeMeta\n            }]);\n            queryKeys = [[callTimeResource, 'getOne', {\n              id: String(callTimeId),\n              meta: callTimeMeta\n            }], [callTimeResource, 'getList'], [callTimeResource, 'getMany'], [callTimeResource, 'getManyReference']];\n            /**\n             * Snapshot the previous values via queryClient.getQueriesData()\n             *\n             * The snapshotData ref will contain an array of tuples [query key, associated data]\n             *\n             * @example\n             * [\n             *   [['posts', 'getOne', { id: '1' }], { id: 1, title: 'Hello' }],\n             *   [['posts', 'getList'], { data: [{ id: 1, title: 'Hello' }], total: 1 }],\n             *   [['posts', 'getMany'], [{ id: 1, title: 'Hello' }]],\n             * ]\n             *\n             * @see https://react-query.tanstack.com/reference/QueryClient#queryclientgetqueriesdata\n             */\n\n            snapshot.current = queryKeys.reduce(function (prev, curr) {\n              return prev.concat(queryClient.getQueriesData(curr));\n            }, []); // Cancel any outgoing re-fetches (so they don't overwrite our optimistic update)\n\n            return [4\n            /*yield*/\n            , Promise.all(snapshot.current.map(function (_a) {\n              var key = _a[0];\n              return queryClient.cancelQueries(key);\n            }))];\n\n          case 1:\n            // Cancel any outgoing re-fetches (so they don't overwrite our optimistic update)\n            _d.sent(); // Optimistically update to the new value\n\n\n            updateCache({\n              resource: callTimeResource,\n              id: callTimeId,\n              data: callTimeData\n            }); // run the success callbacks during the next tick\n\n            if (onSuccess) {\n              setTimeout(function () {\n                return onSuccess(__assign(__assign({}, previousRecord), callTimeData), __assign({\n                  resource: callTimeResource\n                }, callTimeParams), {\n                  snapshot: snapshot.current\n                });\n              }, 0);\n            }\n\n            if (reactMutationOptions.onSuccess) {\n              setTimeout(function () {\n                return reactMutationOptions.onSuccess(__assign(__assign({}, previousRecord), callTimeData), __assign({\n                  resource: callTimeResource\n                }, callTimeParams), {\n                  snapshot: snapshot.current\n                });\n              }, 0);\n            }\n\n            if (mode.current === 'optimistic') {\n              // call the mutate method without success side effects\n              return [2\n              /*return*/\n              , mutation.mutate(__assign({\n                resource: callTimeResource\n              }, callTimeParams), {\n                onSettled: onSettled,\n                onError: onError\n              })];\n            } else {\n              // undoable mutation: register the mutation for later\n              undoableEventEmitter.once('end', function (_a) {\n                var isUndo = _a.isUndo;\n\n                if (isUndo) {\n                  // rollback\n                  snapshot.current.forEach(function (_a) {\n                    var key = _a[0],\n                        value = _a[1];\n                    queryClient.setQueryData(key, value);\n                  });\n                } else {\n                  // call the mutate method without success side effects\n                  mutation.mutate(__assign({\n                    resource: callTimeResource\n                  }, callTimeParams), {\n                    onSettled: onSettled,\n                    onError: onError\n                  });\n                }\n              });\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return [update, mutation];\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArray","to","from","pack","l","ar","Array","slice","concat","useRef","useMutation","useQueryClient","useDataProvider","undoableEventEmitter","useUpdate","resource","params","options","dataProvider","queryClient","id","data","meta","_a","mutationMode","reactMutationOptions","mode","paramsRef","snapshot","updateCache","now","Date","updatedAt","current","updateColl","old","index","findIndex","record","setQueryData","String","setQueriesData","res","total","coll","mutation","_b","_c","callTimeResource","_d","callTimeId","_e","callTimeData","_f","callTimeMeta","_g","previousData","callTimePreviousData","update","onMutate","variables","userContext","onError","error","context","forEach","key","onSuccess","onSettled","invalidateQueries","callTimeParams","updateOptions","returnPromise","previousRecord","queryKeys","console","warn","mutateAsync","mutate","getQueryData","reduce","prev","curr","getQueriesData","all","map","cancelQueries","setTimeout","once","isUndo"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/dataProvider/useUpdate.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useRef } from 'react';\nimport { useMutation, useQueryClient, } from 'react-query';\nimport { useDataProvider } from './useDataProvider';\nimport undoableEventEmitter from './undoableEventEmitter';\n/**\n * Get a callback to call the dataProvider.update() method, the result and the loading state.\n *\n * @param {string} resource\n * @param {Params} params The update parameters { id, data, previousData, meta }\n * @param {Object} options Options object to pass to the queryClient.\n * May include side effects to be executed upon success or failure, e.g. { onSuccess: () => { refresh(); } }\n * May include a mutation mode (optimistic/pessimistic/undoable), e.g. { mutationMode: 'undoable' }\n *\n * @typedef Params\n * @prop params.id The resource identifier, e.g. 123\n * @prop params.data The updates to merge into the record, e.g. { views: 10 }\n * @prop params.previousData The record before the update is applied\n * @prop params.meta Optional meta data\n *\n * @returns The current mutation state. Destructure as [update, { data, error, isLoading }].\n *\n * The return value updates according to the request state:\n *\n * - initial: [update, { isLoading: false, isIdle: true }]\n * - start:   [update, { isLoading: true }]\n * - success: [update, { data: [data from response], isLoading: false, isSuccess: true }]\n * - error:   [update, { error: [error from response], isLoading: false, isError: true }]\n *\n * The update() function must be called with a resource and a parameter object: update(resource, { id, data, previousData }, options)\n *\n * This hook uses react-query useMutation under the hood.\n * This means the state object contains mutate, isIdle, reset and other react-query methods.\n *\n * @see https://react-query.tanstack.com/reference/useMutation\n *\n * @example // set params when calling the update callback\n *\n * import { useUpdate } from 'react-admin';\n *\n * const IncreaseLikeButton = ({ record }) => {\n *     const diff = { likes: record.likes + 1 };\n *     const [update, { isLoading, error }] = useUpdate();\n *     const handleClick = () => {\n *         update('likes', { id: record.id, data: diff, previousData: record })\n *     }\n *     if (error) { return <p>ERROR</p>; }\n *     return <button disabled={isLoading} onClick={handleClick}>Like</div>;\n * };\n *\n * @example // set params when calling the hook\n *\n * import { useUpdate } from 'react-admin';\n *\n * const IncreaseLikeButton = ({ record }) => {\n *     const diff = { likes: record.likes + 1 };\n *     const [update, { isLoading, error }] = useUpdate('likes', { id: record.id, data: diff, previousData: record });\n *     if (error) { return <p>ERROR</p>; }\n *     return <button disabled={isLoading} onClick={() => update()}>Like</button>;\n * };\n *\n * @example // TypeScript\n * const [update, { data }] = useUpdate<Product>('products', { id, data: diff, previousData: product });\n *                    \\-- data is Product\n */\nexport var useUpdate = function (resource, params, options) {\n    if (params === void 0) { params = {}; }\n    if (options === void 0) { options = {}; }\n    var dataProvider = useDataProvider();\n    var queryClient = useQueryClient();\n    var id = params.id, data = params.data, meta = params.meta;\n    var _a = options.mutationMode, mutationMode = _a === void 0 ? 'pessimistic' : _a, reactMutationOptions = __rest(options, [\"mutationMode\"]);\n    var mode = useRef(mutationMode);\n    var paramsRef = useRef(params);\n    var snapshot = useRef([]);\n    var updateCache = function (_a) {\n        var resource = _a.resource, id = _a.id, data = _a.data;\n        // hack: only way to tell react-query not to fetch this query for the next 5 seconds\n        // because setQueryData doesn't accept a stale time option\n        var now = Date.now();\n        var updatedAt = mode.current === 'undoable' ? now + 5 * 1000 : now;\n        var updateColl = function (old) {\n            if (!old)\n                return;\n            var index = old.findIndex(\n            // eslint-disable-next-line eqeqeq\n            function (record) { return record.id == id; });\n            if (index === -1) {\n                return old;\n            }\n            return __spreadArray(__spreadArray(__spreadArray([], old.slice(0, index), true), [\n                __assign(__assign({}, old[index]), data)\n            ], false), old.slice(index + 1), true);\n        };\n        queryClient.setQueryData([resource, 'getOne', { id: String(id), meta: meta }], function (record) { return (__assign(__assign({}, record), data)); }, { updatedAt: updatedAt });\n        queryClient.setQueriesData([resource, 'getList'], function (res) {\n            return res && res.data\n                ? { data: updateColl(res.data), total: res.total }\n                : res;\n        }, { updatedAt: updatedAt });\n        queryClient.setQueriesData([resource, 'getMany'], function (coll) {\n            return coll && coll.length > 0 ? updateColl(coll) : coll;\n        }, { updatedAt: updatedAt });\n        queryClient.setQueriesData([resource, 'getManyReference'], function (res) {\n            return res && res.data\n                ? { data: updateColl(res.data), total: res.total }\n                : res;\n        }, { updatedAt: updatedAt });\n    };\n    var mutation = useMutation(function (_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.resource, callTimeResource = _c === void 0 ? resource : _c, _d = _b.id, callTimeId = _d === void 0 ? paramsRef.current.id : _d, _e = _b.data, callTimeData = _e === void 0 ? paramsRef.current.data : _e, _f = _b.meta, callTimeMeta = _f === void 0 ? paramsRef.current.meta : _f, _g = _b.previousData, callTimePreviousData = _g === void 0 ? paramsRef.current.previousData : _g;\n        return dataProvider\n            .update(callTimeResource, {\n            id: callTimeId,\n            data: callTimeData,\n            previousData: callTimePreviousData,\n            meta: callTimeMeta,\n        })\n            .then(function (_a) {\n            var data = _a.data;\n            return data;\n        });\n    }, __assign(__assign({}, reactMutationOptions), { onMutate: function (variables) { return __awaiter(void 0, void 0, void 0, function () {\n            var userContext;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!reactMutationOptions.onMutate) return [3 /*break*/, 2];\n                        return [4 /*yield*/, reactMutationOptions.onMutate(variables)];\n                    case 1:\n                        userContext = (_a.sent()) || {};\n                        return [2 /*return*/, __assign({ snapshot: snapshot.current }, userContext)];\n                    case 2: \n                    // Return a context object with the snapshot value\n                    return [2 /*return*/, { snapshot: snapshot.current }];\n                }\n            });\n        }); }, onError: function (error, variables, context) {\n            if (variables === void 0) { variables = {}; }\n            if (mode.current === 'optimistic' ||\n                mode.current === 'undoable') {\n                // If the mutation fails, use the context returned from onMutate to rollback\n                context.snapshot.forEach(function (_a) {\n                    var key = _a[0], value = _a[1];\n                    queryClient.setQueryData(key, value);\n                });\n            }\n            if (reactMutationOptions.onError) {\n                return reactMutationOptions.onError(error, variables, context);\n            }\n            // call-time error callback is executed by react-query\n        }, onSuccess: function (data, variables, context) {\n            if (variables === void 0) { variables = {}; }\n            if (mode.current === 'pessimistic') {\n                // update the getOne and getList query cache with the new result\n                var _a = variables.resource, callTimeResource = _a === void 0 ? resource : _a, _b = variables.id, callTimeId = _b === void 0 ? id : _b;\n                updateCache({\n                    resource: callTimeResource,\n                    id: callTimeId,\n                    data: data,\n                });\n                if (reactMutationOptions.onSuccess) {\n                    reactMutationOptions.onSuccess(data, variables, context);\n                }\n                // call-time success callback is executed by react-query\n            }\n        }, onSettled: function (data, error, variables, context) {\n            if (variables === void 0) { variables = {}; }\n            if (mode.current === 'optimistic' ||\n                mode.current === 'undoable') {\n                // Always refetch after error or success:\n                context.snapshot.forEach(function (_a) {\n                    var key = _a[0];\n                    queryClient.invalidateQueries(key);\n                });\n            }\n            if (reactMutationOptions.onSettled) {\n                return reactMutationOptions.onSettled(data, error, variables, context);\n            }\n        } }));\n    var update = function (callTimeResource, callTimeParams, updateOptions) {\n        if (callTimeResource === void 0) { callTimeResource = resource; }\n        if (callTimeParams === void 0) { callTimeParams = {}; }\n        if (updateOptions === void 0) { updateOptions = {}; }\n        return __awaiter(void 0, void 0, void 0, function () {\n            var mutationMode, returnPromise, onSuccess, onSettled, onError, _a, callTimeId, _b, callTimeData, _c, callTimeMeta, previousRecord, queryKeys;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        mutationMode = updateOptions.mutationMode, returnPromise = updateOptions.returnPromise, onSuccess = updateOptions.onSuccess, onSettled = updateOptions.onSettled, onError = updateOptions.onError;\n                        // store the hook time params *at the moment of the call*\n                        // because they may change afterwards, which would break the undoable mode\n                        // as the previousData would be overwritten by the optimistic update\n                        paramsRef.current = params;\n                        if (mutationMode) {\n                            mode.current = mutationMode;\n                        }\n                        if (returnPromise && mode.current !== 'pessimistic') {\n                            console.warn('The returnPromise parameter can only be used if the mutationMode is set to pessimistic');\n                        }\n                        if (mode.current === 'pessimistic') {\n                            if (returnPromise) {\n                                return [2 /*return*/, mutation.mutateAsync(__assign({ resource: callTimeResource }, callTimeParams), { onSuccess: onSuccess, onSettled: onSettled, onError: onError })];\n                            }\n                            return [2 /*return*/, mutation.mutate(__assign({ resource: callTimeResource }, callTimeParams), { onSuccess: onSuccess, onSettled: onSettled, onError: onError })];\n                        }\n                        _a = callTimeParams.id, callTimeId = _a === void 0 ? id : _a, _b = callTimeParams.data, callTimeData = _b === void 0 ? data : _b, _c = callTimeParams.meta, callTimeMeta = _c === void 0 ? meta : _c;\n                        previousRecord = queryClient.getQueryData([\n                            callTimeResource,\n                            'getOne',\n                            { id: String(callTimeId), meta: callTimeMeta },\n                        ]);\n                        queryKeys = [\n                            [\n                                callTimeResource,\n                                'getOne',\n                                { id: String(callTimeId), meta: callTimeMeta },\n                            ],\n                            [callTimeResource, 'getList'],\n                            [callTimeResource, 'getMany'],\n                            [callTimeResource, 'getManyReference'],\n                        ];\n                        /**\n                         * Snapshot the previous values via queryClient.getQueriesData()\n                         *\n                         * The snapshotData ref will contain an array of tuples [query key, associated data]\n                         *\n                         * @example\n                         * [\n                         *   [['posts', 'getOne', { id: '1' }], { id: 1, title: 'Hello' }],\n                         *   [['posts', 'getList'], { data: [{ id: 1, title: 'Hello' }], total: 1 }],\n                         *   [['posts', 'getMany'], [{ id: 1, title: 'Hello' }]],\n                         * ]\n                         *\n                         * @see https://react-query.tanstack.com/reference/QueryClient#queryclientgetqueriesdata\n                         */\n                        snapshot.current = queryKeys.reduce(function (prev, curr) { return prev.concat(queryClient.getQueriesData(curr)); }, []);\n                        // Cancel any outgoing re-fetches (so they don't overwrite our optimistic update)\n                        return [4 /*yield*/, Promise.all(snapshot.current.map(function (_a) {\n                                var key = _a[0];\n                                return queryClient.cancelQueries(key);\n                            }))];\n                    case 1:\n                        // Cancel any outgoing re-fetches (so they don't overwrite our optimistic update)\n                        _d.sent();\n                        // Optimistically update to the new value\n                        updateCache({\n                            resource: callTimeResource,\n                            id: callTimeId,\n                            data: callTimeData,\n                        });\n                        // run the success callbacks during the next tick\n                        if (onSuccess) {\n                            setTimeout(function () {\n                                return onSuccess(__assign(__assign({}, previousRecord), callTimeData), __assign({ resource: callTimeResource }, callTimeParams), { snapshot: snapshot.current });\n                            }, 0);\n                        }\n                        if (reactMutationOptions.onSuccess) {\n                            setTimeout(function () {\n                                return reactMutationOptions.onSuccess(__assign(__assign({}, previousRecord), callTimeData), __assign({ resource: callTimeResource }, callTimeParams), { snapshot: snapshot.current });\n                            }, 0);\n                        }\n                        if (mode.current === 'optimistic') {\n                            // call the mutate method without success side effects\n                            return [2 /*return*/, mutation.mutate(__assign({ resource: callTimeResource }, callTimeParams), { onSettled: onSettled, onError: onError })];\n                        }\n                        else {\n                            // undoable mutation: register the mutation for later\n                            undoableEventEmitter.once('end', function (_a) {\n                                var isUndo = _a.isUndo;\n                                if (isUndo) {\n                                    // rollback\n                                    snapshot.current.forEach(function (_a) {\n                                        var key = _a[0], value = _a[1];\n                                        queryClient.setQueryData(key, value);\n                                    });\n                                }\n                                else {\n                                    // call the mutate method without success side effects\n                                    mutation.mutate(__assign({ resource: callTimeResource }, callTimeParams), { onSettled: onSettled, onError: onError });\n                                }\n                            });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return [update, mutation];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}