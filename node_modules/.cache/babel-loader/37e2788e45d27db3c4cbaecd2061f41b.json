{"ast":null,"code":"import isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nvar accusativeWeekdays = ['воскресенье', 'понедельник', 'вторник', 'среду', 'четверг', 'пятницу', 'субботу'];\n\nfunction lastWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n      return \"'в прошлое \" + weekday + \" в' p\";\n\n    case 1:\n    case 2:\n    case 4:\n      return \"'в прошлый \" + weekday + \" в' p\";\n\n    case 3:\n    case 5:\n    case 6:\n      return \"'в прошлую \" + weekday + \" в' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  if (day === 2\n  /* Tue */\n  ) {\n    return \"'во \" + weekday + \" в' p\";\n  } else {\n    return \"'в \" + weekday + \" в' p\";\n  }\n}\n\nfunction nextWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n      return \"'в следующее \" + weekday + \" в' p\";\n\n    case 1:\n    case 2:\n    case 4:\n      return \"'в следующий \" + weekday + \" в' p\";\n\n    case 3:\n    case 5:\n    case 6:\n      return \"'в следующую \" + weekday + \" в' p\";\n  }\n}\n\nvar formatRelativeLocale = {\n  lastWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'вчера в' p\",\n  today: \"'сегодня в' p\",\n  tomorrow: \"'завтра в' p\",\n  nextWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: 'P'\n};\nexport default function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n}","map":{"version":3,"names":["isSameUTCWeek","accusativeWeekdays","lastWeek","day","weekday","thisWeek","nextWeek","formatRelativeLocale","date","baseDate","options","getUTCDay","yesterday","today","tomorrow","other","formatRelative","token","format"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/date-fns/esm/locale/ru/_lib/formatRelative/index.js"],"sourcesContent":["import isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nvar accusativeWeekdays = ['воскресенье', 'понедельник', 'вторник', 'среду', 'четверг', 'пятницу', 'субботу'];\n\nfunction lastWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n      return \"'в прошлое \" + weekday + \" в' p\";\n\n    case 1:\n    case 2:\n    case 4:\n      return \"'в прошлый \" + weekday + \" в' p\";\n\n    case 3:\n    case 5:\n    case 6:\n      return \"'в прошлую \" + weekday + \" в' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  if (day === 2\n  /* Tue */\n  ) {\n      return \"'во \" + weekday + \" в' p\";\n    } else {\n    return \"'в \" + weekday + \" в' p\";\n  }\n}\n\nfunction nextWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n      return \"'в следующее \" + weekday + \" в' p\";\n\n    case 1:\n    case 2:\n    case 4:\n      return \"'в следующий \" + weekday + \" в' p\";\n\n    case 3:\n    case 5:\n    case 6:\n      return \"'в следующую \" + weekday + \" в' p\";\n  }\n}\n\nvar formatRelativeLocale = {\n  lastWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'вчера в' p\",\n  today: \"'сегодня в' p\",\n  tomorrow: \"'завтра в' p\",\n  nextWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: 'P'\n};\nexport default function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n}"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,yCAA1B;AACA,IAAIC,kBAAkB,GAAG,CAAC,aAAD,EAAgB,aAAhB,EAA+B,SAA/B,EAA0C,OAA1C,EAAmD,SAAnD,EAA8D,SAA9D,EAAyE,SAAzE,CAAzB;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;EACrB,IAAIC,OAAO,GAAGH,kBAAkB,CAACE,GAAD,CAAhC;;EAEA,QAAQA,GAAR;IACE,KAAK,CAAL;MACE,OAAO,gBAAgBC,OAAhB,GAA0B,OAAjC;;IAEF,KAAK,CAAL;IACA,KAAK,CAAL;IACA,KAAK,CAAL;MACE,OAAO,gBAAgBA,OAAhB,GAA0B,OAAjC;;IAEF,KAAK,CAAL;IACA,KAAK,CAAL;IACA,KAAK,CAAL;MACE,OAAO,gBAAgBA,OAAhB,GAA0B,OAAjC;EAZJ;AAcD;;AAED,SAASC,QAAT,CAAkBF,GAAlB,EAAuB;EACrB,IAAIC,OAAO,GAAGH,kBAAkB,CAACE,GAAD,CAAhC;;EAEA,IAAIA,GAAG,KAAK;EACZ;EADA,EAEE;IACE,OAAO,SAASC,OAAT,GAAmB,OAA1B;EACD,CAJH,MAIS;IACP,OAAO,QAAQA,OAAR,GAAkB,OAAzB;EACD;AACF;;AAED,SAASE,QAAT,CAAkBH,GAAlB,EAAuB;EACrB,IAAIC,OAAO,GAAGH,kBAAkB,CAACE,GAAD,CAAhC;;EAEA,QAAQA,GAAR;IACE,KAAK,CAAL;MACE,OAAO,kBAAkBC,OAAlB,GAA4B,OAAnC;;IAEF,KAAK,CAAL;IACA,KAAK,CAAL;IACA,KAAK,CAAL;MACE,OAAO,kBAAkBA,OAAlB,GAA4B,OAAnC;;IAEF,KAAK,CAAL;IACA,KAAK,CAAL;IACA,KAAK,CAAL;MACE,OAAO,kBAAkBA,OAAlB,GAA4B,OAAnC;EAZJ;AAcD;;AAED,IAAIG,oBAAoB,GAAG;EACzBL,QAAQ,EAAE,UAAUM,IAAV,EAAgBC,QAAhB,EAA0BC,OAA1B,EAAmC;IAC3C,IAAIP,GAAG,GAAGK,IAAI,CAACG,SAAL,EAAV;;IAEA,IAAIX,aAAa,CAACQ,IAAD,EAAOC,QAAP,EAAiBC,OAAjB,CAAjB,EAA4C;MAC1C,OAAOL,QAAQ,CAACF,GAAD,CAAf;IACD,CAFD,MAEO;MACL,OAAOD,QAAQ,CAACC,GAAD,CAAf;IACD;EACF,CATwB;EAUzBS,SAAS,EAAE,aAVc;EAWzBC,KAAK,EAAE,eAXkB;EAYzBC,QAAQ,EAAE,cAZe;EAazBR,QAAQ,EAAE,UAAUE,IAAV,EAAgBC,QAAhB,EAA0BC,OAA1B,EAAmC;IAC3C,IAAIP,GAAG,GAAGK,IAAI,CAACG,SAAL,EAAV;;IAEA,IAAIX,aAAa,CAACQ,IAAD,EAAOC,QAAP,EAAiBC,OAAjB,CAAjB,EAA4C;MAC1C,OAAOL,QAAQ,CAACF,GAAD,CAAf;IACD,CAFD,MAEO;MACL,OAAOG,QAAQ,CAACH,GAAD,CAAf;IACD;EACF,CArBwB;EAsBzBY,KAAK,EAAE;AAtBkB,CAA3B;AAwBA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+BT,IAA/B,EAAqCC,QAArC,EAA+CC,OAA/C,EAAwD;EACrE,IAAIQ,MAAM,GAAGX,oBAAoB,CAACU,KAAD,CAAjC;;EAEA,IAAI,OAAOC,MAAP,KAAkB,UAAtB,EAAkC;IAChC,OAAOA,MAAM,CAACV,IAAD,EAAOC,QAAP,EAAiBC,OAAjB,CAAb;EACD;;EAED,OAAOQ,MAAP;AACD"},"metadata":{},"sourceType":"module"}