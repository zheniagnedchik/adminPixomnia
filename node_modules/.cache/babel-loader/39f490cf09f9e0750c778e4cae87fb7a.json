{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { Children, cloneElement, isValidElement, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { getFormGroupState, Toolbar, FormGroupsContext, useTranslate } from 'react-admin';\nimport { useFormState } from 'react-hook-form';\nimport { Card, CardContent, MenuItem, MenuList } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport { useScrollSpy } from './useScrollSpy';\n/**\n * Form layout for long forms.\n *\n * Renders a fixed table of contents and toolbar, as well as section headers.\n * Expects `<LongForm.Section>` as children, each having a label.\n *\n * @example\n * import { LongForm } from '@react-admin/ra-form-layout';\n *\n * const CustomerEdit = () => (\n *     <Edit component=\"div\">\n *         <LongForm>\n *             <LongForm.Section label=\"Identity\">\n *                 <Labeled label=\"id\">\n *                     <TextField source=\"id\" />\n *                 </Labeled>\n *                 <TextInput source=\"first_name\" validate={required()} />\n *                 <TextInput source=\"last_name\" validate={required()} />\n *                 <DateInput source=\"dob\" label=\"born\" validate={required()} />\n *                 <SelectInput source=\"sex\" choices={sexChoices} />\n *             </LongForm.Section>\n *             <LongForm.Section label=\"Occupations\">\n *                 <ArrayInput source=\"occupations\" label=\"\">\n *                     <SimpleFormIterator>\n *                         <TextInput source=\"name\" validate={required()} />\n *                         <DateInput source=\"from\" validate={required()} />\n *                         <DateInput source=\"to\" />\n *                     </SimpleFormIterator>\n *                 </ArrayInput>\n *             </LongForm.Section>\n *             <LongForm.Section label=\"Preferences\">\n *                 <SelectInput\n *                     source=\"language\"\n *                     choices={languageChoices}\n *                     defaultValue=\"en\"\n *                 />\n *                 <BooleanInput source=\"dark_theme\" />\n *                 <BooleanInput source=\"accepts_emails_from_partners\" />\n *             </LongForm.Section>\n *         </LongForm>\n *     </Edit>\n * );\n */\n\nexport var LongFormView = function (_a) {\n  var children = _a.children,\n      sx = _a.sx,\n      toolbar = _a.toolbar; // section refs allow to build the table of contents automatically\n\n  var nbSections = Children.count(children);\n  var sectionRefs = useRef(new Array(nbSections)); // track the scroll to highlight the current section\n\n  var activeSection = useScrollSpy({\n    sectionElements: sectionRefs.current,\n    offsetPx: -80\n  });\n  var translate = useTranslate(); // track validation state of each group to change toc item color\n\n  var _b = useFormState(),\n      dirtyFields = _b.dirtyFields,\n      touchedFields = _b.touchedFields,\n      errors = _b.errors,\n      isSubmitted = _b.isSubmitted;\n\n  var _c = useState({}),\n      formGroupStates = _c[0],\n      setFormGroupStates = _c[1];\n\n  var formGroups = useContext(FormGroupsContext);\n  var updateGroupState = useCallback(function (label) {\n    var fields = formGroups.getGroupFields(label);\n    var fieldStates = fields.map(function (field) {\n      return {\n        name: field,\n        error: get(errors, field, undefined),\n        isDirty: get(dirtyFields, field, false),\n        isValid: get(errors, field, undefined) == undefined,\n        isTouched: get(touchedFields, field, false)\n      };\n    }).filter(function (fieldState) {\n      return fieldState != undefined;\n    }); // eslint-disable-line\n\n    var newState = getFormGroupState(fieldStates);\n    setFormGroupStates(function (oldState) {\n      var _a;\n\n      if (isEqual(oldState[label], newState)) {\n        return oldState;\n      }\n\n      return __assign(__assign({}, oldState), (_a = {}, _a[label] = newState, _a));\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dirtyFields, errors, touchedFields, formGroups]);\n  useEffect(function () {\n    Children.toArray(children).map(function (section) {\n      if (!isValidElement(section)) return;\n      updateGroupState(section.props.label);\n    });\n  }, // eslint-disable-next-line\n  [// eslint-disable-next-line\n  JSON.stringify({\n    dirtyFields: dirtyFields,\n    errors: errors,\n    touchedFields: touchedFields\n  }), updateGroupState]);\n  useEffect(function () {\n    // Whenever the group content changes (input are added or removed)\n    // we must update its state\n    var subscriptions = Children.toArray(children).map(function (section) {\n      if (!isValidElement(section)) return;\n      return formGroups.subscribe(section.props.label, function () {\n        updateGroupState(section.props.label);\n      });\n    });\n    return function () {\n      subscriptions.forEach(function (unsubscribe) {\n        if (typeof unsubscribe === 'function') {\n          unsubscribe();\n        }\n      });\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formGroups, updateGroupState]);\n  return React.createElement(Root, {\n    sx: sx\n  }, React.createElement(Card, {\n    className: LongFormViewClasses.toc\n  }, React.createElement(MenuList, null, Children.map(children, function (formSection, index) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n    return isValidElement(formSection) ? React.createElement(MenuItem, {\n      selected: activeSection === index,\n      key: index,\n      onClick: function () {\n        window.scrollTo(0, sectionRefs.current[index].offsetTop - 60);\n      },\n      className: !((_b = formGroupStates[(_a = formSection.props) === null || _a === void 0 ? void 0 : _a.label]) === null || _b === void 0 ? void 0 : _b.isValid) && (((_d = formGroupStates[(_c = formSection.props) === null || _c === void 0 ? void 0 : _c.label]) === null || _d === void 0 ? void 0 : _d.isTouched) || isSubmitted) ? LongFormViewClasses.error : ''\n    }, translate((_e = formSection.props) === null || _e === void 0 ? void 0 : _e.label, {\n      _: (_f = formSection.props) === null || _f === void 0 ? void 0 : _f.label\n    }), ((_g = formSection.props) === null || _g === void 0 ? void 0 : _g.cardinality) ? \" (\" + ((_j = (_h = formSection) === null || _h === void 0 ? void 0 : _h.props) === null || _j === void 0 ? void 0 : _j.cardinality) + \")\" : null) : null;\n  }))), React.createElement(Card, {\n    className: LongFormViewClasses.main\n  }, React.createElement(CardContent, null, Children.map(children, function (formSection, index) {\n    return isValidElement(formSection) && cloneElement(formSection, {\n      ref: function (ref) {\n        if (ref == null) {\n          return;\n        }\n\n        sectionRefs.current[index] = ref;\n      },\n      key: index\n    });\n  })), toolbar ? cloneElement(toolbar, {\n    className: LongFormViewClasses.toolbar\n  }) : React.createElement(Toolbar, {\n    className: LongFormViewClasses.toolbar\n  })));\n};\nvar PREFIX = 'RaLongForm';\nexport var LongFormViewClasses = {\n  toc: PREFIX + \"-toc\",\n  main: PREFIX + \"-main\",\n  toolbar: PREFIX + \"-toolbar\",\n  error: PREFIX + \"-error\"\n};\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\" + LongFormViewClasses.toc] = {\n    position: 'fixed',\n    width: 200\n  }, _b[\"& .\" + LongFormViewClasses.main] = {\n    marginLeft: '220px',\n    overflow: 'visible'\n  }, _b[\"& .\" + LongFormViewClasses.toolbar] = {\n    position: 'sticky',\n    bottom: 0,\n    zIndex: 2\n  }, _b[\"& .\" + LongFormViewClasses.error] = {\n    color: theme.palette.error.main\n  }, _b;\n});","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","Children","cloneElement","isValidElement","useCallback","useContext","useEffect","useRef","useState","getFormGroupState","Toolbar","FormGroupsContext","useTranslate","useFormState","Card","CardContent","MenuItem","MenuList","styled","get","isEqual","useScrollSpy","LongFormView","_a","children","sx","toolbar","nbSections","count","sectionRefs","Array","activeSection","sectionElements","current","offsetPx","translate","_b","dirtyFields","touchedFields","errors","isSubmitted","_c","formGroupStates","setFormGroupStates","formGroups","updateGroupState","label","fields","getGroupFields","fieldStates","map","field","name","error","undefined","isDirty","isValid","isTouched","filter","fieldState","newState","oldState","toArray","section","props","JSON","stringify","subscriptions","subscribe","forEach","unsubscribe","createElement","Root","className","LongFormViewClasses","toc","formSection","index","_d","_e","_f","_g","_h","_j","selected","key","onClick","window","scrollTo","offsetTop","_","cardinality","main","ref","PREFIX","overridesResolver","styles","root","theme","position","width","marginLeft","overflow","bottom","zIndex","color","palette"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@react-admin/ra-form-layout/esm/src/forms/long-form/LongFormView.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Children, cloneElement, isValidElement, useCallback, useContext, useEffect, useRef, useState, } from 'react';\nimport { getFormGroupState, Toolbar, FormGroupsContext, useTranslate, } from 'react-admin';\nimport { useFormState } from 'react-hook-form';\nimport { Card, CardContent, MenuItem, MenuList } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport { useScrollSpy } from './useScrollSpy';\n/**\n * Form layout for long forms.\n *\n * Renders a fixed table of contents and toolbar, as well as section headers.\n * Expects `<LongForm.Section>` as children, each having a label.\n *\n * @example\n * import { LongForm } from '@react-admin/ra-form-layout';\n *\n * const CustomerEdit = () => (\n *     <Edit component=\"div\">\n *         <LongForm>\n *             <LongForm.Section label=\"Identity\">\n *                 <Labeled label=\"id\">\n *                     <TextField source=\"id\" />\n *                 </Labeled>\n *                 <TextInput source=\"first_name\" validate={required()} />\n *                 <TextInput source=\"last_name\" validate={required()} />\n *                 <DateInput source=\"dob\" label=\"born\" validate={required()} />\n *                 <SelectInput source=\"sex\" choices={sexChoices} />\n *             </LongForm.Section>\n *             <LongForm.Section label=\"Occupations\">\n *                 <ArrayInput source=\"occupations\" label=\"\">\n *                     <SimpleFormIterator>\n *                         <TextInput source=\"name\" validate={required()} />\n *                         <DateInput source=\"from\" validate={required()} />\n *                         <DateInput source=\"to\" />\n *                     </SimpleFormIterator>\n *                 </ArrayInput>\n *             </LongForm.Section>\n *             <LongForm.Section label=\"Preferences\">\n *                 <SelectInput\n *                     source=\"language\"\n *                     choices={languageChoices}\n *                     defaultValue=\"en\"\n *                 />\n *                 <BooleanInput source=\"dark_theme\" />\n *                 <BooleanInput source=\"accepts_emails_from_partners\" />\n *             </LongForm.Section>\n *         </LongForm>\n *     </Edit>\n * );\n */\nexport var LongFormView = function (_a) {\n    var children = _a.children, sx = _a.sx, toolbar = _a.toolbar;\n    // section refs allow to build the table of contents automatically\n    var nbSections = Children.count(children);\n    var sectionRefs = useRef(new Array(nbSections));\n    // track the scroll to highlight the current section\n    var activeSection = useScrollSpy({\n        sectionElements: sectionRefs.current,\n        offsetPx: -80,\n    });\n    var translate = useTranslate();\n    // track validation state of each group to change toc item color\n    var _b = useFormState(), dirtyFields = _b.dirtyFields, touchedFields = _b.touchedFields, errors = _b.errors, isSubmitted = _b.isSubmitted;\n    var _c = useState({}), formGroupStates = _c[0], setFormGroupStates = _c[1];\n    var formGroups = useContext(FormGroupsContext);\n    var updateGroupState = useCallback(function (label) {\n        var fields = formGroups.getGroupFields(label);\n        var fieldStates = fields\n            .map(function (field) {\n            return {\n                name: field,\n                error: get(errors, field, undefined),\n                isDirty: get(dirtyFields, field, false),\n                isValid: get(errors, field, undefined) == undefined,\n                isTouched: get(touchedFields, field, false),\n            };\n        })\n            .filter(function (fieldState) { return fieldState != undefined; }); // eslint-disable-line\n        var newState = getFormGroupState(fieldStates);\n        setFormGroupStates(function (oldState) {\n            var _a;\n            if (isEqual(oldState[label], newState)) {\n                return oldState;\n            }\n            return __assign(__assign({}, oldState), (_a = {}, _a[label] = newState, _a));\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dirtyFields, errors, touchedFields, formGroups]);\n    useEffect(function () {\n        Children.toArray(children).map(function (section) {\n            if (!isValidElement(section))\n                return;\n            updateGroupState(section.props.label);\n        });\n    }, \n    // eslint-disable-next-line\n    [\n        // eslint-disable-next-line\n        JSON.stringify({ dirtyFields: dirtyFields, errors: errors, touchedFields: touchedFields }),\n        updateGroupState,\n    ]);\n    useEffect(function () {\n        // Whenever the group content changes (input are added or removed)\n        // we must update its state\n        var subscriptions = Children.toArray(children).map(function (section) {\n            if (!isValidElement(section))\n                return;\n            return formGroups.subscribe(section.props.label, function () {\n                updateGroupState(section.props.label);\n            });\n        });\n        return function () {\n            subscriptions.forEach(function (unsubscribe) {\n                if (typeof unsubscribe === 'function') {\n                    unsubscribe();\n                }\n            });\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [formGroups, updateGroupState]);\n    return (React.createElement(Root, { sx: sx },\n        React.createElement(Card, { className: LongFormViewClasses.toc },\n            React.createElement(MenuList, null, Children.map(children, function (formSection, index) {\n                var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n                return isValidElement(formSection) ? (React.createElement(MenuItem, { selected: activeSection === index, key: index, onClick: function () {\n                        window.scrollTo(0, sectionRefs.current[index].offsetTop -\n                            60);\n                    }, className: !((_b = formGroupStates[(_a = formSection.props) === null || _a === void 0 ? void 0 : _a.label]) === null || _b === void 0 ? void 0 : _b.isValid) &&\n                        (((_d = formGroupStates[(_c = formSection.props) === null || _c === void 0 ? void 0 : _c.label]) === null || _d === void 0 ? void 0 : _d.isTouched) ||\n                            isSubmitted)\n                        ? LongFormViewClasses.error\n                        : '' },\n                    translate((_e = formSection.props) === null || _e === void 0 ? void 0 : _e.label, {\n                        _: (_f = formSection.props) === null || _f === void 0 ? void 0 : _f.label,\n                    }),\n                    ((_g = formSection.props) === null || _g === void 0 ? void 0 : _g.cardinality)\n                        ? \" (\" + ((_j = (_h = formSection) === null || _h === void 0 ? void 0 : _h.props) === null || _j === void 0 ? void 0 : _j.cardinality) + \")\"\n                        : null)) : null;\n            }))),\n        React.createElement(Card, { className: LongFormViewClasses.main },\n            React.createElement(CardContent, null, Children.map(children, function (formSection, index) {\n                return isValidElement(formSection) &&\n                    cloneElement(formSection, {\n                        ref: function (ref) {\n                            if (ref == null) {\n                                return;\n                            }\n                            sectionRefs.current[index] = ref;\n                        },\n                        key: index,\n                    });\n            })),\n            toolbar ? (cloneElement(toolbar, {\n                className: LongFormViewClasses.toolbar,\n            })) : (React.createElement(Toolbar, { className: LongFormViewClasses.toolbar })))));\n};\nvar PREFIX = 'RaLongForm';\nexport var LongFormViewClasses = {\n    toc: PREFIX + \"-toc\",\n    main: PREFIX + \"-main\",\n    toolbar: PREFIX + \"-toolbar\",\n    error: PREFIX + \"-error\",\n};\nvar Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: function (props, styles) { return styles.root; },\n})(function (_a) {\n    var _b;\n    var theme = _a.theme;\n    return (_b = {},\n        _b[\"& .\" + LongFormViewClasses.toc] = { position: 'fixed', width: 200 },\n        _b[\"& .\" + LongFormViewClasses.main] = {\n            marginLeft: '220px',\n            overflow: 'visible',\n        },\n        _b[\"& .\" + LongFormViewClasses.toolbar] = {\n            position: 'sticky',\n            bottom: 0,\n            zIndex: 2,\n        },\n        _b[\"& .\" + LongFormViewClasses.error] = {\n            color: theme.palette.error.main,\n        },\n        _b);\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}