{"ast":null,"code":"import { useMemo } from 'react';\nimport { useI18nProvider } from './useI18nProvider';\nimport { useStore } from '../store/useStore';\n/**\n * Get the current locale and the ability to change it\n *\n * @example\n *\n * import { useLocaleState } from 'react-admin';\n *\n * const availableLanguages = {\n *     en: 'English',\n *     fr: 'Français',\n * }\n * const LocaleSwitcher = () => {\n *     const [locale, setLocale] = useLocaleState();\n *     return (\n *         <div>\n *             <div>Language</div>\n *             <Button disabled={locale === 'fr'} onClick={() => setLocale('fr')}>\n *                 English\n *             </Button>\n *             <Button disabled={locale === 'en'} onClick={() => setLocale('en')}>\n *                 French\n *             </Button>\n *         </div>\n *     );\n * };\n */\n\nexport var useLocaleState = function () {\n  var i18nProvider = useI18nProvider();\n  var defaultLocale = useMemo(function () {\n    return i18nProvider.getLocale();\n  }, [i18nProvider]);\n  return useStore('locale', defaultLocale);\n};","map":{"version":3,"names":["useMemo","useI18nProvider","useStore","useLocaleState","i18nProvider","defaultLocale","getLocale"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/i18n/useLocaleState.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { useI18nProvider } from './useI18nProvider';\nimport { useStore } from '../store/useStore';\n/**\n * Get the current locale and the ability to change it\n *\n * @example\n *\n * import { useLocaleState } from 'react-admin';\n *\n * const availableLanguages = {\n *     en: 'English',\n *     fr: 'Français',\n * }\n * const LocaleSwitcher = () => {\n *     const [locale, setLocale] = useLocaleState();\n *     return (\n *         <div>\n *             <div>Language</div>\n *             <Button disabled={locale === 'fr'} onClick={() => setLocale('fr')}>\n *                 English\n *             </Button>\n *             <Button disabled={locale === 'en'} onClick={() => setLocale('en')}>\n *                 French\n *             </Button>\n *         </div>\n *     );\n * };\n */\nexport var useLocaleState = function () {\n    var i18nProvider = useI18nProvider();\n    var defaultLocale = useMemo(function () { return i18nProvider.getLocale(); }, [\n        i18nProvider,\n    ]);\n    return useStore('locale', defaultLocale);\n};\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,cAAc,GAAG,YAAY;EACpC,IAAIC,YAAY,GAAGH,eAAe,EAAlC;EACA,IAAII,aAAa,GAAGL,OAAO,CAAC,YAAY;IAAE,OAAOI,YAAY,CAACE,SAAb,EAAP;EAAkC,CAAjD,EAAmD,CAC1EF,YAD0E,CAAnD,CAA3B;EAGA,OAAOF,QAAQ,CAAC,QAAD,EAAWG,aAAX,CAAf;AACH,CANM"},"metadata":{},"sourceType":"module"}