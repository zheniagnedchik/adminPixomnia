{"ast":null,"code":"var formatDistanceLocale = {\n  lessThanXSeconds: {\n    regular: {\n      one: '1 секундтан аз',\n      singularNominative: '{{count}} секундтан аз',\n      singularGenitive: '{{count}} секундтан аз',\n      pluralGenitive: '{{count}} секундтан аз'\n    },\n    future: {\n      one: 'бір секундтан кейін',\n      singularNominative: '{{count}} секундтан кейін',\n      singularGenitive: '{{count}} секундтан кейін',\n      pluralGenitive: '{{count}} секундтан кейін'\n    }\n  },\n  xSeconds: {\n    regular: {\n      singularNominative: '{{count}} секунд',\n      singularGenitive: '{{count}} секунд',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунд бұрын',\n      singularGenitive: '{{count}} секунд бұрын',\n      pluralGenitive: '{{count}} секунд бұрын'\n    },\n    future: {\n      singularNominative: '{{count}} секундтан кейін',\n      singularGenitive: '{{count}} секундтан кейін',\n      pluralGenitive: '{{count}} секундтан кейін'\n    }\n  },\n  halfAMinute: function (options) {\n    if (options !== null && options !== void 0 && options.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        return 'жарты минут ішінде';\n      } else {\n        return 'жарты минут бұрын';\n      }\n    }\n\n    return 'жарты минут';\n  },\n  lessThanXMinutes: {\n    regular: {\n      one: '1 минуттан аз',\n      singularNominative: '{{count}} минуттан аз',\n      singularGenitive: '{{count}} минуттан аз',\n      pluralGenitive: '{{count}} минуттан аз'\n    },\n    future: {\n      one: 'минуттан кем ',\n      singularNominative: '{{count}} минуттан кем',\n      singularGenitive: '{{count}} минуттан кем',\n      pluralGenitive: '{{count}} минуттан кем'\n    }\n  },\n  xMinutes: {\n    regular: {\n      singularNominative: '{{count}} минут',\n      singularGenitive: '{{count}} минут',\n      pluralGenitive: '{{count}} минут'\n    },\n    past: {\n      singularNominative: '{{count}} минут бұрын',\n      singularGenitive: '{{count}} минут бұрын',\n      pluralGenitive: '{{count}} минут бұрын'\n    },\n    future: {\n      singularNominative: '{{count}} минуттан кейін',\n      singularGenitive: '{{count}} минуттан кейін',\n      pluralGenitive: '{{count}} минуттан кейін'\n    }\n  },\n  aboutXHours: {\n    regular: {\n      singularNominative: 'шамамен {{count}} сағат',\n      singularGenitive: 'шамамен {{count}} сағат',\n      pluralGenitive: 'шамамен {{count}} сағат'\n    },\n    future: {\n      singularNominative: 'шамамен {{count}} сағаттан кейін',\n      singularGenitive: 'шамамен {{count}} сағаттан кейін',\n      pluralGenitive: 'шамамен {{count}} сағаттан кейін'\n    }\n  },\n  xHours: {\n    regular: {\n      singularNominative: '{{count}} сағат',\n      singularGenitive: '{{count}} сағат',\n      pluralGenitive: '{{count}} сағат'\n    }\n  },\n  xDays: {\n    regular: {\n      singularNominative: '{{count}} күн',\n      singularGenitive: '{{count}} күн',\n      pluralGenitive: '{{count}} күн'\n    },\n    future: {\n      singularNominative: '{{count}} күннен кейін',\n      singularGenitive: '{{count}} күннен кейін',\n      pluralGenitive: '{{count}} күннен кейін'\n    }\n  },\n  aboutXWeeks: {\n    type: 'weeks',\n    one: 'шамамен 1 апта',\n    other: 'шамамен {{count}} апта'\n  },\n  xWeeks: {\n    type: 'weeks',\n    one: '1 апта',\n    other: '{{count}} апта'\n  },\n  aboutXMonths: {\n    regular: {\n      singularNominative: 'шамамен {{count}} ай',\n      singularGenitive: 'шамамен {{count}} ай',\n      pluralGenitive: 'шамамен {{count}} ай'\n    },\n    future: {\n      singularNominative: 'шамамен {{count}} айдан кейін',\n      singularGenitive: 'шамамен {{count}} айдан кейін',\n      pluralGenitive: 'шамамен {{count}} айдан кейін'\n    }\n  },\n  xMonths: {\n    regular: {\n      singularNominative: '{{count}} ай',\n      singularGenitive: '{{count}} ай',\n      pluralGenitive: '{{count}} ай'\n    }\n  },\n  aboutXYears: {\n    regular: {\n      singularNominative: 'шамамен {{count}} жыл',\n      singularGenitive: 'шамамен {{count}} жыл',\n      pluralGenitive: 'шамамен {{count}} жыл'\n    },\n    future: {\n      singularNominative: 'шамамен {{count}} жылдан кейін',\n      singularGenitive: 'шамамен {{count}} жылдан кейін',\n      pluralGenitive: 'шамамен {{count}} жылдан кейін'\n    }\n  },\n  xYears: {\n    regular: {\n      singularNominative: '{{count}} жыл',\n      singularGenitive: '{{count}} жыл',\n      pluralGenitive: '{{count}} жыл'\n    },\n    future: {\n      singularNominative: '{{count}} жылдан кейін',\n      singularGenitive: '{{count}} жылдан кейін',\n      pluralGenitive: '{{count}} жылдан кейін'\n    }\n  },\n  overXYears: {\n    regular: {\n      singularNominative: '{{count}} жылдан астам',\n      singularGenitive: '{{count}} жылдан астам',\n      pluralGenitive: '{{count}} жылдан астам'\n    },\n    future: {\n      singularNominative: '{{count}} жылдан астам',\n      singularGenitive: '{{count}} жылдан астам',\n      pluralGenitive: '{{count}} жылдан астам'\n    }\n  },\n  almostXYears: {\n    regular: {\n      singularNominative: '{{count}} жылға жақын',\n      singularGenitive: '{{count}} жылға жақын',\n      pluralGenitive: '{{count}} жылға жақын'\n    },\n    future: {\n      singularNominative: '{{count}} жылдан кейін',\n      singularGenitive: '{{count}} жылдан кейін',\n      pluralGenitive: '{{count}} жылдан кейін'\n    }\n  }\n};\n\nfunction declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one && count === 1) return scheme.one;\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', String(count)); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', String(count)); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', String(count));\n  }\n}\n\nvar formatDistance = function (token, count, options) {\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'function') return tokenValue(options);\n\n  if (tokenValue.type === 'weeks') {\n    return count === 1 ? tokenValue.one : tokenValue.other.replace('{{count}}', String(count));\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      if (tokenValue.future) {\n        return declension(tokenValue.future, count);\n      } else {\n        return declension(tokenValue.regular, count) + ' кейін';\n      }\n    } else {\n      if (tokenValue.past) {\n        return declension(tokenValue.past, count);\n      } else {\n        return declension(tokenValue.regular, count) + ' бұрын';\n      }\n    }\n  } else {\n    return declension(tokenValue.regular, count);\n  }\n};\n\nexport default formatDistance;","map":{"version":3,"names":["formatDistanceLocale","lessThanXSeconds","regular","one","singularNominative","singularGenitive","pluralGenitive","future","xSeconds","past","halfAMinute","options","addSuffix","comparison","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","type","other","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","declension","scheme","count","rem10","rem100","replace","String","formatDistance","token","tokenValue"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/date-fns/esm/locale/kk/_lib/formatDistance/index.js"],"sourcesContent":["var formatDistanceLocale = {\n  lessThanXSeconds: {\n    regular: {\n      one: '1 секундтан аз',\n      singularNominative: '{{count}} секундтан аз',\n      singularGenitive: '{{count}} секундтан аз',\n      pluralGenitive: '{{count}} секундтан аз'\n    },\n    future: {\n      one: 'бір секундтан кейін',\n      singularNominative: '{{count}} секундтан кейін',\n      singularGenitive: '{{count}} секундтан кейін',\n      pluralGenitive: '{{count}} секундтан кейін'\n    }\n  },\n  xSeconds: {\n    regular: {\n      singularNominative: '{{count}} секунд',\n      singularGenitive: '{{count}} секунд',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунд бұрын',\n      singularGenitive: '{{count}} секунд бұрын',\n      pluralGenitive: '{{count}} секунд бұрын'\n    },\n    future: {\n      singularNominative: '{{count}} секундтан кейін',\n      singularGenitive: '{{count}} секундтан кейін',\n      pluralGenitive: '{{count}} секундтан кейін'\n    }\n  },\n  halfAMinute: function (options) {\n    if (options !== null && options !== void 0 && options.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        return 'жарты минут ішінде';\n      } else {\n        return 'жарты минут бұрын';\n      }\n    }\n\n    return 'жарты минут';\n  },\n  lessThanXMinutes: {\n    regular: {\n      one: '1 минуттан аз',\n      singularNominative: '{{count}} минуттан аз',\n      singularGenitive: '{{count}} минуттан аз',\n      pluralGenitive: '{{count}} минуттан аз'\n    },\n    future: {\n      one: 'минуттан кем ',\n      singularNominative: '{{count}} минуттан кем',\n      singularGenitive: '{{count}} минуттан кем',\n      pluralGenitive: '{{count}} минуттан кем'\n    }\n  },\n  xMinutes: {\n    regular: {\n      singularNominative: '{{count}} минут',\n      singularGenitive: '{{count}} минут',\n      pluralGenitive: '{{count}} минут'\n    },\n    past: {\n      singularNominative: '{{count}} минут бұрын',\n      singularGenitive: '{{count}} минут бұрын',\n      pluralGenitive: '{{count}} минут бұрын'\n    },\n    future: {\n      singularNominative: '{{count}} минуттан кейін',\n      singularGenitive: '{{count}} минуттан кейін',\n      pluralGenitive: '{{count}} минуттан кейін'\n    }\n  },\n  aboutXHours: {\n    regular: {\n      singularNominative: 'шамамен {{count}} сағат',\n      singularGenitive: 'шамамен {{count}} сағат',\n      pluralGenitive: 'шамамен {{count}} сағат'\n    },\n    future: {\n      singularNominative: 'шамамен {{count}} сағаттан кейін',\n      singularGenitive: 'шамамен {{count}} сағаттан кейін',\n      pluralGenitive: 'шамамен {{count}} сағаттан кейін'\n    }\n  },\n  xHours: {\n    regular: {\n      singularNominative: '{{count}} сағат',\n      singularGenitive: '{{count}} сағат',\n      pluralGenitive: '{{count}} сағат'\n    }\n  },\n  xDays: {\n    regular: {\n      singularNominative: '{{count}} күн',\n      singularGenitive: '{{count}} күн',\n      pluralGenitive: '{{count}} күн'\n    },\n    future: {\n      singularNominative: '{{count}} күннен кейін',\n      singularGenitive: '{{count}} күннен кейін',\n      pluralGenitive: '{{count}} күннен кейін'\n    }\n  },\n  aboutXWeeks: {\n    type: 'weeks',\n    one: 'шамамен 1 апта',\n    other: 'шамамен {{count}} апта'\n  },\n  xWeeks: {\n    type: 'weeks',\n    one: '1 апта',\n    other: '{{count}} апта'\n  },\n  aboutXMonths: {\n    regular: {\n      singularNominative: 'шамамен {{count}} ай',\n      singularGenitive: 'шамамен {{count}} ай',\n      pluralGenitive: 'шамамен {{count}} ай'\n    },\n    future: {\n      singularNominative: 'шамамен {{count}} айдан кейін',\n      singularGenitive: 'шамамен {{count}} айдан кейін',\n      pluralGenitive: 'шамамен {{count}} айдан кейін'\n    }\n  },\n  xMonths: {\n    regular: {\n      singularNominative: '{{count}} ай',\n      singularGenitive: '{{count}} ай',\n      pluralGenitive: '{{count}} ай'\n    }\n  },\n  aboutXYears: {\n    regular: {\n      singularNominative: 'шамамен {{count}} жыл',\n      singularGenitive: 'шамамен {{count}} жыл',\n      pluralGenitive: 'шамамен {{count}} жыл'\n    },\n    future: {\n      singularNominative: 'шамамен {{count}} жылдан кейін',\n      singularGenitive: 'шамамен {{count}} жылдан кейін',\n      pluralGenitive: 'шамамен {{count}} жылдан кейін'\n    }\n  },\n  xYears: {\n    regular: {\n      singularNominative: '{{count}} жыл',\n      singularGenitive: '{{count}} жыл',\n      pluralGenitive: '{{count}} жыл'\n    },\n    future: {\n      singularNominative: '{{count}} жылдан кейін',\n      singularGenitive: '{{count}} жылдан кейін',\n      pluralGenitive: '{{count}} жылдан кейін'\n    }\n  },\n  overXYears: {\n    regular: {\n      singularNominative: '{{count}} жылдан астам',\n      singularGenitive: '{{count}} жылдан астам',\n      pluralGenitive: '{{count}} жылдан астам'\n    },\n    future: {\n      singularNominative: '{{count}} жылдан астам',\n      singularGenitive: '{{count}} жылдан астам',\n      pluralGenitive: '{{count}} жылдан астам'\n    }\n  },\n  almostXYears: {\n    regular: {\n      singularNominative: '{{count}} жылға жақын',\n      singularGenitive: '{{count}} жылға жақын',\n      pluralGenitive: '{{count}} жылға жақын'\n    },\n    future: {\n      singularNominative: '{{count}} жылдан кейін',\n      singularGenitive: '{{count}} жылдан кейін',\n      pluralGenitive: '{{count}} жылдан кейін'\n    }\n  }\n};\n\nfunction declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one && count === 1) return scheme.one;\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', String(count)); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', String(count)); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', String(count));\n  }\n}\n\nvar formatDistance = function (token, count, options) {\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'function') return tokenValue(options);\n\n  if (tokenValue.type === 'weeks') {\n    return count === 1 ? tokenValue.one : tokenValue.other.replace('{{count}}', String(count));\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      if (tokenValue.future) {\n        return declension(tokenValue.future, count);\n      } else {\n        return declension(tokenValue.regular, count) + ' кейін';\n      }\n    } else {\n      if (tokenValue.past) {\n        return declension(tokenValue.past, count);\n      } else {\n        return declension(tokenValue.regular, count) + ' бұрын';\n      }\n    }\n  } else {\n    return declension(tokenValue.regular, count);\n  }\n};\n\nexport default formatDistance;"],"mappings":"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"},"metadata":{},"sourceType":"module"}