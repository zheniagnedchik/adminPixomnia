{"ast":null,"code":"const authProvider = {\n  login: _ref => {\n    let {\n      username,\n      password\n    } = _ref;\n\n    if (username !== \"john\" || password !== \"123\") {\n      return Promise.reject();\n    }\n\n    localStorage.setItem(\"username\", username);\n    return Promise.resolve();\n  },\n  logout: () => {\n    localStorage.removeItem(\"username\");\n    return Promise.resolve();\n  },\n  checkAuth: () => localStorage.getItem(\"username\") ? Promise.resolve() : Promise.reject(),\n  checkError: error => {\n    const status = error.status;\n\n    if (status === 401 || status === 403) {\n      localStorage.removeItem(\"username\");\n      return Promise.reject();\n    } // other error code (404, 500, etc): no need to log out\n\n\n    return Promise.resolve();\n  },\n  getIdentity: () => Promise.resolve({\n    id: \"user\",\n    fullName: \"John Doe\"\n  }),\n  getPermissions: () => Promise.resolve(\"\")\n};\nexport default authProvider;","map":{"version":3,"names":["authProvider","login","username","password","Promise","reject","localStorage","setItem","resolve","logout","removeItem","checkAuth","getItem","checkError","error","status","getIdentity","id","fullName","getPermissions"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/src/Utils/authProvider.js"],"sourcesContent":["const authProvider = {\n  login: ({ username, password }) => {\n    if (username !== \"john\" || password !== \"123\") {\n      return Promise.reject();\n    }\n    localStorage.setItem(\"username\", username);\n    return Promise.resolve();\n  },\n  logout: () => {\n    localStorage.removeItem(\"username\");\n    return Promise.resolve();\n  },\n  checkAuth: () =>\n    localStorage.getItem(\"username\") ? Promise.resolve() : Promise.reject(),\n  checkError: (error) => {\n    const status = error.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem(\"username\");\n      return Promise.reject();\n    }\n    // other error code (404, 500, etc): no need to log out\n    return Promise.resolve();\n  },\n  getIdentity: () =>\n    Promise.resolve({\n      id: \"user\",\n      fullName: \"John Doe\",\n    }),\n  getPermissions: () => Promise.resolve(\"\"),\n};\n\nexport default authProvider;\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,KAAK,EAAE,QAA4B;IAAA,IAA3B;MAAEC,QAAF;MAAYC;IAAZ,CAA2B;;IACjC,IAAID,QAAQ,KAAK,MAAb,IAAuBC,QAAQ,KAAK,KAAxC,EAA+C;MAC7C,OAAOC,OAAO,CAACC,MAAR,EAAP;IACD;;IACDC,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCL,QAAjC;IACA,OAAOE,OAAO,CAACI,OAAR,EAAP;EACD,CAPkB;EAQnBC,MAAM,EAAE,MAAM;IACZH,YAAY,CAACI,UAAb,CAAwB,UAAxB;IACA,OAAON,OAAO,CAACI,OAAR,EAAP;EACD,CAXkB;EAYnBG,SAAS,EAAE,MACTL,YAAY,CAACM,OAAb,CAAqB,UAArB,IAAmCR,OAAO,CAACI,OAAR,EAAnC,GAAuDJ,OAAO,CAACC,MAAR,EAbtC;EAcnBQ,UAAU,EAAGC,KAAD,IAAW;IACrB,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;;IACA,IAAIA,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;MACpCT,YAAY,CAACI,UAAb,CAAwB,UAAxB;MACA,OAAON,OAAO,CAACC,MAAR,EAAP;IACD,CALoB,CAMrB;;;IACA,OAAOD,OAAO,CAACI,OAAR,EAAP;EACD,CAtBkB;EAuBnBQ,WAAW,EAAE,MACXZ,OAAO,CAACI,OAAR,CAAgB;IACdS,EAAE,EAAE,MADU;IAEdC,QAAQ,EAAE;EAFI,CAAhB,CAxBiB;EA4BnBC,cAAc,EAAE,MAAMf,OAAO,CAACI,OAAR,CAAgB,EAAhB;AA5BH,CAArB;AA+BA,eAAeR,YAAf"},"metadata":{},"sourceType":"module"}