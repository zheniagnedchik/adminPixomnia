{"ast":null,"code":"import { useCallback } from 'react';\nimport { useQueryClient } from 'react-query';\n/**\n * Hook for triggering a page refresh. Returns a callback function.\n *\n * The callback invalidates all queries and refetches the active ones.\n * Any component depending on react-query data will be re-rendered.\n *\n * @example\n *\n * const refresh = useRefresh();\n * const handleClick = () => {\n *     refresh();\n * };\n */\n\nexport var useRefresh = function () {\n  var queryClient = useQueryClient();\n  return useCallback(function () {\n    queryClient.invalidateQueries();\n  }, [queryClient]);\n};","map":{"version":3,"names":["useCallback","useQueryClient","useRefresh","queryClient","invalidateQueries"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/dataProvider/useRefresh.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { useQueryClient } from 'react-query';\n/**\n * Hook for triggering a page refresh. Returns a callback function.\n *\n * The callback invalidates all queries and refetches the active ones.\n * Any component depending on react-query data will be re-rendered.\n *\n * @example\n *\n * const refresh = useRefresh();\n * const handleClick = () => {\n *     refresh();\n * };\n */\nexport var useRefresh = function () {\n    var queryClient = useQueryClient();\n    return useCallback(function () {\n        queryClient.invalidateQueries();\n    }, [queryClient]);\n};\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,UAAU,GAAG,YAAY;EAChC,IAAIC,WAAW,GAAGF,cAAc,EAAhC;EACA,OAAOD,WAAW,CAAC,YAAY;IAC3BG,WAAW,CAACC,iBAAZ;EACH,CAFiB,EAEf,CAACD,WAAD,CAFe,CAAlB;AAGH,CALM"},"metadata":{},"sourceType":"module"}