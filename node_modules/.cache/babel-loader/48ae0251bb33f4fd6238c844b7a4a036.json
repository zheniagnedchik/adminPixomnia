{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport { useCallback } from 'react';\nimport { useStore } from '../../store';\n/**\n * State-like hook for controlling the expanded state of a list item\n *\n * @param {string} resource The resource name, e.g. 'posts'\n * @param {string|integer} id The record identifier, e.g. 123\n * @param {boolean} single Forces only one id to be expanded at a time\n * @returns {Object} Destructure as [expanded, toggleExpanded].\n *\n * @example\n *\n * const [expanded, toggleExpanded] = useExpanded('posts', 123);\n * const expandIcon = expanded ? ExpandLess : ExpandMore;\n * const onExpandClick = () => toggleExpanded();\n */\n\nexport var useExpanded = function (resource, id, single) {\n  if (single === void 0) {\n    single = false;\n  }\n\n  var _a = useStore(\"\".concat(resource, \".datagrid.expanded\"), []),\n      expandedIds = _a[0],\n      setExpandedIds = _a[1];\n\n  var expanded = Array.isArray(expandedIds) ? // eslint-disable-next-line eqeqeq\n  expandedIds.map(function (el) {\n    return el == id;\n  }).indexOf(true) !== -1 : false;\n  var toggleExpanded = useCallback(function () {\n    setExpandedIds(function (ids) {\n      if (!Array.isArray(ids)) {\n        return [id];\n      }\n\n      var index = ids.findIndex(function (el) {\n        return el == id;\n      }); // eslint-disable-line eqeqeq\n\n      return index > -1 ? single ? [] : __spreadArray(__spreadArray([], ids.slice(0, index), true), ids.slice(index + 1), true) : single ? [id] : __spreadArray(__spreadArray([], ids, true), [id], false);\n    });\n  }, [setExpandedIds, id, single]);\n  return [expanded, toggleExpanded];\n};","map":{"version":3,"names":["__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","useCallback","useStore","useExpanded","resource","id","single","_a","expandedIds","setExpandedIds","expanded","isArray","map","el","indexOf","toggleExpanded","ids","index","findIndex"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/controller/list/useExpanded.js"],"sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useCallback } from 'react';\nimport { useStore } from '../../store';\n/**\n * State-like hook for controlling the expanded state of a list item\n *\n * @param {string} resource The resource name, e.g. 'posts'\n * @param {string|integer} id The record identifier, e.g. 123\n * @param {boolean} single Forces only one id to be expanded at a time\n * @returns {Object} Destructure as [expanded, toggleExpanded].\n *\n * @example\n *\n * const [expanded, toggleExpanded] = useExpanded('posts', 123);\n * const expandIcon = expanded ? ExpandLess : ExpandMore;\n * const onExpandClick = () => toggleExpanded();\n */\nexport var useExpanded = function (resource, id, single) {\n    if (single === void 0) { single = false; }\n    var _a = useStore(\"\".concat(resource, \".datagrid.expanded\"), []), expandedIds = _a[0], setExpandedIds = _a[1];\n    var expanded = Array.isArray(expandedIds)\n        ? // eslint-disable-next-line eqeqeq\n            expandedIds.map(function (el) { return el == id; }).indexOf(true) !== -1\n        : false;\n    var toggleExpanded = useCallback(function () {\n        setExpandedIds(function (ids) {\n            if (!Array.isArray(ids)) {\n                return [id];\n            }\n            var index = ids.findIndex(function (el) { return el == id; }); // eslint-disable-line eqeqeq\n            return index > -1\n                ? single\n                    ? []\n                    : __spreadArray(__spreadArray([], ids.slice(0, index), true), ids.slice(index + 1), true)\n                : single\n                    ? [id]\n                    : __spreadArray(__spreadArray([], ids, true), [id], false);\n        });\n    }, [setExpandedIds, id, single]);\n    return [expanded, toggleExpanded];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}