{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport * as React from 'react';\nimport { isValidElement, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport clsx from 'clsx';\nimport { Autocomplete, Chip, TextField } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { FieldTitle, useChoicesContext, useInput, useSuggestions, useTimeout, useTranslate, warning } from 'ra-core';\nimport { useSupportCreateSuggestion } from './useSupportCreateSuggestion';\nimport { InputHelperText } from './InputHelperText';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\n/**\n * An Input component for an autocomplete field, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <AutocompleteInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <AutocompleteInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <AutocompleteInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that can access\n * the related choice through the `useRecordContext` hook. You can use Field components there.\n * Note that you must also specify the `matchSuggestion` and `inputText` props\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const matchSuggestion = (filterValue, choice) => choice.first_name.match(filterValue) || choice.last_name.match(filterValue)\n * const inputText = (record) => `${record.fullName} (${record.language})`;\n *\n * const FullNameField = () => {\n *     const record = useRecordContext();\n *     return <span>{record.first_name} {record.last_name}</span>;\n * }\n * <AutocompleteInput source=\"author\" choices={choices} optionText={<FullNameField />} matchSuggestion={matchSuggestion} inputText={inputText} />\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <AutocompleteInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the MUI <TextField> component\n *\n * @example\n * <AutocompleteInput source=\"author_id\" options={{ color: 'secondary', InputLabelProps: { shrink: true } }} />\n */\n\nexport var AutocompleteInput = function (props) {\n  var choicesProp = props.choices,\n      className = props.className,\n      _a = props.clearText,\n      clearText = _a === void 0 ? 'ra.action.clear_input_value' : _a,\n      _b = props.closeText,\n      closeText = _b === void 0 ? 'ra.action.close' : _b,\n      create = props.create,\n      createLabel = props.createLabel,\n      createItemLabel = props.createItemLabel,\n      createValue = props.createValue,\n      _c = props.debounce,\n      debounceDelay = _c === void 0 ? 250 : _c,\n      _d = props.defaultValue,\n      defaultValue = _d === void 0 ? '' : _d,\n      emptyText = props.emptyText,\n      _e = props.emptyValue,\n      emptyValue = _e === void 0 ? '' : _e,\n      fieldOverride = props.field,\n      format = props.format,\n      helperText = props.helperText,\n      idOverride = props.id,\n      inputText = props.inputText,\n      isFetchingProp = props.isFetching,\n      isLoadingProp = props.isLoading,\n      isRequiredOverride = props.isRequired,\n      label = props.label,\n      limitChoicesToValue = props.limitChoicesToValue,\n      matchSuggestion = props.matchSuggestion,\n      margin = props.margin,\n      fieldStateOverride = props.fieldState,\n      _f = props.filterToQuery,\n      filterToQuery = _f === void 0 ? DefaultFilterToQuery : _f,\n      formStateOverride = props.formState,\n      _g = props.multiple,\n      multiple = _g === void 0 ? false : _g,\n      noOptionsText = props.noOptionsText,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onCreate = props.onCreate,\n      _h = props.openText,\n      openText = _h === void 0 ? 'ra.action.open' : _h,\n      _j = props.optionText,\n      optionText = _j === void 0 ? 'name' : _j,\n      _k = props.optionValue,\n      optionValue = _k === void 0 ? 'id' : _k,\n      parse = props.parse,\n      resourceProp = props.resource,\n      shouldRenderSuggestions = props.shouldRenderSuggestions,\n      setFilter = props.setFilter,\n      size = props.size,\n      sourceProp = props.source,\n      suggestionLimit = props.suggestionLimit,\n      TextFieldProps = props.TextFieldProps,\n      translateChoice = props.translateChoice,\n      validate = props.validate,\n      variant = props.variant,\n      rest = __rest(props, [\"choices\", \"className\", \"clearText\", \"closeText\", \"create\", \"createLabel\", \"createItemLabel\", \"createValue\", \"debounce\", \"defaultValue\", \"emptyText\", \"emptyValue\", \"field\", \"format\", \"helperText\", \"id\", \"inputText\", \"isFetching\", \"isLoading\", \"isRequired\", \"label\", \"limitChoicesToValue\", \"matchSuggestion\", \"margin\", \"fieldState\", \"filterToQuery\", \"formState\", \"multiple\", \"noOptionsText\", \"onBlur\", \"onChange\", \"onCreate\", \"openText\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"shouldRenderSuggestions\", \"setFilter\", \"size\", \"source\", \"suggestionLimit\", \"TextFieldProps\", \"translateChoice\", \"validate\", \"variant\"]);\n\n  var _l = useChoicesContext({\n    choices: choicesProp,\n    isFetching: isFetchingProp,\n    isLoading: isLoadingProp,\n    resource: resourceProp,\n    source: sourceProp\n  }),\n      allChoices = _l.allChoices,\n      isLoading = _l.isLoading,\n      resource = _l.resource,\n      source = _l.source,\n      setFilters = _l.setFilters;\n\n  var translate = useTranslate();\n\n  var _m = useInput(__assign({\n    defaultValue: defaultValue,\n    format: format,\n    id: idOverride,\n    field: fieldOverride,\n    fieldState: fieldStateOverride,\n    formState: formStateOverride,\n    onBlur: onBlur,\n    onChange: onChange,\n    parse: parse,\n    resource: resource,\n    source: source,\n    validate: validate\n  }, rest)),\n      id = _m.id,\n      field = _m.field,\n      isRequired = _m.isRequired,\n      _o = _m.fieldState,\n      error = _o.error,\n      invalid = _o.invalid,\n      isTouched = _o.isTouched,\n      isSubmitted = _m.formState.isSubmitted;\n\n  var selectedChoice = useSelectedChoice(field.value, {\n    choices: allChoices,\n    // @ts-ignore\n    multiple: multiple,\n    optionValue: optionValue\n  });\n  useEffect(function () {\n    // eslint-disable-next-line eqeqeq\n    if (isValidElement(optionText) && inputText == undefined) {\n      throw new Error(\"\\nIf you provided a React element for the optionText prop, you must also provide the inputText prop (used for the text input)\");\n    } // eslint-disable-next-line eqeqeq\n\n\n    if (isValidElement(optionText) && matchSuggestion == undefined) {\n      throw new Error(\"\\nIf you provided a React element for the optionText prop, you must also provide the matchSuggestion prop (used to match the user input with a choice)\");\n    }\n  }, [optionText, inputText, matchSuggestion]);\n  useEffect(function () {\n    warning(\n    /* eslint-disable eqeqeq */\n    shouldRenderSuggestions != undefined && noOptionsText == undefined, \"When providing a shouldRenderSuggestions function, we recommend you also provide the noOptionsText prop and set it to a text explaining users why no options are displayed. It supports translation keys.\");\n    /* eslint-enable eqeqeq */\n  }, [shouldRenderSuggestions, noOptionsText]);\n\n  var _p = useSuggestions({\n    choices: allChoices,\n    emptyText: emptyText,\n    emptyValue: emptyValue,\n    limitChoicesToValue: limitChoicesToValue,\n    matchSuggestion: matchSuggestion,\n    optionText: optionText,\n    optionValue: optionValue,\n    selectedItem: selectedChoice,\n    suggestionLimit: suggestionLimit,\n    translateChoice: translateChoice\n  }),\n      getChoiceText = _p.getChoiceText,\n      getChoiceValue = _p.getChoiceValue,\n      getSuggestions = _p.getSuggestions;\n\n  var _q = useState(''),\n      filterValue = _q[0],\n      setFilterValue = _q[1];\n\n  var handleChange = function (newValue) {\n    var _a;\n\n    if (multiple) {\n      if (Array.isArray(newValue)) {\n        field.onChange(newValue.map(getChoiceValue));\n      } else {\n        field.onChange(__spreadArray(__spreadArray([], (_a = field.value) !== null && _a !== void 0 ? _a : [], true), [getChoiceValue(newValue)], false));\n      }\n    } else {\n      field.onChange(getChoiceValue(newValue) || '');\n    }\n  }; // eslint-disable-next-line\n\n\n  var debouncedSetFilter = useCallback(debounce(function (filter) {\n    if (setFilter) {\n      return setFilter(filter);\n    }\n\n    if (choicesProp) {\n      return;\n    }\n\n    setFilters(filterToQuery(filter), undefined, true);\n  }, debounceDelay), [debounceDelay, setFilters, setFilter]); // We must reset the filter every time the value changes to ensure we\n  // display at least some choices even if the input has a value.\n  // Otherwise, it would only display the currently selected one and the user\n  // would have to first clear the input before seeing any other choices\n\n  var currentValue = useRef(field.value);\n  useEffect(function () {\n    if (!isEqual(currentValue.current, field.value)) {\n      currentValue.current = field.value;\n      debouncedSetFilter('');\n    }\n  }, [field.value]); // eslint-disable-line\n\n  var _r = useSupportCreateSuggestion({\n    create: create,\n    createLabel: createLabel,\n    createItemLabel: createItemLabel,\n    createValue: createValue,\n    handleChange: handleChange,\n    filter: filterValue,\n    onCreate: onCreate,\n    optionText: optionText\n  }),\n      getCreateItem = _r.getCreateItem,\n      handleChangeWithCreateSupport = _r.handleChange,\n      createElement = _r.createElement;\n\n  var getOptionLabel = useCallback(function (option) {\n    // eslint-disable-next-line eqeqeq\n    if (option == undefined) {\n      return '';\n    } // Value selected with enter, right from the input\n\n\n    if (typeof option === 'string') {\n      return option;\n    } // eslint-disable-next-line eqeqeq\n\n\n    if (inputText != undefined) {\n      return inputText(option);\n    }\n\n    return getChoiceText(option);\n  }, [getChoiceText, inputText]);\n  useEffect(function () {\n    if (!multiple) {\n      var optionLabel = getOptionLabel(selectedChoice);\n\n      if (typeof optionLabel === 'string') {\n        setFilterValue(optionLabel);\n      } else {\n        throw new Error('When optionText returns a React element, you must also provide the inputText prop');\n      }\n    }\n  }, [getOptionLabel, multiple, selectedChoice]);\n\n  var handleInputChange = function (event, newInputValue, reason) {\n    setFilterValue(newInputValue);\n    debouncedSetFilter(newInputValue);\n  };\n\n  var doesQueryMatchSuggestion = useCallback(function (filter) {\n    var selectedItemTexts = [];\n\n    if (multiple) {\n      selectedItemTexts = selectedChoice.map(function (item) {\n        return getOptionLabel(item);\n      });\n    } else {\n      selectedItemTexts = [getOptionLabel(selectedChoice)];\n    }\n\n    var hasOption = !!allChoices ? allChoices.some(function (choice) {\n      return getOptionLabel(choice) === filter;\n    }) : false;\n    return selectedItemTexts.includes(filter) || hasOption;\n  }, [allChoices, getOptionLabel, multiple, selectedChoice]);\n\n  var filterOptions = function (options, params) {\n    var inputValue = params.inputValue;\n\n    if ((onCreate || create) && inputValue !== '' && !doesQueryMatchSuggestion(filterValue)) {\n      return options.concat(getCreateItem(inputValue));\n    }\n\n    return options;\n  };\n\n  var handleAutocompleteChange = function (event, newValue, reason) {\n    handleChangeWithCreateSupport(newValue != null ? newValue : '');\n  };\n\n  var oneSecondHasPassed = useTimeout(1000, filterValue); // To avoid displaying an empty list of choices while a search is in progress,\n  // we store the last choices in a ref. We'll display those last choices until\n  // a second has passed.\n\n  var currentChoices = useRef(allChoices);\n  useEffect(function () {\n    if (allChoices && (allChoices.length > 0 || oneSecondHasPassed)) {\n      currentChoices.current = allChoices;\n    }\n  }, [allChoices, oneSecondHasPassed]);\n  var suggestions = useMemo(function () {\n    var _a;\n\n    if (setFilters && (allChoices === null || allChoices === void 0 ? void 0 : allChoices.length) === 0 && !oneSecondHasPassed) {\n      return (_a = currentChoices.current) !== null && _a !== void 0 ? _a : [];\n    }\n\n    return getSuggestions(filterValue);\n  }, [allChoices, filterValue, getSuggestions, oneSecondHasPassed, setFilters]);\n\n  var isOptionEqualToValue = function (option, value) {\n    // eslint-disable-next-line eqeqeq\n    return getChoiceValue(option) == getChoiceValue(value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(StyledAutocomplete, __assign({\n    blurOnSelect: true,\n    className: clsx('ra-input', \"ra-input-\".concat(source), className),\n    clearText: translate(clearText, {\n      _: clearText\n    }),\n    closeText: translate(closeText, {\n      _: closeText\n    }),\n    openOnFocus: true,\n    openText: translate(openText, {\n      _: openText\n    }),\n    id: id,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterSelectedOptions: true,\n    renderInput: function (params) {\n      return React.createElement(TextField, __assign({\n        name: field.name,\n        label: React.createElement(FieldTitle, {\n          label: label,\n          source: source,\n          resource: resourceProp,\n          isRequired: typeof isRequiredOverride !== 'undefined' ? isRequiredOverride : isRequired\n        }),\n        error: (isTouched || isSubmitted) && invalid,\n        helperText: React.createElement(InputHelperText, {\n          touched: isTouched || isSubmitted,\n          error: error === null || error === void 0 ? void 0 : error.message,\n          helperText: helperText\n        }),\n        margin: margin,\n        variant: variant,\n        className: AutocompleteInputClasses.textField\n      }, TextFieldProps, params, {\n        size: size\n      }));\n    },\n    multiple: multiple,\n    renderTags: function (value, getTagProps) {\n      return value.map(function (option, index) {\n        return React.createElement(Chip, __assign({\n          label: isValidElement(optionText) ? inputText(option) : getChoiceText(option),\n          sx: {\n            '.MuiSvgIcon-root': {\n              // FIXME: Workaround to allow choices deletion\n              // Maybe related to storybook and mui using different versions of emotion\n              zIndex: 100\n            }\n          },\n          size: \"small\"\n        }, getTagProps({\n          index: index\n        })));\n      });\n    },\n    noOptionsText: typeof noOptionsText === 'string' ? translate(noOptionsText, {\n      _: noOptionsText\n    }) : noOptionsText,\n    selectOnFocus: true,\n    clearOnBlur: true\n  }, sanitizeInputRestProps(rest), {\n    freeSolo: !!create || !!onCreate,\n    handleHomeEndKeys: !!create || !!onCreate,\n    filterOptions: filterOptions,\n    options: shouldRenderSuggestions == undefined || // eslint-disable-line eqeqeq\n    shouldRenderSuggestions(filterValue) ? suggestions : [],\n    getOptionLabel: getOptionLabel,\n    inputValue: filterValue,\n    loading: isLoading && suggestions.length === 0 && oneSecondHasPassed,\n    value: selectedChoice,\n    onChange: handleAutocompleteChange,\n    onBlur: field.onBlur,\n    onInputChange: handleInputChange,\n    renderOption: function (props, record) {\n      return React.createElement(\"li\", __assign({}, props), getChoiceText(record));\n    }\n  })), createElement);\n};\nvar PREFIX = 'RaAutocompleteInput';\nexport var AutocompleteInputClasses = {\n  textField: \"\".concat(PREFIX, \"-textField\")\n};\nvar StyledAutocomplete = styled(Autocomplete, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(AutocompleteInputClasses.textField)] = {\n    minWidth: theme.spacing(20)\n  }, _b;\n});\n/**\n * Returns the selected choice (or choices if multiple) by matching the input value with the choices.\n */\n\nvar useSelectedChoice = function (value, _a) {\n  var choices = _a.choices,\n      multiple = _a.multiple,\n      optionValue = _a.optionValue;\n  var selectedChoiceRef = useRef(getSelectedItems(choices, value, optionValue, multiple));\n\n  var _b = useState(function () {\n    return getSelectedItems(choices, value, optionValue, multiple);\n  }),\n      selectedChoice = _b[0],\n      setSelectedChoice = _b[1]; // As the selected choices are objects, we want to ensure we pass the same\n  // reference to the Autocomplete as it would reset its filter value otherwise.\n\n\n  useEffect(function () {\n    var newSelectedItems = getSelectedItems(choices, value, optionValue, multiple);\n\n    if (!isEqual(selectedChoiceRef.current, newSelectedItems)) {\n      selectedChoiceRef.current = newSelectedItems;\n      setSelectedChoice(newSelectedItems);\n    }\n  }, [choices, value, multiple, optionValue]);\n  return selectedChoice || null;\n};\n\nvar getSelectedItems = function (choices, value, optionValue, multiple) {\n  if (choices === void 0) {\n    choices = [];\n  }\n\n  if (optionValue === void 0) {\n    optionValue = 'id';\n  }\n\n  if (multiple) {\n    return (value || []).map(function (item) {\n      return choices.find(function (choice) {\n        return item === get(choice, optionValue);\n      });\n    }).filter(function (item) {\n      return !!item;\n    });\n  }\n\n  return choices.find(function (choice) {\n    return get(choice, optionValue) === value;\n  }) || '';\n};\n\nvar DefaultFilterToQuery = function (searchText) {\n  return {\n    q: searchText\n  };\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArray","to","from","pack","l","ar","Array","slice","concat","React","isValidElement","useCallback","useEffect","useMemo","useRef","useState","debounce","get","isEqual","clsx","Autocomplete","Chip","TextField","styled","FieldTitle","useChoicesContext","useInput","useSuggestions","useTimeout","useTranslate","warning","useSupportCreateSuggestion","InputHelperText","sanitizeInputRestProps","AutocompleteInput","props","choicesProp","choices","className","_a","clearText","_b","closeText","create","createLabel","createItemLabel","createValue","_c","debounceDelay","_d","defaultValue","emptyText","_e","emptyValue","fieldOverride","field","format","helperText","idOverride","id","inputText","isFetchingProp","isFetching","isLoadingProp","isLoading","isRequiredOverride","isRequired","label","limitChoicesToValue","matchSuggestion","margin","fieldStateOverride","fieldState","_f","filterToQuery","DefaultFilterToQuery","formStateOverride","formState","_g","multiple","noOptionsText","onBlur","onChange","onCreate","_h","openText","_j","optionText","_k","optionValue","parse","resourceProp","resource","shouldRenderSuggestions","setFilter","size","sourceProp","source","suggestionLimit","TextFieldProps","translateChoice","validate","variant","rest","_l","allChoices","setFilters","translate","_m","_o","error","invalid","isTouched","isSubmitted","selectedChoice","useSelectedChoice","value","undefined","Error","_p","selectedItem","getChoiceText","getChoiceValue","getSuggestions","_q","filterValue","setFilterValue","handleChange","newValue","isArray","map","debouncedSetFilter","filter","currentValue","current","_r","getCreateItem","handleChangeWithCreateSupport","createElement","getOptionLabel","option","optionLabel","handleInputChange","event","newInputValue","reason","doesQueryMatchSuggestion","selectedItemTexts","item","hasOption","some","choice","includes","filterOptions","options","params","inputValue","handleAutocompleteChange","oneSecondHasPassed","currentChoices","suggestions","isOptionEqualToValue","Fragment","StyledAutocomplete","blurOnSelect","_","openOnFocus","filterSelectedOptions","renderInput","name","touched","message","AutocompleteInputClasses","textField","renderTags","getTagProps","index","sx","zIndex","selectOnFocus","clearOnBlur","freeSolo","handleHomeEndKeys","loading","onInputChange","renderOption","record","PREFIX","overridesResolver","styles","root","theme","minWidth","spacing","selectedChoiceRef","getSelectedItems","setSelectedChoice","newSelectedItems","find","searchText","q"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-ui-materialui/dist/esm/input/AutocompleteInput.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as React from 'react';\nimport { isValidElement, useCallback, useEffect, useMemo, useRef, useState, } from 'react';\nimport debounce from 'lodash/debounce';\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport clsx from 'clsx';\nimport { Autocomplete, Chip, TextField, } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { FieldTitle, useChoicesContext, useInput, useSuggestions, useTimeout, useTranslate, warning, } from 'ra-core';\nimport { useSupportCreateSuggestion, } from './useSupportCreateSuggestion';\nimport { InputHelperText } from './InputHelperText';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\n/**\n * An Input component for an autocomplete field, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <AutocompleteInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <AutocompleteInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <AutocompleteInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that can access\n * the related choice through the `useRecordContext` hook. You can use Field components there.\n * Note that you must also specify the `matchSuggestion` and `inputText` props\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const matchSuggestion = (filterValue, choice) => choice.first_name.match(filterValue) || choice.last_name.match(filterValue)\n * const inputText = (record) => `${record.fullName} (${record.language})`;\n *\n * const FullNameField = () => {\n *     const record = useRecordContext();\n *     return <span>{record.first_name} {record.last_name}</span>;\n * }\n * <AutocompleteInput source=\"author\" choices={choices} optionText={<FullNameField />} matchSuggestion={matchSuggestion} inputText={inputText} />\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <AutocompleteInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the MUI <TextField> component\n *\n * @example\n * <AutocompleteInput source=\"author_id\" options={{ color: 'secondary', InputLabelProps: { shrink: true } }} />\n */\nexport var AutocompleteInput = function (props) {\n    var choicesProp = props.choices, className = props.className, _a = props.clearText, clearText = _a === void 0 ? 'ra.action.clear_input_value' : _a, _b = props.closeText, closeText = _b === void 0 ? 'ra.action.close' : _b, create = props.create, createLabel = props.createLabel, createItemLabel = props.createItemLabel, createValue = props.createValue, _c = props.debounce, debounceDelay = _c === void 0 ? 250 : _c, _d = props.defaultValue, defaultValue = _d === void 0 ? '' : _d, emptyText = props.emptyText, _e = props.emptyValue, emptyValue = _e === void 0 ? '' : _e, fieldOverride = props.field, format = props.format, helperText = props.helperText, idOverride = props.id, inputText = props.inputText, isFetchingProp = props.isFetching, isLoadingProp = props.isLoading, isRequiredOverride = props.isRequired, label = props.label, limitChoicesToValue = props.limitChoicesToValue, matchSuggestion = props.matchSuggestion, margin = props.margin, fieldStateOverride = props.fieldState, _f = props.filterToQuery, filterToQuery = _f === void 0 ? DefaultFilterToQuery : _f, formStateOverride = props.formState, _g = props.multiple, multiple = _g === void 0 ? false : _g, noOptionsText = props.noOptionsText, onBlur = props.onBlur, onChange = props.onChange, onCreate = props.onCreate, _h = props.openText, openText = _h === void 0 ? 'ra.action.open' : _h, _j = props.optionText, optionText = _j === void 0 ? 'name' : _j, _k = props.optionValue, optionValue = _k === void 0 ? 'id' : _k, parse = props.parse, resourceProp = props.resource, shouldRenderSuggestions = props.shouldRenderSuggestions, setFilter = props.setFilter, size = props.size, sourceProp = props.source, suggestionLimit = props.suggestionLimit, TextFieldProps = props.TextFieldProps, translateChoice = props.translateChoice, validate = props.validate, variant = props.variant, rest = __rest(props, [\"choices\", \"className\", \"clearText\", \"closeText\", \"create\", \"createLabel\", \"createItemLabel\", \"createValue\", \"debounce\", \"defaultValue\", \"emptyText\", \"emptyValue\", \"field\", \"format\", \"helperText\", \"id\", \"inputText\", \"isFetching\", \"isLoading\", \"isRequired\", \"label\", \"limitChoicesToValue\", \"matchSuggestion\", \"margin\", \"fieldState\", \"filterToQuery\", \"formState\", \"multiple\", \"noOptionsText\", \"onBlur\", \"onChange\", \"onCreate\", \"openText\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"shouldRenderSuggestions\", \"setFilter\", \"size\", \"source\", \"suggestionLimit\", \"TextFieldProps\", \"translateChoice\", \"validate\", \"variant\"]);\n    var _l = useChoicesContext({\n        choices: choicesProp,\n        isFetching: isFetchingProp,\n        isLoading: isLoadingProp,\n        resource: resourceProp,\n        source: sourceProp,\n    }), allChoices = _l.allChoices, isLoading = _l.isLoading, resource = _l.resource, source = _l.source, setFilters = _l.setFilters;\n    var translate = useTranslate();\n    var _m = useInput(__assign({ defaultValue: defaultValue, format: format, id: idOverride, field: fieldOverride, fieldState: fieldStateOverride, formState: formStateOverride, onBlur: onBlur, onChange: onChange, parse: parse, resource: resource, source: source, validate: validate }, rest)), id = _m.id, field = _m.field, isRequired = _m.isRequired, _o = _m.fieldState, error = _o.error, invalid = _o.invalid, isTouched = _o.isTouched, isSubmitted = _m.formState.isSubmitted;\n    var selectedChoice = useSelectedChoice(field.value, {\n        choices: allChoices,\n        // @ts-ignore\n        multiple: multiple,\n        optionValue: optionValue,\n    });\n    useEffect(function () {\n        // eslint-disable-next-line eqeqeq\n        if (isValidElement(optionText) && inputText == undefined) {\n            throw new Error(\"\\nIf you provided a React element for the optionText prop, you must also provide the inputText prop (used for the text input)\");\n        }\n        // eslint-disable-next-line eqeqeq\n        if (isValidElement(optionText) && matchSuggestion == undefined) {\n            throw new Error(\"\\nIf you provided a React element for the optionText prop, you must also provide the matchSuggestion prop (used to match the user input with a choice)\");\n        }\n    }, [optionText, inputText, matchSuggestion]);\n    useEffect(function () {\n        warning(\n        /* eslint-disable eqeqeq */\n        shouldRenderSuggestions != undefined && noOptionsText == undefined, \"When providing a shouldRenderSuggestions function, we recommend you also provide the noOptionsText prop and set it to a text explaining users why no options are displayed. It supports translation keys.\");\n        /* eslint-enable eqeqeq */\n    }, [shouldRenderSuggestions, noOptionsText]);\n    var _p = useSuggestions({\n        choices: allChoices,\n        emptyText: emptyText,\n        emptyValue: emptyValue,\n        limitChoicesToValue: limitChoicesToValue,\n        matchSuggestion: matchSuggestion,\n        optionText: optionText,\n        optionValue: optionValue,\n        selectedItem: selectedChoice,\n        suggestionLimit: suggestionLimit,\n        translateChoice: translateChoice,\n    }), getChoiceText = _p.getChoiceText, getChoiceValue = _p.getChoiceValue, getSuggestions = _p.getSuggestions;\n    var _q = useState(''), filterValue = _q[0], setFilterValue = _q[1];\n    var handleChange = function (newValue) {\n        var _a;\n        if (multiple) {\n            if (Array.isArray(newValue)) {\n                field.onChange(newValue.map(getChoiceValue));\n            }\n            else {\n                field.onChange(__spreadArray(__spreadArray([], ((_a = field.value) !== null && _a !== void 0 ? _a : []), true), [\n                    getChoiceValue(newValue),\n                ], false));\n            }\n        }\n        else {\n            field.onChange(getChoiceValue(newValue) || '');\n        }\n    };\n    // eslint-disable-next-line\n    var debouncedSetFilter = useCallback(debounce(function (filter) {\n        if (setFilter) {\n            return setFilter(filter);\n        }\n        if (choicesProp) {\n            return;\n        }\n        setFilters(filterToQuery(filter), undefined, true);\n    }, debounceDelay), [debounceDelay, setFilters, setFilter]);\n    // We must reset the filter every time the value changes to ensure we\n    // display at least some choices even if the input has a value.\n    // Otherwise, it would only display the currently selected one and the user\n    // would have to first clear the input before seeing any other choices\n    var currentValue = useRef(field.value);\n    useEffect(function () {\n        if (!isEqual(currentValue.current, field.value)) {\n            currentValue.current = field.value;\n            debouncedSetFilter('');\n        }\n    }, [field.value]); // eslint-disable-line\n    var _r = useSupportCreateSuggestion({\n        create: create,\n        createLabel: createLabel,\n        createItemLabel: createItemLabel,\n        createValue: createValue,\n        handleChange: handleChange,\n        filter: filterValue,\n        onCreate: onCreate,\n        optionText: optionText,\n    }), getCreateItem = _r.getCreateItem, handleChangeWithCreateSupport = _r.handleChange, createElement = _r.createElement;\n    var getOptionLabel = useCallback(function (option) {\n        // eslint-disable-next-line eqeqeq\n        if (option == undefined) {\n            return '';\n        }\n        // Value selected with enter, right from the input\n        if (typeof option === 'string') {\n            return option;\n        }\n        // eslint-disable-next-line eqeqeq\n        if (inputText != undefined) {\n            return inputText(option);\n        }\n        return getChoiceText(option);\n    }, [getChoiceText, inputText]);\n    useEffect(function () {\n        if (!multiple) {\n            var optionLabel = getOptionLabel(selectedChoice);\n            if (typeof optionLabel === 'string') {\n                setFilterValue(optionLabel);\n            }\n            else {\n                throw new Error('When optionText returns a React element, you must also provide the inputText prop');\n            }\n        }\n    }, [getOptionLabel, multiple, selectedChoice]);\n    var handleInputChange = function (event, newInputValue, reason) {\n        setFilterValue(newInputValue);\n        debouncedSetFilter(newInputValue);\n    };\n    var doesQueryMatchSuggestion = useCallback(function (filter) {\n        var selectedItemTexts = [];\n        if (multiple) {\n            selectedItemTexts = selectedChoice.map(function (item) {\n                return getOptionLabel(item);\n            });\n        }\n        else {\n            selectedItemTexts = [getOptionLabel(selectedChoice)];\n        }\n        var hasOption = !!allChoices\n            ? allChoices.some(function (choice) { return getOptionLabel(choice) === filter; })\n            : false;\n        return selectedItemTexts.includes(filter) || hasOption;\n    }, [allChoices, getOptionLabel, multiple, selectedChoice]);\n    var filterOptions = function (options, params) {\n        var inputValue = params.inputValue;\n        if ((onCreate || create) &&\n            inputValue !== '' &&\n            !doesQueryMatchSuggestion(filterValue)) {\n            return options.concat(getCreateItem(inputValue));\n        }\n        return options;\n    };\n    var handleAutocompleteChange = function (event, newValue, reason) {\n        handleChangeWithCreateSupport(newValue != null ? newValue : '');\n    };\n    var oneSecondHasPassed = useTimeout(1000, filterValue);\n    // To avoid displaying an empty list of choices while a search is in progress,\n    // we store the last choices in a ref. We'll display those last choices until\n    // a second has passed.\n    var currentChoices = useRef(allChoices);\n    useEffect(function () {\n        if (allChoices && (allChoices.length > 0 || oneSecondHasPassed)) {\n            currentChoices.current = allChoices;\n        }\n    }, [allChoices, oneSecondHasPassed]);\n    var suggestions = useMemo(function () {\n        var _a;\n        if (setFilters && (allChoices === null || allChoices === void 0 ? void 0 : allChoices.length) === 0 && !oneSecondHasPassed) {\n            return (_a = currentChoices.current) !== null && _a !== void 0 ? _a : [];\n        }\n        return getSuggestions(filterValue);\n    }, [\n        allChoices,\n        filterValue,\n        getSuggestions,\n        oneSecondHasPassed,\n        setFilters,\n    ]);\n    var isOptionEqualToValue = function (option, value) {\n        // eslint-disable-next-line eqeqeq\n        return getChoiceValue(option) == getChoiceValue(value);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(StyledAutocomplete, __assign({ blurOnSelect: true, className: clsx('ra-input', \"ra-input-\".concat(source), className), clearText: translate(clearText, { _: clearText }), closeText: translate(closeText, { _: closeText }), openOnFocus: true, openText: translate(openText, { _: openText }), id: id, isOptionEqualToValue: isOptionEqualToValue, filterSelectedOptions: true, renderInput: function (params) { return (React.createElement(TextField, __assign({ name: field.name, label: React.createElement(FieldTitle, { label: label, source: source, resource: resourceProp, isRequired: typeof isRequiredOverride !== 'undefined'\n                        ? isRequiredOverride\n                        : isRequired }), error: (isTouched || isSubmitted) && invalid, helperText: React.createElement(InputHelperText, { touched: isTouched || isSubmitted, error: error === null || error === void 0 ? void 0 : error.message, helperText: helperText }), margin: margin, variant: variant, className: AutocompleteInputClasses.textField }, TextFieldProps, params, { size: size }))); }, multiple: multiple, renderTags: function (value, getTagProps) {\n                return value.map(function (option, index) { return (React.createElement(Chip, __assign({ label: isValidElement(optionText)\n                        ? inputText(option)\n                        : getChoiceText(option), sx: {\n                        '.MuiSvgIcon-root': {\n                            // FIXME: Workaround to allow choices deletion\n                            // Maybe related to storybook and mui using different versions of emotion\n                            zIndex: 100,\n                        },\n                    }, size: \"small\" }, getTagProps({ index: index })))); });\n            }, noOptionsText: typeof noOptionsText === 'string'\n                ? translate(noOptionsText, { _: noOptionsText })\n                : noOptionsText, selectOnFocus: true, clearOnBlur: true }, sanitizeInputRestProps(rest), { freeSolo: !!create || !!onCreate, handleHomeEndKeys: !!create || !!onCreate, filterOptions: filterOptions, options: shouldRenderSuggestions == undefined || // eslint-disable-line eqeqeq\n                shouldRenderSuggestions(filterValue)\n                ? suggestions\n                : [], getOptionLabel: getOptionLabel, inputValue: filterValue, loading: isLoading && suggestions.length === 0 && oneSecondHasPassed, value: selectedChoice, onChange: handleAutocompleteChange, onBlur: field.onBlur, onInputChange: handleInputChange, renderOption: function (props, record) { return (React.createElement(\"li\", __assign({}, props), getChoiceText(record))); } })),\n        createElement));\n};\nvar PREFIX = 'RaAutocompleteInput';\nexport var AutocompleteInputClasses = {\n    textField: \"\".concat(PREFIX, \"-textField\"),\n};\nvar StyledAutocomplete = styled(Autocomplete, {\n    name: PREFIX,\n    overridesResolver: function (props, styles) { return styles.root; },\n})(function (_a) {\n    var _b;\n    var theme = _a.theme;\n    return (_b = {},\n        _b[\"& .\".concat(AutocompleteInputClasses.textField)] = {\n            minWidth: theme.spacing(20),\n        },\n        _b);\n});\n/**\n * Returns the selected choice (or choices if multiple) by matching the input value with the choices.\n */\nvar useSelectedChoice = function (value, _a) {\n    var choices = _a.choices, multiple = _a.multiple, optionValue = _a.optionValue;\n    var selectedChoiceRef = useRef(getSelectedItems(choices, value, optionValue, multiple));\n    var _b = useState(function () { return getSelectedItems(choices, value, optionValue, multiple); }), selectedChoice = _b[0], setSelectedChoice = _b[1];\n    // As the selected choices are objects, we want to ensure we pass the same\n    // reference to the Autocomplete as it would reset its filter value otherwise.\n    useEffect(function () {\n        var newSelectedItems = getSelectedItems(choices, value, optionValue, multiple);\n        if (!isEqual(selectedChoiceRef.current, newSelectedItems)) {\n            selectedChoiceRef.current = newSelectedItems;\n            setSelectedChoice(newSelectedItems);\n        }\n    }, [choices, value, multiple, optionValue]);\n    return selectedChoice || null;\n};\nvar getSelectedItems = function (choices, value, optionValue, multiple) {\n    if (choices === void 0) { choices = []; }\n    if (optionValue === void 0) { optionValue = 'id'; }\n    if (multiple) {\n        return (value || [])\n            .map(function (item) {\n            return choices.find(function (choice) { return item === get(choice, optionValue); });\n        })\n            .filter(function (item) { return !!item; });\n    }\n    return choices.find(function (choice) { return get(choice, optionValue) === value; }) || '';\n};\nvar DefaultFilterToQuery = function (searchText) { return ({ q: searchText }); };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}