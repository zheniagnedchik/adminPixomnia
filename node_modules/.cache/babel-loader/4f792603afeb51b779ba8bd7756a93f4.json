{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useTiptapEditor } from '../useTiptapEditor';\n/**\n * A hook that returns the current text selection in the editor.\n * @returns {(string|null)} The current text selection if any, or null.\n */\n\nexport var useEditorSelection = function () {\n  var editor = useTiptapEditor();\n\n  var _a = useState(editor ? editor.state.doc.textBetween(editor.state.selection.from, editor.state.selection.to) : null),\n      selection = _a[0],\n      setSelection = _a[1];\n\n  useEffect(function () {\n    var handleSelectionChange = function () {\n      setSelection(editor ? editor.state.doc.textBetween(editor.state.selection.from, editor.state.selection.to) : null);\n    };\n\n    if (editor) {\n      editor.on('selectionUpdate', handleSelectionChange);\n    }\n\n    return function () {\n      if (editor) {\n        editor.off('selectionUpdate', handleSelectionChange);\n      }\n    };\n  }, [editor]);\n  return selection;\n};","map":{"version":3,"names":["useEffect","useState","useTiptapEditor","useEditorSelection","editor","_a","state","doc","textBetween","selection","from","to","setSelection","handleSelectionChange","on","off"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-input-rich-text/dist/esm/buttons/useEditorSelection.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useTiptapEditor } from '../useTiptapEditor';\n/**\n * A hook that returns the current text selection in the editor.\n * @returns {(string|null)} The current text selection if any, or null.\n */\nexport var useEditorSelection = function () {\n    var editor = useTiptapEditor();\n    var _a = useState(editor\n        ? editor.state.doc.textBetween(editor.state.selection.from, editor.state.selection.to)\n        : null), selection = _a[0], setSelection = _a[1];\n    useEffect(function () {\n        var handleSelectionChange = function () {\n            setSelection(editor\n                ? editor.state.doc.textBetween(editor.state.selection.from, editor.state.selection.to)\n                : null);\n        };\n        if (editor) {\n            editor.on('selectionUpdate', handleSelectionChange);\n        }\n        return function () {\n            if (editor) {\n                editor.off('selectionUpdate', handleSelectionChange);\n            }\n        };\n    }, [editor]);\n    return selection;\n};\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,kBAAkB,GAAG,YAAY;EACxC,IAAIC,MAAM,GAAGF,eAAe,EAA5B;;EACA,IAAIG,EAAE,GAAGJ,QAAQ,CAACG,MAAM,GAClBA,MAAM,CAACE,KAAP,CAAaC,GAAb,CAAiBC,WAAjB,CAA6BJ,MAAM,CAACE,KAAP,CAAaG,SAAb,CAAuBC,IAApD,EAA0DN,MAAM,CAACE,KAAP,CAAaG,SAAb,CAAuBE,EAAjF,CADkB,GAElB,IAFW,CAAjB;EAAA,IAEaF,SAAS,GAAGJ,EAAE,CAAC,CAAD,CAF3B;EAAA,IAEgCO,YAAY,GAAGP,EAAE,CAAC,CAAD,CAFjD;;EAGAL,SAAS,CAAC,YAAY;IAClB,IAAIa,qBAAqB,GAAG,YAAY;MACpCD,YAAY,CAACR,MAAM,GACbA,MAAM,CAACE,KAAP,CAAaC,GAAb,CAAiBC,WAAjB,CAA6BJ,MAAM,CAACE,KAAP,CAAaG,SAAb,CAAuBC,IAApD,EAA0DN,MAAM,CAACE,KAAP,CAAaG,SAAb,CAAuBE,EAAjF,CADa,GAEb,IAFM,CAAZ;IAGH,CAJD;;IAKA,IAAIP,MAAJ,EAAY;MACRA,MAAM,CAACU,EAAP,CAAU,iBAAV,EAA6BD,qBAA7B;IACH;;IACD,OAAO,YAAY;MACf,IAAIT,MAAJ,EAAY;QACRA,MAAM,CAACW,GAAP,CAAW,iBAAX,EAA8BF,qBAA9B;MACH;IACJ,CAJD;EAKH,CAdQ,EAcN,CAACT,MAAD,CAdM,CAAT;EAeA,OAAOK,SAAP;AACH,CArBM"},"metadata":{},"sourceType":"module"}