{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.simulations = simulations;\nexports.default = generate;\n\nvar _CSSPropertyOperations = require('./CSSPropertyOperations');\n\nvar _plugins = require('./plugins');\n\nvar isBrowser = typeof window !== 'undefined'; // import type { AST } from './types';\n// a flag to enable simulation meta tags on dom nodes\n// defaults to true in dev mode. recommend *not* to\n// toggle often.\n\nvar canSimulate = process.env.NODE_ENV !== 'production'; // we use these flags for issuing warnings when simulate is called\n// in prod / in incorrect order\n\nvar warned1 = false,\n    warned2 = false; // toggles simulation activity. shouldn't be needed in most cases\n\nfunction simulations() {\n  var bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  canSimulate = !!bool;\n} // takes a string, converts to lowercase, strips out nonalphanumeric.\n\n\nfunction simple(str) {\n  var replace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return str.toLowerCase().replace(/[^a-z0-9]/g, replace);\n} // from https://github.com/j2css/j2c/blob/5d381c2d721d04b54fabe6a165d587247c3087cb/src/helpers.js#L28-L61\n// \"Tokenizes\" the selectors into parts relevant for the next function.\n// Strings and comments are matched, but ignored afterwards.\n// This is not a full tokenizers. It only recognizes comas, parentheses,\n// strings and comments.\n// regexp generated by scripts/regexps.js then trimmed by hand\n\n\nvar selectorTokenizer = /[(),]|\"(?:\\\\.|[^\"\\n])*\"|'(?:\\\\.|[^'\\n])*'|\\/\\*[\\s\\S]*?\\*\\//g;\n/**\n * This will split a coma-separated selector list into individual selectors,\n * ignoring comas in strings, comments and in :pseudo-selectors(parameter, lists).\n *\n * @param {string} selector\n * @return {string[]}\n */\n\nfunction splitSelector(selector) {\n  if (selector.indexOf(',') === -1) {\n    return [selector];\n  }\n\n  var indices = [],\n      res = [],\n      inParen = 0,\n      o;\n  /*eslint-disable no-cond-assign*/\n\n  while (o = selectorTokenizer.exec(selector)) {\n    /*eslint-enable no-cond-assign*/\n    switch (o[0]) {\n      case '(':\n        inParen++;\n        break;\n\n      case ')':\n        inParen--;\n        break;\n\n      case ',':\n        if (inParen) break;\n        indices.push(o.index);\n    }\n  }\n\n  for (o = indices.length; o--;) {\n    res.unshift(selector.slice(indices[o] + 1));\n    selector = selector.slice(0, indices[o]);\n  }\n\n  res.unshift(selector);\n  return res;\n}\n\nfunction selector(id) {\n  var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (!id && path) {\n    return path.replace(/\\&/g, '');\n  }\n\n  if (id && !path) return '.' + id;\n  var x = splitSelector(path).map(function (x) {\n    return x.indexOf('&') >= 0 ? x.replace(/\\&/gm, '.' + id) // todo - make sure each sub selector has an &\n    : '.' + id + x;\n  }).join(',');\n\n  if (canSimulate && /^\\&\\:/.exec(path) && !/\\s/.exec(path)) {\n    x += ',.' + id + '[data-simulate-' + simple(path) + ']';\n  }\n\n  return x;\n}\n\nfunction toCSS(node) {\n  var result = (0, _plugins.prefixes)((0, _plugins.fallbacks)((0, _plugins.contentWrap)(node)));\n  return result.selector + '{' + (0, _CSSPropertyOperations.createMarkupForStyles)(result.style) + '}';\n}\n\nfunction toCSSArray(id, parsed) {\n  var css = []; // plugins here\n\n  var plain = parsed.plain,\n      selects = parsed.selects,\n      medias = parsed.medias,\n      supports = parsed.supports; // todo - :host?\n\n  if (plain) {\n    css.push(toCSS({\n      style: plain,\n      selector: selector(id)\n    }));\n  }\n\n  if (selects) {\n    Object.keys(selects).forEach(function (key) {\n      return css.push(toCSS({\n        style: selects[key],\n        selector: selector(id, key)\n      }));\n    });\n  }\n\n  if (medias) {\n    Object.keys(medias).forEach(function (key) {\n      return css.push(key + '{' + toCSSArray(id, medias[key]).join('') + '}');\n    });\n  }\n\n  if (supports) {\n    Object.keys(supports).forEach(function (key) {\n      return css.push(key + '{' + toCSSArray(id, supports[key]).join('') + '}');\n    });\n  }\n\n  return css;\n} // todo - if server side, then cache on classname\n\n\nfunction generate(_ref) {\n  var className = _ref.className,\n      parsed = _ref.parsed;\n  return toCSSArray(className, parsed);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","simulations","default","generate","_CSSPropertyOperations","require","_plugins","isBrowser","window","canSimulate","process","env","NODE_ENV","warned1","warned2","bool","arguments","length","undefined","simple","str","replace","toLowerCase","selectorTokenizer","splitSelector","selector","indexOf","indices","res","inParen","o","exec","push","index","unshift","slice","id","path","x","map","join","toCSS","node","result","prefixes","fallbacks","contentWrap","createMarkupForStyles","style","toCSSArray","parsed","css","plain","selects","medias","supports","keys","forEach","key","_ref","className"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/glam/lib/generate.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.simulations = simulations;\nexports.default = generate;\n\nvar _CSSPropertyOperations = require('./CSSPropertyOperations');\n\nvar _plugins = require('./plugins');\n\nvar isBrowser = typeof window !== 'undefined';\n// import type { AST } from './types';\n\n\n// a flag to enable simulation meta tags on dom nodes\n// defaults to true in dev mode. recommend *not* to\n// toggle often.\nvar canSimulate = process.env.NODE_ENV !== 'production';\n\n// we use these flags for issuing warnings when simulate is called\n// in prod / in incorrect order\nvar warned1 = false,\n    warned2 = false;\n\n// toggles simulation activity. shouldn't be needed in most cases\nfunction simulations() {\n  var bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  canSimulate = !!bool;\n}\n\n// takes a string, converts to lowercase, strips out nonalphanumeric.\nfunction simple(str) {\n  var replace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  return str.toLowerCase().replace(/[^a-z0-9]/g, replace);\n}\n\n// from https://github.com/j2css/j2c/blob/5d381c2d721d04b54fabe6a165d587247c3087cb/src/helpers.js#L28-L61\n\n// \"Tokenizes\" the selectors into parts relevant for the next function.\n// Strings and comments are matched, but ignored afterwards.\n// This is not a full tokenizers. It only recognizes comas, parentheses,\n// strings and comments.\n// regexp generated by scripts/regexps.js then trimmed by hand\nvar selectorTokenizer = /[(),]|\"(?:\\\\.|[^\"\\n])*\"|'(?:\\\\.|[^'\\n])*'|\\/\\*[\\s\\S]*?\\*\\//g;\n\n/**\n * This will split a coma-separated selector list into individual selectors,\n * ignoring comas in strings, comments and in :pseudo-selectors(parameter, lists).\n *\n * @param {string} selector\n * @return {string[]}\n */\n\nfunction splitSelector(selector) {\n  if (selector.indexOf(',') === -1) {\n    return [selector];\n  }\n\n  var indices = [],\n      res = [],\n      inParen = 0,\n      o;\n  /*eslint-disable no-cond-assign*/\n  while (o = selectorTokenizer.exec(selector)) {\n    /*eslint-enable no-cond-assign*/\n    switch (o[0]) {\n      case '(':\n        inParen++;\n        break;\n      case ')':\n        inParen--;\n        break;\n      case ',':\n        if (inParen) break;\n        indices.push(o.index);\n    }\n  }\n  for (o = indices.length; o--;) {\n    res.unshift(selector.slice(indices[o] + 1));\n    selector = selector.slice(0, indices[o]);\n  }\n  res.unshift(selector);\n  return res;\n}\n\nfunction selector(id) {\n  var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (!id && path) {\n    return path.replace(/\\&/g, '');\n  }\n  if (id && !path) return '.' + id;\n\n  var x = splitSelector(path).map(function (x) {\n    return x.indexOf('&') >= 0 ? x.replace(/\\&/gm, '.' + id) // todo - make sure each sub selector has an &\n    : '.' + id + x;\n  }).join(',');\n\n  if (canSimulate && /^\\&\\:/.exec(path) && !/\\s/.exec(path)) {\n    x += ',.' + id + '[data-simulate-' + simple(path) + ']';\n  }\n  return x;\n}\n\nfunction toCSS(node) {\n  var result = (0, _plugins.prefixes)((0, _plugins.fallbacks)((0, _plugins.contentWrap)(node)));\n  return result.selector + '{' + (0, _CSSPropertyOperations.createMarkupForStyles)(result.style) + '}';\n}\n\nfunction toCSSArray(id, parsed) {\n  var css = [];\n\n  // plugins here\n  var plain = parsed.plain,\n      selects = parsed.selects,\n      medias = parsed.medias,\n      supports = parsed.supports;\n  // todo - :host?\n\n  if (plain) {\n    css.push(toCSS({ style: plain, selector: selector(id) }));\n  }\n  if (selects) {\n    Object.keys(selects).forEach(function (key) {\n      return css.push(toCSS({ style: selects[key], selector: selector(id, key) }));\n    });\n  }\n  if (medias) {\n    Object.keys(medias).forEach(function (key) {\n      return css.push(key + '{' + toCSSArray(id, medias[key]).join('') + '}');\n    });\n  }\n  if (supports) {\n    Object.keys(supports).forEach(function (key) {\n      return css.push(key + '{' + toCSSArray(id, supports[key]).join('') + '}');\n    });\n  }\n  return css;\n}\n\n// todo - if server side, then cache on classname\nfunction generate(_ref) {\n  var className = _ref.className,\n      parsed = _ref.parsed;\n\n  return toCSSArray(className, parsed);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}