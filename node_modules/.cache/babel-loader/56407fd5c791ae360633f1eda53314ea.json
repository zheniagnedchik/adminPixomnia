{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { FieldTitle, useInput, warning, useChoicesContext } from 'ra-core';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { CheckboxGroupInputItem } from './CheckboxGroupInputItem';\nimport { InputHelperText } from './InputHelperText';\nimport { Labeled } from '../Labeled';\nimport { LinearProgress } from '../layout';\n/**\n * An Input component for a checkbox group, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * The expected input must be an array of identifiers (e.g. [12, 31]) which correspond to\n * the 'optionValue' of 'choices' attribute objects.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *     { id: 12, name: 'Ray Hakt' },\n *     { id: 31, name: 'Ann Gullar' },\n *     { id: 42, name: 'Sean Phonee' },\n * ];\n * <CheckboxGroupInput source=\"recipients\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi' },\n *    { _id: 456, full_name: 'Jane Austen' },\n * ];\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that can access\n * the related choice through the `useRecordContext` hook. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = () => {\n *     const record = useRecordContext();\n *     return <span>{record.first_name} {record.last_name}</span>;\n * };\n *\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'programming', name: 'myroot.category.programming' },\n *    { id: 'lifestyle', name: 'myroot.category.lifestyle' },\n *    { id: 'photography', name: 'myroot.category.photography' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceArrayInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <CheckboxGroupInput source=\"tags\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the MUI <Checkbox> components\n */\n\nexport var CheckboxGroupInput = function (props) {\n  var choicesProp = props.choices,\n      className = props.className,\n      classesOverride = props.classes,\n      format = props.format,\n      helperText = props.helperText,\n      label = props.label,\n      isLoadingProp = props.isLoading,\n      isFetchingProp = props.isFetching,\n      _a = props.margin,\n      margin = _a === void 0 ? 'dense' : _a,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      _b = props.optionText,\n      optionText = _b === void 0 ? 'name' : _b,\n      _c = props.optionValue,\n      optionValue = _c === void 0 ? 'id' : _c,\n      parse = props.parse,\n      resourceProp = props.resource,\n      _d = props.row,\n      row = _d === void 0 ? true : _d,\n      sourceProp = props.source,\n      _e = props.translateChoice,\n      translateChoice = _e === void 0 ? true : _e,\n      validate = props.validate,\n      rest = __rest(props, [\"choices\", \"className\", \"classes\", \"format\", \"helperText\", \"label\", \"isLoading\", \"isFetching\", \"margin\", \"onBlur\", \"onChange\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"row\", \"source\", \"translateChoice\", \"validate\"]);\n\n  var _f = useChoicesContext({\n    choices: choicesProp,\n    isFetching: isFetchingProp,\n    isLoading: isLoadingProp,\n    resource: resourceProp,\n    source: sourceProp\n  }),\n      allChoices = _f.allChoices,\n      isLoading = _f.isLoading,\n      resource = _f.resource,\n      source = _f.source;\n\n  warning(source === undefined, \"If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the source prop\");\n  warning(allChoices === undefined, \"If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the choices prop\");\n\n  var _g = useInput(__assign({\n    format: format,\n    parse: parse,\n    resource: resource,\n    source: source,\n    validate: validate,\n    onChange: onChange,\n    onBlur: onBlur\n  }, rest)),\n      _h = _g.field,\n      formOnChange = _h.onChange,\n      formOnBlur = _h.onBlur,\n      value = _h.value,\n      _j = _g.fieldState,\n      error = _j.error,\n      invalid = _j.invalid,\n      isTouched = _j.isTouched,\n      isSubmitted = _g.formState.isSubmitted,\n      id = _g.id,\n      isRequired = _g.isRequired;\n\n  var handleCheck = useCallback(function (event, isChecked) {\n    var newValue;\n\n    if (allChoices.every(function (item) {\n      return typeof get(item, optionValue) === 'number';\n    })) {\n      try {\n        // try to convert string value to number, e.g. '123'\n        newValue = JSON.parse(event.target.value);\n      } catch (e) {\n        // impossible to convert value, e.g. 'abc'\n        newValue = event.target.value;\n      }\n    } else {\n      newValue = event.target.value;\n    }\n\n    if (isChecked) {\n      formOnChange(__spreadArray(__spreadArray([], value || [], true), [newValue], false));\n    } else {\n      formOnChange(value.filter(function (v) {\n        return v != newValue;\n      })); // eslint-disable-line eqeqeq\n    }\n\n    formOnBlur(); // Ensure field is flagged as touched\n  }, [allChoices, formOnChange, formOnBlur, optionValue, value]);\n\n  if (isLoading && (allChoices === null || allChoices === void 0 ? void 0 : allChoices.length) === 0) {\n    return React.createElement(Labeled, __assign({\n      id: id,\n      label: label,\n      source: source,\n      resource: resource,\n      className: clsx('ra-input', \"ra-input-\".concat(source), className),\n      isRequired: isRequired\n    }, rest), React.createElement(LinearProgress, null));\n  }\n\n  return React.createElement(StyledFormControl, __assign({\n    component: \"fieldset\",\n    margin: margin,\n    error: (isTouched || isSubmitted) && invalid,\n    className: clsx('ra-input', \"ra-input-\".concat(source), className)\n  }, sanitizeRestProps(rest)), React.createElement(FormLabel, {\n    component: \"legend\",\n    className: CheckboxGroupInputClasses.label\n  }, React.createElement(FieldTitle, {\n    label: label,\n    source: source,\n    resource: resource,\n    isRequired: isRequired\n  })), React.createElement(FormGroup, {\n    row: row\n  }, allChoices === null || allChoices === void 0 ? void 0 : allChoices.map(function (choice) {\n    return React.createElement(CheckboxGroupInputItem, __assign({\n      key: get(choice, optionValue),\n      choice: choice,\n      id: id,\n      onChange: handleCheck,\n      optionText: optionText,\n      optionValue: optionValue,\n      translateChoice: translateChoice,\n      value: value\n    }, sanitizeRestProps(rest)));\n  })), React.createElement(FormHelperText, null, React.createElement(InputHelperText, {\n    touched: isTouched || isSubmitted,\n    error: error === null || error === void 0 ? void 0 : error.message,\n    helperText: helperText\n  })));\n};\n\nvar sanitizeRestProps = function (_a) {\n  var refetch = _a.refetch,\n      setFilter = _a.setFilter,\n      setPagination = _a.setPagination,\n      setSort = _a.setSort,\n      loaded = _a.loaded,\n      touched = _a.touched,\n      rest = __rest(_a, [\"refetch\", \"setFilter\", \"setPagination\", \"setSort\", \"loaded\", \"touched\"]);\n\n  return sanitizeInputRestProps(rest);\n};\n\nCheckboxGroupInput.propTypes = {\n  choices: PropTypes.arrayOf(PropTypes.any),\n  className: PropTypes.string,\n  source: PropTypes.string,\n  optionText: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.element]),\n  optionValue: PropTypes.string,\n  row: PropTypes.bool,\n  resource: PropTypes.string,\n  translateChoice: PropTypes.bool\n};\nvar PREFIX = 'RaCheckboxGroupInput';\nexport var CheckboxGroupInputClasses = {\n  label: \"\".concat(PREFIX, \"-label\")\n};\nvar StyledFormControl = styled(FormControl, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(CheckboxGroupInputClasses.label)] = {\n    transform: 'translate(0, 8px) scale(0.75)',\n    transformOrigin: \"top \".concat(theme.direction === 'ltr' ? 'left' : 'right')\n  }, _b;\n});","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArray","to","from","pack","l","ar","Array","slice","concat","React","styled","clsx","useCallback","PropTypes","get","FormLabel","FormControl","FormGroup","FormHelperText","FieldTitle","useInput","warning","useChoicesContext","sanitizeInputRestProps","CheckboxGroupInputItem","InputHelperText","Labeled","LinearProgress","CheckboxGroupInput","props","choicesProp","choices","className","classesOverride","classes","format","helperText","label","isLoadingProp","isLoading","isFetchingProp","isFetching","_a","margin","onBlur","onChange","_b","optionText","_c","optionValue","parse","resourceProp","resource","_d","row","sourceProp","source","_e","translateChoice","validate","rest","_f","allChoices","undefined","_g","_h","field","formOnChange","formOnBlur","value","_j","fieldState","error","invalid","isTouched","isSubmitted","formState","id","isRequired","handleCheck","event","isChecked","newValue","every","item","JSON","target","filter","v","createElement","StyledFormControl","component","sanitizeRestProps","CheckboxGroupInputClasses","map","choice","key","touched","message","refetch","setFilter","setPagination","setSort","loaded","propTypes","arrayOf","any","string","oneOfType","func","element","bool","PREFIX","name","overridesResolver","styles","root","theme","transform","transformOrigin","direction"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-ui-materialui/dist/esm/input/CheckboxGroupInput.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { FieldTitle, useInput, warning, useChoicesContext, } from 'ra-core';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { CheckboxGroupInputItem } from './CheckboxGroupInputItem';\nimport { InputHelperText } from './InputHelperText';\nimport { Labeled } from '../Labeled';\nimport { LinearProgress } from '../layout';\n/**\n * An Input component for a checkbox group, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * The expected input must be an array of identifiers (e.g. [12, 31]) which correspond to\n * the 'optionValue' of 'choices' attribute objects.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *     { id: 12, name: 'Ray Hakt' },\n *     { id: 31, name: 'Ann Gullar' },\n *     { id: 42, name: 'Sean Phonee' },\n * ];\n * <CheckboxGroupInput source=\"recipients\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi' },\n *    { _id: 456, full_name: 'Jane Austen' },\n * ];\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that can access\n * the related choice through the `useRecordContext` hook. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = () => {\n *     const record = useRecordContext();\n *     return <span>{record.first_name} {record.last_name}</span>;\n * };\n *\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'programming', name: 'myroot.category.programming' },\n *    { id: 'lifestyle', name: 'myroot.category.lifestyle' },\n *    { id: 'photography', name: 'myroot.category.photography' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceArrayInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <CheckboxGroupInput source=\"tags\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the MUI <Checkbox> components\n */\nexport var CheckboxGroupInput = function (props) {\n    var choicesProp = props.choices, className = props.className, classesOverride = props.classes, format = props.format, helperText = props.helperText, label = props.label, isLoadingProp = props.isLoading, isFetchingProp = props.isFetching, _a = props.margin, margin = _a === void 0 ? 'dense' : _a, onBlur = props.onBlur, onChange = props.onChange, _b = props.optionText, optionText = _b === void 0 ? 'name' : _b, _c = props.optionValue, optionValue = _c === void 0 ? 'id' : _c, parse = props.parse, resourceProp = props.resource, _d = props.row, row = _d === void 0 ? true : _d, sourceProp = props.source, _e = props.translateChoice, translateChoice = _e === void 0 ? true : _e, validate = props.validate, rest = __rest(props, [\"choices\", \"className\", \"classes\", \"format\", \"helperText\", \"label\", \"isLoading\", \"isFetching\", \"margin\", \"onBlur\", \"onChange\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"row\", \"source\", \"translateChoice\", \"validate\"]);\n    var _f = useChoicesContext({\n        choices: choicesProp,\n        isFetching: isFetchingProp,\n        isLoading: isLoadingProp,\n        resource: resourceProp,\n        source: sourceProp,\n    }), allChoices = _f.allChoices, isLoading = _f.isLoading, resource = _f.resource, source = _f.source;\n    warning(source === undefined, \"If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the source prop\");\n    warning(allChoices === undefined, \"If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the choices prop\");\n    var _g = useInput(__assign({ format: format, parse: parse, resource: resource, source: source, validate: validate, onChange: onChange, onBlur: onBlur }, rest)), _h = _g.field, formOnChange = _h.onChange, formOnBlur = _h.onBlur, value = _h.value, _j = _g.fieldState, error = _j.error, invalid = _j.invalid, isTouched = _j.isTouched, isSubmitted = _g.formState.isSubmitted, id = _g.id, isRequired = _g.isRequired;\n    var handleCheck = useCallback(function (event, isChecked) {\n        var newValue;\n        if (allChoices.every(function (item) { return typeof get(item, optionValue) === 'number'; })) {\n            try {\n                // try to convert string value to number, e.g. '123'\n                newValue = JSON.parse(event.target.value);\n            }\n            catch (e) {\n                // impossible to convert value, e.g. 'abc'\n                newValue = event.target.value;\n            }\n        }\n        else {\n            newValue = event.target.value;\n        }\n        if (isChecked) {\n            formOnChange(__spreadArray(__spreadArray([], (value || []), true), [newValue], false));\n        }\n        else {\n            formOnChange(value.filter(function (v) { return v != newValue; })); // eslint-disable-line eqeqeq\n        }\n        formOnBlur(); // Ensure field is flagged as touched\n    }, [allChoices, formOnChange, formOnBlur, optionValue, value]);\n    if (isLoading && (allChoices === null || allChoices === void 0 ? void 0 : allChoices.length) === 0) {\n        return (React.createElement(Labeled, __assign({ id: id, label: label, source: source, resource: resource, className: clsx('ra-input', \"ra-input-\".concat(source), className), isRequired: isRequired }, rest),\n            React.createElement(LinearProgress, null)));\n    }\n    return (React.createElement(StyledFormControl, __assign({ component: \"fieldset\", margin: margin, error: (isTouched || isSubmitted) && invalid, className: clsx('ra-input', \"ra-input-\".concat(source), className) }, sanitizeRestProps(rest)),\n        React.createElement(FormLabel, { component: \"legend\", className: CheckboxGroupInputClasses.label },\n            React.createElement(FieldTitle, { label: label, source: source, resource: resource, isRequired: isRequired })),\n        React.createElement(FormGroup, { row: row }, allChoices === null || allChoices === void 0 ? void 0 : allChoices.map(function (choice) { return (React.createElement(CheckboxGroupInputItem, __assign({ key: get(choice, optionValue), choice: choice, id: id, onChange: handleCheck, optionText: optionText, optionValue: optionValue, translateChoice: translateChoice, value: value }, sanitizeRestProps(rest)))); })),\n        React.createElement(FormHelperText, null,\n            React.createElement(InputHelperText, { touched: isTouched || isSubmitted, error: error === null || error === void 0 ? void 0 : error.message, helperText: helperText }))));\n};\nvar sanitizeRestProps = function (_a) {\n    var refetch = _a.refetch, setFilter = _a.setFilter, setPagination = _a.setPagination, setSort = _a.setSort, loaded = _a.loaded, touched = _a.touched, rest = __rest(_a, [\"refetch\", \"setFilter\", \"setPagination\", \"setSort\", \"loaded\", \"touched\"]);\n    return sanitizeInputRestProps(rest);\n};\nCheckboxGroupInput.propTypes = {\n    choices: PropTypes.arrayOf(PropTypes.any),\n    className: PropTypes.string,\n    source: PropTypes.string,\n    optionText: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.element,\n    ]),\n    optionValue: PropTypes.string,\n    row: PropTypes.bool,\n    resource: PropTypes.string,\n    translateChoice: PropTypes.bool,\n};\nvar PREFIX = 'RaCheckboxGroupInput';\nexport var CheckboxGroupInputClasses = {\n    label: \"\".concat(PREFIX, \"-label\"),\n};\nvar StyledFormControl = styled(FormControl, {\n    name: PREFIX,\n    overridesResolver: function (props, styles) { return styles.root; },\n})(function (_a) {\n    var _b;\n    var theme = _a.theme;\n    return (_b = {},\n        _b[\"& .\".concat(CheckboxGroupInputClasses.label)] = {\n            transform: 'translate(0, 8px) scale(0.75)',\n            transformOrigin: \"top \".concat(theme.direction === 'ltr' ? 'left' : 'right'),\n        },\n        _b);\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}