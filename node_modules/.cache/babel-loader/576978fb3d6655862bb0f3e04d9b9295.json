{"ast":null,"code":"import * as React from 'react';\nimport { Children, isValidElement, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useListContext, useResourceContext, useTranslate } from 'ra-core';\nimport { Checkbox, TableCell, TableHead, TableRow } from '@mui/material';\nimport clsx from 'clsx';\nimport DatagridHeaderCell from './DatagridHeaderCell';\nimport { DatagridClasses } from './useDatagridStyles';\n/**\n * The default Datagrid Header component.\n *\n * Renders select all checkbox as well as column header buttons used for sorting.\n */\n\nexport var DatagridHeader = function (props) {\n  var children = props.children,\n      className = props.className,\n      _a = props.hasExpand,\n      hasExpand = _a === void 0 ? false : _a,\n      _b = props.hasBulkActions,\n      hasBulkActions = _b === void 0 ? false : _b,\n      isRowSelectable = props.isRowSelectable;\n  var resource = useResourceContext(props);\n  var translate = useTranslate();\n\n  var _c = useListContext(props),\n      sort = _c.sort,\n      data = _c.data,\n      onSelect = _c.onSelect,\n      selectedIds = _c.selectedIds,\n      setSort = _c.setSort;\n\n  var updateSortCallback = useCallback(function (event) {\n    event.stopPropagation();\n    var newField = event.currentTarget.dataset.field;\n    var newOrder = sort.field === newField ? sort.order === 'ASC' ? 'DESC' : 'ASC' : event.currentTarget.dataset.order;\n    setSort({\n      field: newField,\n      order: newOrder\n    });\n  }, [sort.field, sort.order, setSort]);\n  var updateSort = setSort ? updateSortCallback : null;\n  var handleSelectAll = useCallback(function (event) {\n    return onSelect(event.target.checked ? selectedIds.concat(data.filter(function (record) {\n      return !selectedIds.includes(record.id);\n    }).filter(function (record) {\n      return isRowSelectable ? isRowSelectable(record) : true;\n    }).map(function (record) {\n      return record.id;\n    })) : []);\n  }, [data, onSelect, isRowSelectable, selectedIds]);\n  var selectableIds = Array.isArray(data) ? isRowSelectable ? data.filter(function (record) {\n    return isRowSelectable(record);\n  }).map(function (record) {\n    return record.id;\n  }) : data.map(function (record) {\n    return record.id;\n  }) : [];\n  return React.createElement(TableHead, {\n    className: clsx(className, DatagridClasses.thead)\n  }, React.createElement(TableRow, {\n    className: clsx(DatagridClasses.row, DatagridClasses.headerRow)\n  }, hasExpand && React.createElement(TableCell, {\n    padding: \"none\",\n    className: clsx(DatagridClasses.headerCell, DatagridClasses.expandHeader)\n  }), hasBulkActions && selectedIds && React.createElement(TableCell, {\n    padding: \"checkbox\",\n    className: DatagridClasses.headerCell\n  }, React.createElement(Checkbox, {\n    \"aria-label\": translate('ra.action.select_all', {\n      _: 'Select all'\n    }),\n    className: \"select-all\",\n    color: \"primary\",\n    checked: selectedIds.length > 0 && selectableIds.length > 0 && selectableIds.every(function (id) {\n      return selectedIds.includes(id);\n    }),\n    onChange: handleSelectAll\n  })), Children.map(children, function (field, index) {\n    return isValidElement(field) ? React.createElement(DatagridHeaderCell, {\n      className: clsx(DatagridClasses.headerCell, \"column-\".concat(field.props.source)),\n      sort: sort,\n      field: field,\n      isSorting: sort.field === (field.props.sortBy || field.props.source),\n      key: field.props.source || index,\n      resource: resource,\n      updateSort: updateSort\n    }) : null;\n  })));\n};\nDatagridHeader.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  sort: PropTypes.exact({\n    field: PropTypes.string,\n    order: PropTypes.string\n  }),\n  data: PropTypes.arrayOf(PropTypes.any),\n  hasExpand: PropTypes.bool,\n  hasBulkActions: PropTypes.bool,\n  isRowSelectable: PropTypes.func,\n  isRowExpandable: PropTypes.func,\n  onSelect: PropTypes.func,\n  onToggleItem: PropTypes.func,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  setSort: PropTypes.func\n};\nDatagridHeader.displayName = 'DatagridHeader';","map":{"version":3,"names":["React","Children","isValidElement","useCallback","PropTypes","useListContext","useResourceContext","useTranslate","Checkbox","TableCell","TableHead","TableRow","clsx","DatagridHeaderCell","DatagridClasses","DatagridHeader","props","children","className","_a","hasExpand","_b","hasBulkActions","isRowSelectable","resource","translate","_c","sort","data","onSelect","selectedIds","setSort","updateSortCallback","event","stopPropagation","newField","currentTarget","dataset","field","newOrder","order","updateSort","handleSelectAll","target","checked","concat","filter","record","includes","id","map","selectableIds","Array","isArray","createElement","thead","row","headerRow","padding","headerCell","expandHeader","_","color","length","every","onChange","index","source","isSorting","sortBy","key","propTypes","node","string","exact","arrayOf","any","bool","func","isRowExpandable","onToggleItem","displayName"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-ui-materialui/dist/esm/list/datagrid/DatagridHeader.js"],"sourcesContent":["import * as React from 'react';\nimport { Children, isValidElement, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useListContext, useResourceContext, useTranslate, } from 'ra-core';\nimport { Checkbox, TableCell, TableHead, TableRow } from '@mui/material';\nimport clsx from 'clsx';\nimport DatagridHeaderCell from './DatagridHeaderCell';\nimport { DatagridClasses } from './useDatagridStyles';\n/**\n * The default Datagrid Header component.\n *\n * Renders select all checkbox as well as column header buttons used for sorting.\n */\nexport var DatagridHeader = function (props) {\n    var children = props.children, className = props.className, _a = props.hasExpand, hasExpand = _a === void 0 ? false : _a, _b = props.hasBulkActions, hasBulkActions = _b === void 0 ? false : _b, isRowSelectable = props.isRowSelectable;\n    var resource = useResourceContext(props);\n    var translate = useTranslate();\n    var _c = useListContext(props), sort = _c.sort, data = _c.data, onSelect = _c.onSelect, selectedIds = _c.selectedIds, setSort = _c.setSort;\n    var updateSortCallback = useCallback(function (event) {\n        event.stopPropagation();\n        var newField = event.currentTarget.dataset.field;\n        var newOrder = sort.field === newField\n            ? sort.order === 'ASC'\n                ? 'DESC'\n                : 'ASC'\n            : event.currentTarget.dataset.order;\n        setSort({ field: newField, order: newOrder });\n    }, [sort.field, sort.order, setSort]);\n    var updateSort = setSort ? updateSortCallback : null;\n    var handleSelectAll = useCallback(function (event) {\n        return onSelect(event.target.checked\n            ? selectedIds.concat(data\n                .filter(function (record) { return !selectedIds.includes(record.id); })\n                .filter(function (record) {\n                return isRowSelectable\n                    ? isRowSelectable(record)\n                    : true;\n            })\n                .map(function (record) { return record.id; }))\n            : []);\n    }, [data, onSelect, isRowSelectable, selectedIds]);\n    var selectableIds = Array.isArray(data)\n        ? isRowSelectable\n            ? data\n                .filter(function (record) { return isRowSelectable(record); })\n                .map(function (record) { return record.id; })\n            : data.map(function (record) { return record.id; })\n        : [];\n    return (React.createElement(TableHead, { className: clsx(className, DatagridClasses.thead) },\n        React.createElement(TableRow, { className: clsx(DatagridClasses.row, DatagridClasses.headerRow) },\n            hasExpand && (React.createElement(TableCell, { padding: \"none\", className: clsx(DatagridClasses.headerCell, DatagridClasses.expandHeader) })),\n            hasBulkActions && selectedIds && (React.createElement(TableCell, { padding: \"checkbox\", className: DatagridClasses.headerCell },\n                React.createElement(Checkbox, { \"aria-label\": translate('ra.action.select_all', {\n                        _: 'Select all',\n                    }), className: \"select-all\", color: \"primary\", checked: selectedIds.length > 0 &&\n                        selectableIds.length > 0 &&\n                        selectableIds.every(function (id) {\n                            return selectedIds.includes(id);\n                        }), onChange: handleSelectAll }))),\n            Children.map(children, function (field, index) {\n                return isValidElement(field) ? (React.createElement(DatagridHeaderCell, { className: clsx(DatagridClasses.headerCell, \"column-\".concat(field.props.source)), sort: sort, field: field, isSorting: sort.field ===\n                        (field.props.sortBy ||\n                            field.props.source), key: field.props.source || index, resource: resource, updateSort: updateSort })) : null;\n            }))));\n};\nDatagridHeader.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    sort: PropTypes.exact({\n        field: PropTypes.string,\n        order: PropTypes.string,\n    }),\n    data: PropTypes.arrayOf(PropTypes.any),\n    hasExpand: PropTypes.bool,\n    hasBulkActions: PropTypes.bool,\n    isRowSelectable: PropTypes.func,\n    isRowExpandable: PropTypes.func,\n    onSelect: PropTypes.func,\n    onToggleItem: PropTypes.func,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    setSort: PropTypes.func,\n};\nDatagridHeader.displayName = 'DatagridHeader';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}