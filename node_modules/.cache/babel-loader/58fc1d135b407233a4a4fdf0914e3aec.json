{"ast":null,"code":"import { useContext, useMemo } from 'react';\nimport DataProviderContext from './DataProviderContext';\nimport { defaultDataProvider } from './defaultDataProvider';\nimport validateResponseFormat from './validateResponseFormat';\nimport useLogoutIfAccessDenied from '../auth/useLogoutIfAccessDenied';\n/**\n * Hook for getting a dataProvider\n *\n * Gets a dataProvider object, which behaves just like the real dataProvider\n * (same methods returning a Promise). But it's actually a Proxy object,\n * which validates the response format, and logs the user out upon error\n * if authProvider.checkError() rejects.\n *\n * @return dataProvider\n *\n * @example Basic usage\n *\n * import * as React from 'react';\n * import { useState } from 'react';\n * import { useDataProvider } from 'react-admin';\n *\n * const PostList = () => {\n *      const [posts, setPosts] = useState([])\n *      const dataProvider = useDataProvider();\n *      useEffect(() => {\n *          dataProvider.getList('posts', { filter: { status: 'pending' }})\n *            .then(({ data }) => setPosts(data));\n *      }, [])\n *\n *      return (\n *          <Fragment>\n *              {posts.map((post, key) => <PostDetail post={post} key={key} />)}\n *          </Fragment>\n *     );\n * }\n *\n * @example Handling all states (loading, error, success)\n *\n * import { useState, useEffect } from 'react';\n * import { useDataProvider } from 'react-admin';\n *\n * const UserProfile = ({ userId }) => {\n *     const dataProvider = useDataProvider();\n *     const [user, setUser] = useState();\n *     const [loading, setLoading] = useState(true);\n *     const [error, setError] = useState();\n *     useEffect(() => {\n *         dataProvider.getOne('users', { id: userId })\n *             .then(({ data }) => {\n *                 setUser(data);\n *                 setLoading(false);\n *             })\n *             .catch(error => {\n *                 setError(error);\n *                 setLoading(false);\n *             })\n *     }, []);\n *\n *     if (loading) return <Loading />;\n *     if (error) return <Error />\n *     if (!user) return null;\n *\n *     return (\n *         <ul>\n *             <li>Name: {user.name}</li>\n *             <li>Email: {user.email}</li>\n *         </ul>\n *     )\n * }\n */\n\nexport var useDataProvider = function () {\n  var dataProvider = useContext(DataProviderContext) || defaultDataProvider;\n  var logoutIfAccessDenied = useLogoutIfAccessDenied();\n  var dataProviderProxy = useMemo(function () {\n    return new Proxy(dataProvider, {\n      get: function (target, name) {\n        if (typeof name === 'symbol' || name === 'then') {\n          return;\n        }\n\n        return function () {\n          var args = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n\n          var type = name.toString();\n\n          if (typeof dataProvider[type] !== 'function') {\n            throw new Error(\"Unknown dataProvider function: \".concat(type));\n          }\n\n          try {\n            return dataProvider[type].apply(dataProvider, args).then(function (response) {\n              if (process.env.NODE_ENV !== 'production') {\n                validateResponseFormat(response, type);\n              }\n\n              return response;\n            }).catch(function (error) {\n              if (process.env.NODE_ENV !== 'production') {\n                console.error(error);\n              }\n\n              return logoutIfAccessDenied(error).then(function (loggedOut) {\n                if (loggedOut) return {\n                  data: {}\n                };\n                throw error;\n              });\n            });\n          } catch (e) {\n            if (process.env.NODE_ENV !== 'production') {\n              console.error(e);\n            }\n\n            throw new Error('The dataProvider threw an error. It should return a rejected Promise instead.');\n          }\n        };\n      }\n    });\n  }, [dataProvider, logoutIfAccessDenied]);\n  return dataProviderProxy;\n};","map":{"version":3,"names":["useContext","useMemo","DataProviderContext","defaultDataProvider","validateResponseFormat","useLogoutIfAccessDenied","useDataProvider","dataProvider","logoutIfAccessDenied","dataProviderProxy","Proxy","get","target","name","args","_i","arguments","length","type","toString","Error","concat","apply","then","response","process","env","NODE_ENV","catch","error","console","loggedOut","data","e"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/dataProvider/useDataProvider.js"],"sourcesContent":["import { useContext, useMemo } from 'react';\nimport DataProviderContext from './DataProviderContext';\nimport { defaultDataProvider } from './defaultDataProvider';\nimport validateResponseFormat from './validateResponseFormat';\nimport useLogoutIfAccessDenied from '../auth/useLogoutIfAccessDenied';\n/**\n * Hook for getting a dataProvider\n *\n * Gets a dataProvider object, which behaves just like the real dataProvider\n * (same methods returning a Promise). But it's actually a Proxy object,\n * which validates the response format, and logs the user out upon error\n * if authProvider.checkError() rejects.\n *\n * @return dataProvider\n *\n * @example Basic usage\n *\n * import * as React from 'react';\n * import { useState } from 'react';\n * import { useDataProvider } from 'react-admin';\n *\n * const PostList = () => {\n *      const [posts, setPosts] = useState([])\n *      const dataProvider = useDataProvider();\n *      useEffect(() => {\n *          dataProvider.getList('posts', { filter: { status: 'pending' }})\n *            .then(({ data }) => setPosts(data));\n *      }, [])\n *\n *      return (\n *          <Fragment>\n *              {posts.map((post, key) => <PostDetail post={post} key={key} />)}\n *          </Fragment>\n *     );\n * }\n *\n * @example Handling all states (loading, error, success)\n *\n * import { useState, useEffect } from 'react';\n * import { useDataProvider } from 'react-admin';\n *\n * const UserProfile = ({ userId }) => {\n *     const dataProvider = useDataProvider();\n *     const [user, setUser] = useState();\n *     const [loading, setLoading] = useState(true);\n *     const [error, setError] = useState();\n *     useEffect(() => {\n *         dataProvider.getOne('users', { id: userId })\n *             .then(({ data }) => {\n *                 setUser(data);\n *                 setLoading(false);\n *             })\n *             .catch(error => {\n *                 setError(error);\n *                 setLoading(false);\n *             })\n *     }, []);\n *\n *     if (loading) return <Loading />;\n *     if (error) return <Error />\n *     if (!user) return null;\n *\n *     return (\n *         <ul>\n *             <li>Name: {user.name}</li>\n *             <li>Email: {user.email}</li>\n *         </ul>\n *     )\n * }\n */\nexport var useDataProvider = function () {\n    var dataProvider = (useContext(DataProviderContext) ||\n        defaultDataProvider);\n    var logoutIfAccessDenied = useLogoutIfAccessDenied();\n    var dataProviderProxy = useMemo(function () {\n        return new Proxy(dataProvider, {\n            get: function (target, name) {\n                if (typeof name === 'symbol' || name === 'then') {\n                    return;\n                }\n                return function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var type = name.toString();\n                    if (typeof dataProvider[type] !== 'function') {\n                        throw new Error(\"Unknown dataProvider function: \".concat(type));\n                    }\n                    try {\n                        return dataProvider[type]\n                            .apply(dataProvider, args)\n                            .then(function (response) {\n                            if (process.env.NODE_ENV !== 'production') {\n                                validateResponseFormat(response, type);\n                            }\n                            return response;\n                        })\n                            .catch(function (error) {\n                            if (process.env.NODE_ENV !== 'production') {\n                                console.error(error);\n                            }\n                            return logoutIfAccessDenied(error).then(function (loggedOut) {\n                                if (loggedOut)\n                                    return { data: {} };\n                                throw error;\n                            });\n                        });\n                    }\n                    catch (e) {\n                        if (process.env.NODE_ENV !== 'production') {\n                            console.error(e);\n                        }\n                        throw new Error('The dataProvider threw an error. It should return a rejected Promise instead.');\n                    }\n                };\n            },\n        });\n    }, [dataProvider, logoutIfAccessDenied]);\n    return dataProviderProxy;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}