{"ast":null,"code":"import { getPermissionsFromRoles } from \"@react-admin/ra-rbac\";\nconst roles = {\n  admin: [{\n    action: [\"list\", \"show\"],\n    resource: \"getRegions\"\n  } // { action: \"read\", resource: \"products.*\" },\n  // { type: \"deny\", action: \"read\", resource: \"products.description\" },\n  // { action: \"list\", resource: \"categories\" },\n  // { action: \"read\", resource: \"categories.*\" },\n  // { action: [\"list\", \"show\"], resource: \"customers\" },\n  // { action: \"read\", resource: \"customers.*\" },\n  // { action: \"*\", resource: \"invoices\" },\n  ],\n  contentEditor: [{\n    action: [\"list\", \"create\", \"edit\", \"delete\", \"export\"],\n    resource: \"products\"\n  }, {\n    action: \"read\",\n    resource: \"products.*\"\n  }, {\n    type: \"deny\",\n    action: \"read\",\n    resource: \"products.stock\"\n  }, {\n    type: \"deny\",\n    action: \"read\",\n    resource: \"products.sales\"\n  }, {\n    action: \"write\",\n    resource: \"products.*\"\n  }, {\n    type: \"deny\",\n    action: \"write\",\n    resource: \"products.stock\"\n  }, {\n    type: \"deny\",\n    action: \"write\",\n    resource: \"products.sales\"\n  }, {\n    action: \"list\",\n    resource: \"categories\"\n  }, {\n    action: [\"list\", \"edit\"],\n    resource: \"customers\"\n  }, {\n    action: [\"list\", \"edit\"],\n    resource: \"reviews\"\n  }],\n  stockManager: [{\n    action: [\"list\", \"edit\", \"export\"],\n    resource: \"products\"\n  }, {\n    action: \"read\",\n    resource: \"products.*\"\n  }, {\n    type: \"deny\",\n    action: \"read\",\n    resource: \"products.description\"\n  }, {\n    action: \"write\",\n    resource: \"products.stock\"\n  }, {\n    action: \"write\",\n    resource: \"products.sales\"\n  }, {\n    action: \"list\",\n    resource: \"categories\"\n  }],\n  administrator: [{\n    action: \"*\",\n    resource: \"*\"\n  }]\n};\nconst authProvider = {\n  checkAuth: () => {\n    const role = localStorage.getItem(\"role\");\n    return role ? Promise.resolve() : Promise.reject();\n  },\n  login: _ref => {\n    let {\n      role\n    } = _ref;\n    localStorage.setItem(\"role\", role);\n    return Promise.resolve();\n  },\n  logout: () => {\n    localStorage.removeItem(\"role\");\n    return Promise.resolve();\n  },\n  checkError: () => Promise.resolve(),\n  getIdentity: () => {\n    const role = localStorage.getItem(\"role\");\n    return Promise.resolve({\n      id: role,\n      fullName: {\n        admin: \"admin\",\n        contentEditor: \"Content Editor\",\n        stockManager: \"Stock manager\",\n        administrator: \"Administrator\"\n      }[role]\n    });\n  },\n  getPermissions: () => {\n    const role = localStorage.getItem(\"role\");\n    return Promise.resolve(getPermissionsFromRoles({\n      roleDefinitions: roles,\n      userRoles: [role]\n    }));\n  },\n  getRoles: () => Promise.resolve(roles)\n};\nexport default authProvider;","map":{"version":3,"names":["getPermissionsFromRoles","roles","admin","action","resource","contentEditor","type","stockManager","administrator","authProvider","checkAuth","role","localStorage","getItem","Promise","resolve","reject","login","setItem","logout","removeItem","checkError","getIdentity","id","fullName","getPermissions","roleDefinitions","userRoles","getRoles"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/src/Utils/authProvider.js"],"sourcesContent":["import { getPermissionsFromRoles } from \"@react-admin/ra-rbac\";\nconst roles = {\n  admin: [\n    { action: [\"list\", \"show\"], resource: \"getRegions\" },\n    // { action: \"read\", resource: \"products.*\" },\n    // { type: \"deny\", action: \"read\", resource: \"products.description\" },\n    // { action: \"list\", resource: \"categories\" },\n    // { action: \"read\", resource: \"categories.*\" },\n    // { action: [\"list\", \"show\"], resource: \"customers\" },\n    // { action: \"read\", resource: \"customers.*\" },\n    // { action: \"*\", resource: \"invoices\" },\n  ],\n  contentEditor: [\n    {\n      action: [\"list\", \"create\", \"edit\", \"delete\", \"export\"],\n      resource: \"products\",\n    },\n    { action: \"read\", resource: \"products.*\" },\n    { type: \"deny\", action: \"read\", resource: \"products.stock\" },\n    { type: \"deny\", action: \"read\", resource: \"products.sales\" },\n    { action: \"write\", resource: \"products.*\" },\n    { type: \"deny\", action: \"write\", resource: \"products.stock\" },\n    { type: \"deny\", action: \"write\", resource: \"products.sales\" },\n    { action: \"list\", resource: \"categories\" },\n    { action: [\"list\", \"edit\"], resource: \"customers\" },\n    { action: [\"list\", \"edit\"], resource: \"reviews\" },\n  ],\n  stockManager: [\n    { action: [\"list\", \"edit\", \"export\"], resource: \"products\" },\n    { action: \"read\", resource: \"products.*\" },\n    {\n      type: \"deny\",\n      action: \"read\",\n      resource: \"products.description\",\n    },\n    { action: \"write\", resource: \"products.stock\" },\n    { action: \"write\", resource: \"products.sales\" },\n    { action: \"list\", resource: \"categories\" },\n  ],\n  administrator: [{ action: \"*\", resource: \"*\" }],\n};\n\nconst authProvider = {\n  checkAuth: () => {\n    const role = localStorage.getItem(\"role\");\n    return role ? Promise.resolve() : Promise.reject();\n  },\n  login: ({ role }) => {\n    localStorage.setItem(\"role\", role);\n    return Promise.resolve();\n  },\n  logout: () => {\n    localStorage.removeItem(\"role\");\n    return Promise.resolve();\n  },\n  checkError: () => Promise.resolve(),\n  getIdentity: () => {\n    const role = localStorage.getItem(\"role\");\n    return Promise.resolve({\n      id: role,\n      fullName: {\n        admin: \"admin\",\n        contentEditor: \"Content Editor\",\n        stockManager: \"Stock manager\",\n        administrator: \"Administrator\",\n      }[role],\n    });\n  },\n  getPermissions: () => {\n    const role = localStorage.getItem(\"role\");\n    return Promise.resolve(\n      getPermissionsFromRoles({\n        roleDefinitions: roles,\n        userRoles: [role],\n      })\n    );\n  },\n  getRoles: () => Promise.resolve(roles),\n};\n\nexport default authProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}