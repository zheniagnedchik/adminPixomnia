{"ast":null,"code":"import { Node, mergeAttributes, wrappingInputRule } from '@tiptap/core';\nconst inputRegex = /^\\s*>\\s$/;\nconst Blockquote = Node.create({\n  name: 'blockquote',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n\n  content: 'block+',\n  group: 'block',\n  defining: true,\n\n  parseHTML() {\n    return [{\n      tag: 'blockquote'\n    }];\n  },\n\n  renderHTML(_ref) {\n    let {\n      HTMLAttributes\n    } = _ref;\n    return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n\n  addCommands() {\n    return {\n      setBlockquote: () => _ref2 => {\n        let {\n          commands\n        } = _ref2;\n        return commands.wrapIn(this.name);\n      },\n      toggleBlockquote: () => _ref3 => {\n        let {\n          commands\n        } = _ref3;\n        return commands.toggleWrap(this.name);\n      },\n      unsetBlockquote: () => _ref4 => {\n        let {\n          commands\n        } = _ref4;\n        return commands.lift(this.name);\n      }\n    };\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-b': () => this.editor.commands.toggleBlockquote()\n    };\n  },\n\n  addInputRules() {\n    return [wrappingInputRule({\n      find: inputRegex,\n      type: this.type\n    })];\n  }\n\n});\nexport { Blockquote, Blockquote as default, inputRegex };","map":{"version":3,"mappings":";AAyBO,MAAMA,UAAU,GAAG,UAAnB;AAEM,gBAAU,GAAGC,IAAI,CAACC,MAAL,CAA+B;EAEvDC,IAAI,EAAE,YAFiD;;EAIvDC,UAAU;IACR,OAAO;MACLC,cAAc,EAAE;IADX,CAAP;EAGD,CARsD;;EAUvDC,OAAO,EAAE,QAV8C;EAYvDC,KAAK,EAAE,OAZgD;EAcvDC,QAAQ,EAAE,IAd6C;;EAgBvDC,SAAS;IACP,OAAO,CACL;MAAEC,GAAG,EAAE;IAAP,CADK,CAAP;EAGD,CApBsD;;EAsBvDC,UAAU,OAAmB;IAAA,IAAlB;MAAEN;IAAF,CAAkB;IAC3B,OAAO,CAAC,YAAD,EAAeO,eAAe,CAAC,KAAKC,OAAL,CAAaR,cAAd,EAA8BA,cAA9B,CAA9B,EAA6E,CAA7E,CAAP;EACD,CAxBsD;;EA0BvDS,WAAW;IACT,OAAO;MACLC,aAAa,EAAE,MAAM,SAAiB;QAAA,IAAhB;UAAEC;QAAF,CAAgB;QACpC,OAAOA,QAAQ,CAACC,MAAT,CAAgB,KAAKd,IAArB,CAAP;MACD,CAHI;MAILe,gBAAgB,EAAE,MAAM,SAAiB;QAAA,IAAhB;UAAEF;QAAF,CAAgB;QACvC,OAAOA,QAAQ,CAACG,UAAT,CAAoB,KAAKhB,IAAzB,CAAP;MACD,CANI;MAOLiB,eAAe,EAAE,MAAM,SAAiB;QAAA,IAAhB;UAAEJ;QAAF,CAAgB;QACtC,OAAOA,QAAQ,CAACK,IAAT,CAAc,KAAKlB,IAAnB,CAAP;MACD;IATI,CAAP;EAWD,CAtCsD;;EAwCvDmB,oBAAoB;IAClB,OAAO;MACL,eAAe,MAAM,KAAKC,MAAL,CAAYP,QAAZ,CAAqBE,gBAArB;IADhB,CAAP;EAGD,CA5CsD;;EA8CvDM,aAAa;IACX,OAAO,CACLC,iBAAiB,CAAC;MAChBC,IAAI,EAAE1B,UADU;MAEhB2B,IAAI,EAAE,KAAKA;IAFK,CAAD,CADZ,CAAP;EAMD;;AArDsD,CAA/B,CAAb","names":["inputRegex","Node","create","name","addOptions","HTMLAttributes","content","group","defining","parseHTML","tag","renderHTML","mergeAttributes","options","addCommands","setBlockquote","commands","wrapIn","toggleBlockquote","toggleWrap","unsetBlockquote","lift","addKeyboardShortcuts","editor","addInputRules","wrappingInputRule","find","type"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@tiptap/extension-blockquote/src/blockquote.ts"],"sourcesContent":["import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nexport interface BlockquoteOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    blockQuote: {\n      /**\n       * Set a blockquote node\n       */\n      setBlockquote: () => ReturnType,\n      /**\n       * Toggle a blockquote node\n       */\n      toggleBlockquote: () => ReturnType,\n      /**\n       * Unset a blockquote node\n       */\n      unsetBlockquote: () => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /^\\s*>\\s$/\n\nexport const Blockquote = Node.create<BlockquoteOptions>({\n\n  name: 'blockquote',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'block+',\n\n  group: 'block',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      { tag: 'blockquote' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setBlockquote: () => ({ commands }) => {\n        return commands.wrapIn(this.name)\n      },\n      toggleBlockquote: () => ({ commands }) => {\n        return commands.toggleWrap(this.name)\n      },\n      unsetBlockquote: () => ({ commands }) => {\n        return commands.lift(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-b': () => this.editor.commands.toggleBlockquote(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n"]},"metadata":{},"sourceType":"module"}