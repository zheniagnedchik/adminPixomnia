{"ast":null,"code":"import { Node, mergeAttributes } from '@tiptap/core';\nconst ListItem = Node.create({\n  name: 'listItem',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n\n  content: 'paragraph block*',\n  defining: true,\n\n  parseHTML() {\n    return [{\n      tag: 'li'\n    }];\n  },\n\n  renderHTML(_ref) {\n    let {\n      HTMLAttributes\n    } = _ref;\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name)\n    };\n  }\n\n});\nexport { ListItem, ListItem as default };","map":{"version":3,"mappings":";AAMa,cAAQ,GAAGA,IAAI,CAACC,MAAL,CAA6B;EACnDC,IAAI,EAAE,UAD6C;;EAGnDC,UAAU;IACR,OAAO;MACLC,cAAc,EAAE;IADX,CAAP;EAGD,CAPkD;;EASnDC,OAAO,EAAE,kBAT0C;EAWnDC,QAAQ,EAAE,IAXyC;;EAanDC,SAAS;IACP,OAAO,CACL;MACEC,GAAG,EAAE;IADP,CADK,CAAP;EAKD,CAnBkD;;EAqBnDC,UAAU,OAAmB;IAAA,IAAlB;MAAEL;IAAF,CAAkB;IAC3B,OAAO,CAAC,IAAD,EAAOM,eAAe,CAAC,KAAKC,OAAL,CAAaP,cAAd,EAA8BA,cAA9B,CAAtB,EAAqE,CAArE,CAAP;EACD,CAvBkD;;EAyBnDQ,oBAAoB;IAClB,OAAO;MACLC,KAAK,EAAE,MAAM,KAAKC,MAAL,CAAYC,QAAZ,CAAqBC,aAArB,CAAmC,KAAKd,IAAxC,CADR;MAELe,GAAG,EAAE,MAAM,KAAKH,MAAL,CAAYC,QAAZ,CAAqBG,YAArB,CAAkC,KAAKhB,IAAvC,CAFN;MAGL,aAAa,MAAM,KAAKY,MAAL,CAAYC,QAAZ,CAAqBI,YAArB,CAAkC,KAAKjB,IAAvC;IAHd,CAAP;EAKD;;AA/BkD,CAA7B,CAAX","names":["Node","create","name","addOptions","HTMLAttributes","content","defining","parseHTML","tag","renderHTML","mergeAttributes","options","addKeyboardShortcuts","Enter","editor","commands","splitListItem","Tab","sinkListItem","liftListItem"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@tiptap/extension-list-item/src/list-item.ts"],"sourcesContent":["import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ListItemOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\nexport const ListItem = Node.create<ListItemOptions>({\n  name: 'listItem',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'paragraph block*',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: 'li',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}