{"ast":null,"code":"function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', count); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', count); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', count);\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return declension(scheme.regular, count) + ' кейін';\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' бұрын';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: '1 секундтан аз',\n      singularNominative: '{{count}} секундтан аз',\n      singularGenitive: '{{count}} секундтан аз',\n      pluralGenitive: '{{count}} секундтан аз'\n    },\n    future: {\n      one: 'бір секундтан кейін',\n      singularNominative: '{{count}} секундтан кейін',\n      singularGenitive: '{{count}} секундтан кейін',\n      pluralGenitive: '{{count}} секундтан кейін'\n    }\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} секунд',\n      singularGenitive: '{{count}} секунд',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунд бұрын',\n      singularGenitive: '{{count}} секунд бұрын',\n      pluralGenitive: '{{count}} секунд бұрын'\n    },\n    future: {\n      singularNominative: '{{count}} секундтан кейін',\n      singularGenitive: '{{count}} секундтан кейін',\n      pluralGenitive: '{{count}} секундтан кейін'\n    }\n  }),\n  halfAMinute: function (_, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'жарты минут ішінде';\n      } else {\n        return 'жарты минут бұрын';\n      }\n    }\n\n    return 'жарты минут';\n  },\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: '1 минуттан аз',\n      singularNominative: '{{count}} минуттан аз',\n      singularGenitive: '{{count}} минуттан аз',\n      pluralGenitive: '{{count}} минуттан аз'\n    },\n    future: {\n      one: 'минуттан кем ',\n      singularNominative: '{{count}} минуттан кем',\n      singularGenitive: '{{count}} минуттан кем',\n      pluralGenitive: '{{count}} минуттан кем'\n    }\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} минут',\n      singularGenitive: '{{count}} минут',\n      pluralGenitive: '{{count}} минут'\n    },\n    past: {\n      singularNominative: '{{count}} минут бұрын',\n      singularGenitive: '{{count}} минут бұрын',\n      pluralGenitive: '{{count}} минут бұрын'\n    },\n    future: {\n      singularNominative: '{{count}} минуттан кейін',\n      singularGenitive: '{{count}} минуттан кейін',\n      pluralGenitive: '{{count}} минуттан кейін'\n    }\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'шамамен {{count}} сағат',\n      singularGenitive: 'шамамен {{count}} сағат',\n      pluralGenitive: 'шамамен {{count}} сағат'\n    },\n    future: {\n      singularNominative: 'шамамен {{count}} сағаттан кейін',\n      singularGenitive: 'шамамен {{count}} сағаттан кейін',\n      pluralGenitive: 'шамамен {{count}} сағаттан кейін'\n    }\n  }),\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} сағат',\n      singularGenitive: '{{count}} сағат',\n      pluralGenitive: '{{count}} сағат'\n    }\n  }),\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} күн',\n      singularGenitive: '{{count}} күн',\n      pluralGenitive: '{{count}} күн'\n    },\n    future: {\n      singularNominative: '{{count}} күннен кейін',\n      singularGenitive: '{{count}} күннен кейін',\n      pluralGenitive: '{{count}} күннен кейін'\n    }\n  }),\n  aboutXWeeks: {\n    one: 'шамамен 1 апта',\n    other: 'шамамен {{count}} апта'\n  },\n  xWeeks: {\n    one: '1 апта',\n    other: '{{count}} апта'\n  },\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'шамамен {{count}} ай',\n      singularGenitive: 'шамамен {{count}} ай',\n      pluralGenitive: 'шамамен {{count}} ай'\n    },\n    future: {\n      singularNominative: 'шамамен {{count}} айдан кейін',\n      singularGenitive: 'шамамен {{count}} айдан кейін',\n      pluralGenitive: 'шамамен {{count}} айдан кейін'\n    }\n  }),\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} ай',\n      singularGenitive: '{{count}} ай',\n      pluralGenitive: '{{count}} ай'\n    }\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'шамамен {{count}} жыл',\n      singularGenitive: 'шамамен {{count}} жыл',\n      pluralGenitive: 'шамамен {{count}} жыл'\n    },\n    future: {\n      singularNominative: 'шамамен {{count}} жылдан кейін',\n      singularGenitive: 'шамамен {{count}} жылдан кейін',\n      pluralGenitive: 'шамамен {{count}} жылдан кейін'\n    }\n  }),\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} жыл',\n      singularGenitive: '{{count}} жыл',\n      pluralGenitive: '{{count}} жыл'\n    },\n    future: {\n      singularNominative: '{{count}} жылдан кейін',\n      singularGenitive: '{{count}} жылдан кейін',\n      pluralGenitive: '{{count}} жылдан кейін'\n    }\n  }),\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} жылдан астам',\n      singularGenitive: '{{count}} жылдан астам',\n      pluralGenitive: '{{count}} жылдан астам'\n    },\n    future: {\n      singularNominative: '{{count}} жылдан астам',\n      singularGenitive: '{{count}} жылдан астам',\n      pluralGenitive: '{{count}} жылдан астам'\n    }\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} жылға жақын',\n      singularGenitive: '{{count}} жылға жақын',\n      pluralGenitive: '{{count}} жылға жақын'\n    },\n    future: {\n      singularNominative: '{{count}} жылдан кейін',\n      singularGenitive: '{{count}} жылдан кейін',\n      pluralGenitive: '{{count}} жылдан кейін'\n    }\n  })\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n}","map":{"version":3,"names":["declension","scheme","count","one","undefined","rem10","rem100","singularNominative","replace","singularGenitive","pluralGenitive","buildLocalizeTokenFn","options","addSuffix","comparison","future","regular","past","formatDistanceLocale","lessThanXSeconds","xSeconds","halfAMinute","_","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","other","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/date-fns/esm/locale/kk/_lib/formatDistance/index.js"],"sourcesContent":["function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', count); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', count); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', count);\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return declension(scheme.regular, count) + ' кейін';\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' бұрын';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: '1 секундтан аз',\n      singularNominative: '{{count}} секундтан аз',\n      singularGenitive: '{{count}} секундтан аз',\n      pluralGenitive: '{{count}} секундтан аз'\n    },\n    future: {\n      one: 'бір секундтан кейін',\n      singularNominative: '{{count}} секундтан кейін',\n      singularGenitive: '{{count}} секундтан кейін',\n      pluralGenitive: '{{count}} секундтан кейін'\n    }\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} секунд',\n      singularGenitive: '{{count}} секунд',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунд бұрын',\n      singularGenitive: '{{count}} секунд бұрын',\n      pluralGenitive: '{{count}} секунд бұрын'\n    },\n    future: {\n      singularNominative: '{{count}} секундтан кейін',\n      singularGenitive: '{{count}} секундтан кейін',\n      pluralGenitive: '{{count}} секундтан кейін'\n    }\n  }),\n  halfAMinute: function (_, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'жарты минут ішінде';\n      } else {\n        return 'жарты минут бұрын';\n      }\n    }\n\n    return 'жарты минут';\n  },\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: '1 минуттан аз',\n      singularNominative: '{{count}} минуттан аз',\n      singularGenitive: '{{count}} минуттан аз',\n      pluralGenitive: '{{count}} минуттан аз'\n    },\n    future: {\n      one: 'минуттан кем ',\n      singularNominative: '{{count}} минуттан кем',\n      singularGenitive: '{{count}} минуттан кем',\n      pluralGenitive: '{{count}} минуттан кем'\n    }\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} минут',\n      singularGenitive: '{{count}} минут',\n      pluralGenitive: '{{count}} минут'\n    },\n    past: {\n      singularNominative: '{{count}} минут бұрын',\n      singularGenitive: '{{count}} минут бұрын',\n      pluralGenitive: '{{count}} минут бұрын'\n    },\n    future: {\n      singularNominative: '{{count}} минуттан кейін',\n      singularGenitive: '{{count}} минуттан кейін',\n      pluralGenitive: '{{count}} минуттан кейін'\n    }\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'шамамен {{count}} сағат',\n      singularGenitive: 'шамамен {{count}} сағат',\n      pluralGenitive: 'шамамен {{count}} сағат'\n    },\n    future: {\n      singularNominative: 'шамамен {{count}} сағаттан кейін',\n      singularGenitive: 'шамамен {{count}} сағаттан кейін',\n      pluralGenitive: 'шамамен {{count}} сағаттан кейін'\n    }\n  }),\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} сағат',\n      singularGenitive: '{{count}} сағат',\n      pluralGenitive: '{{count}} сағат'\n    }\n  }),\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} күн',\n      singularGenitive: '{{count}} күн',\n      pluralGenitive: '{{count}} күн'\n    },\n    future: {\n      singularNominative: '{{count}} күннен кейін',\n      singularGenitive: '{{count}} күннен кейін',\n      pluralGenitive: '{{count}} күннен кейін'\n    }\n  }),\n  aboutXWeeks: {\n    one: 'шамамен 1 апта',\n    other: 'шамамен {{count}} апта'\n  },\n  xWeeks: {\n    one: '1 апта',\n    other: '{{count}} апта'\n  },\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'шамамен {{count}} ай',\n      singularGenitive: 'шамамен {{count}} ай',\n      pluralGenitive: 'шамамен {{count}} ай'\n    },\n    future: {\n      singularNominative: 'шамамен {{count}} айдан кейін',\n      singularGenitive: 'шамамен {{count}} айдан кейін',\n      pluralGenitive: 'шамамен {{count}} айдан кейін'\n    }\n  }),\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} ай',\n      singularGenitive: '{{count}} ай',\n      pluralGenitive: '{{count}} ай'\n    }\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'шамамен {{count}} жыл',\n      singularGenitive: 'шамамен {{count}} жыл',\n      pluralGenitive: 'шамамен {{count}} жыл'\n    },\n    future: {\n      singularNominative: 'шамамен {{count}} жылдан кейін',\n      singularGenitive: 'шамамен {{count}} жылдан кейін',\n      pluralGenitive: 'шамамен {{count}} жылдан кейін'\n    }\n  }),\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} жыл',\n      singularGenitive: '{{count}} жыл',\n      pluralGenitive: '{{count}} жыл'\n    },\n    future: {\n      singularNominative: '{{count}} жылдан кейін',\n      singularGenitive: '{{count}} жылдан кейін',\n      pluralGenitive: '{{count}} жылдан кейін'\n    }\n  }),\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} жылдан астам',\n      singularGenitive: '{{count}} жылдан астам',\n      pluralGenitive: '{{count}} жылдан астам'\n    },\n    future: {\n      singularNominative: '{{count}} жылдан астам',\n      singularGenitive: '{{count}} жылдан астам',\n      pluralGenitive: '{{count}} жылдан астам'\n    }\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} жылға жақын',\n      singularGenitive: '{{count}} жылға жақын',\n      pluralGenitive: '{{count}} жылға жақын'\n    },\n    future: {\n      singularNominative: '{{count}} жылдан кейін',\n      singularGenitive: '{{count}} жылдан кейін',\n      pluralGenitive: '{{count}} жылдан кейін'\n    }\n  })\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}