{"ast":null,"code":"import set from 'lodash/set';\nimport unset from 'lodash/unset';\nimport get from 'lodash/get';\n/**\n * Store using memory\n *\n * @example\n *\n * import { memoryStore } from 'react-admin';\n *\n * const App = () => (\n *    <Admin store={memoryStore()}>\n *       ...\n *   </Admin>\n * );\n */\n\nexport var memoryStore = function (storage) {\n  if (storage === void 0) {\n    storage = {};\n  }\n\n  var subscriptions = {};\n\n  var publish = function (key, value) {\n    Object.keys(subscriptions).forEach(function (id) {\n      if (!subscriptions[id]) return; // may happen if a component unmounts after a first subscriber was notified\n\n      if (subscriptions[id].key === key) {\n        subscriptions[id].callback(value);\n      }\n    });\n  };\n\n  return {\n    setup: function () {},\n    teardown: function () {\n      Object.keys(storage).forEach(function (key) {\n        return delete storage[key];\n      });\n    },\n    getItem: function (key, defaultValue) {\n      return get(storage, key, defaultValue);\n    },\n    setItem: function (key, value) {\n      set(storage, key, value);\n      publish(key, value);\n    },\n    removeItem: function (key) {\n      unset(storage, key);\n      publish(key, undefined);\n    },\n    reset: function () {\n      Object.keys(storage).forEach(function (key) {\n        unset(storage, key);\n        publish(key, undefined);\n      });\n    },\n    subscribe: function (key, callback) {\n      var id = Math.random().toString();\n      subscriptions[id] = {\n        key: key,\n        callback: callback\n      };\n      return function () {\n        delete subscriptions[id];\n      };\n    }\n  };\n};","map":{"version":3,"names":["set","unset","get","memoryStore","storage","subscriptions","publish","key","value","Object","keys","forEach","id","callback","setup","teardown","getItem","defaultValue","setItem","removeItem","undefined","reset","subscribe","Math","random","toString"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/store/memoryStore.js"],"sourcesContent":["import set from 'lodash/set';\nimport unset from 'lodash/unset';\nimport get from 'lodash/get';\n/**\n * Store using memory\n *\n * @example\n *\n * import { memoryStore } from 'react-admin';\n *\n * const App = () => (\n *    <Admin store={memoryStore()}>\n *       ...\n *   </Admin>\n * );\n */\nexport var memoryStore = function (storage) {\n    if (storage === void 0) { storage = {}; }\n    var subscriptions = {};\n    var publish = function (key, value) {\n        Object.keys(subscriptions).forEach(function (id) {\n            if (!subscriptions[id])\n                return; // may happen if a component unmounts after a first subscriber was notified\n            if (subscriptions[id].key === key) {\n                subscriptions[id].callback(value);\n            }\n        });\n    };\n    return {\n        setup: function () { },\n        teardown: function () {\n            Object.keys(storage).forEach(function (key) { return delete storage[key]; });\n        },\n        getItem: function (key, defaultValue) {\n            return get(storage, key, defaultValue);\n        },\n        setItem: function (key, value) {\n            set(storage, key, value);\n            publish(key, value);\n        },\n        removeItem: function (key) {\n            unset(storage, key);\n            publish(key, undefined);\n        },\n        reset: function () {\n            Object.keys(storage).forEach(function (key) {\n                unset(storage, key);\n                publish(key, undefined);\n            });\n        },\n        subscribe: function (key, callback) {\n            var id = Math.random().toString();\n            subscriptions[id] = {\n                key: key,\n                callback: callback,\n            };\n            return function () {\n                delete subscriptions[id];\n            };\n        },\n    };\n};\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,WAAW,GAAG,UAAUC,OAAV,EAAmB;EACxC,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAG,EAAV;EAAe;;EACzC,IAAIC,aAAa,GAAG,EAApB;;EACA,IAAIC,OAAO,GAAG,UAAUC,GAAV,EAAeC,KAAf,EAAsB;IAChCC,MAAM,CAACC,IAAP,CAAYL,aAAZ,EAA2BM,OAA3B,CAAmC,UAAUC,EAAV,EAAc;MAC7C,IAAI,CAACP,aAAa,CAACO,EAAD,CAAlB,EACI,OAFyC,CAEjC;;MACZ,IAAIP,aAAa,CAACO,EAAD,CAAb,CAAkBL,GAAlB,KAA0BA,GAA9B,EAAmC;QAC/BF,aAAa,CAACO,EAAD,CAAb,CAAkBC,QAAlB,CAA2BL,KAA3B;MACH;IACJ,CAND;EAOH,CARD;;EASA,OAAO;IACHM,KAAK,EAAE,YAAY,CAAG,CADnB;IAEHC,QAAQ,EAAE,YAAY;MAClBN,MAAM,CAACC,IAAP,CAAYN,OAAZ,EAAqBO,OAArB,CAA6B,UAAUJ,GAAV,EAAe;QAAE,OAAO,OAAOH,OAAO,CAACG,GAAD,CAArB;MAA6B,CAA3E;IACH,CAJE;IAKHS,OAAO,EAAE,UAAUT,GAAV,EAAeU,YAAf,EAA6B;MAClC,OAAOf,GAAG,CAACE,OAAD,EAAUG,GAAV,EAAeU,YAAf,CAAV;IACH,CAPE;IAQHC,OAAO,EAAE,UAAUX,GAAV,EAAeC,KAAf,EAAsB;MAC3BR,GAAG,CAACI,OAAD,EAAUG,GAAV,EAAeC,KAAf,CAAH;MACAF,OAAO,CAACC,GAAD,EAAMC,KAAN,CAAP;IACH,CAXE;IAYHW,UAAU,EAAE,UAAUZ,GAAV,EAAe;MACvBN,KAAK,CAACG,OAAD,EAAUG,GAAV,CAAL;MACAD,OAAO,CAACC,GAAD,EAAMa,SAAN,CAAP;IACH,CAfE;IAgBHC,KAAK,EAAE,YAAY;MACfZ,MAAM,CAACC,IAAP,CAAYN,OAAZ,EAAqBO,OAArB,CAA6B,UAAUJ,GAAV,EAAe;QACxCN,KAAK,CAACG,OAAD,EAAUG,GAAV,CAAL;QACAD,OAAO,CAACC,GAAD,EAAMa,SAAN,CAAP;MACH,CAHD;IAIH,CArBE;IAsBHE,SAAS,EAAE,UAAUf,GAAV,EAAeM,QAAf,EAAyB;MAChC,IAAID,EAAE,GAAGW,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAT;MACApB,aAAa,CAACO,EAAD,CAAb,GAAoB;QAChBL,GAAG,EAAEA,GADW;QAEhBM,QAAQ,EAAEA;MAFM,CAApB;MAIA,OAAO,YAAY;QACf,OAAOR,aAAa,CAACO,EAAD,CAApB;MACH,CAFD;IAGH;EA/BE,CAAP;AAiCH,CA7CM"},"metadata":{},"sourceType":"module"}