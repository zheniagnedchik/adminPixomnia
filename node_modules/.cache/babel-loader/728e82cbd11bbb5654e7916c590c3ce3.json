{"ast":null,"code":"const authProvider = {\n  checkAuth: () => {\n    const role = localStorage.getItem(\"role\");\n    return role ? Promise.resolve() : Promise.reject();\n  },\n  login: _ref => {\n    let {\n      role\n    } = _ref;\n    localStorage.setItem(\"role\", role);\n    return Promise.resolve();\n  },\n  logout: () => {\n    localStorage.removeItem(\"role\");\n    return Promise.resolve();\n  },\n  checkError: () => Promise.resolve(),\n  getIdentity: () => {\n    const role = localStorage.getItem(\"role\");\n    return Promise.resolve({\n      id: role,\n      fullName: {\n        accountant: \"Accountant\",\n        contentEditor: \"Content Editor\",\n        stockManager: \"Stock manager\",\n        administrator: \"Administrator\"\n      }[role]\n    });\n  },\n  getPermissions: () => {\n    const role = localStorage.getItem(\"role\");\n    return Promise.resolve(getPermissionsFromRoles({\n      roleDefinitions: roles,\n      userRoles: [role]\n    }));\n  },\n  getRoles: () => Promise.resolve(roles)\n};\nexport default authProvider;","map":{"version":3,"names":["authProvider","checkAuth","role","localStorage","getItem","Promise","resolve","reject","login","setItem","logout","removeItem","checkError","getIdentity","id","fullName","accountant","contentEditor","stockManager","administrator","getPermissions","getPermissionsFromRoles","roleDefinitions","roles","userRoles","getRoles"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/src/Utils/authProvider.js"],"sourcesContent":["const authProvider = {\n  checkAuth: () => {\n    const role = localStorage.getItem(\"role\");\n    return role ? Promise.resolve() : Promise.reject();\n  },\n  login: ({ role }) => {\n    localStorage.setItem(\"role\", role);\n    return Promise.resolve();\n  },\n  logout: () => {\n    localStorage.removeItem(\"role\");\n    return Promise.resolve();\n  },\n  checkError: () => Promise.resolve(),\n  getIdentity: () => {\n    const role = localStorage.getItem(\"role\");\n    return Promise.resolve({\n      id: role,\n      fullName: {\n        accountant: \"Accountant\",\n        contentEditor: \"Content Editor\",\n        stockManager: \"Stock manager\",\n        administrator: \"Administrator\",\n      }[role],\n    });\n  },\n  getPermissions: () => {\n    const role = localStorage.getItem(\"role\");\n    return Promise.resolve(\n      getPermissionsFromRoles({\n        roleDefinitions: roles,\n        userRoles: [role],\n      })\n    );\n  },\n  getRoles: () => Promise.resolve(roles),\n};\n\nexport default authProvider;\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,SAAS,EAAE,MAAM;IACf,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;IACA,OAAOF,IAAI,GAAGG,OAAO,CAACC,OAAR,EAAH,GAAuBD,OAAO,CAACE,MAAR,EAAlC;EACD,CAJkB;EAKnBC,KAAK,EAAE,QAAc;IAAA,IAAb;MAAEN;IAAF,CAAa;IACnBC,YAAY,CAACM,OAAb,CAAqB,MAArB,EAA6BP,IAA7B;IACA,OAAOG,OAAO,CAACC,OAAR,EAAP;EACD,CARkB;EASnBI,MAAM,EAAE,MAAM;IACZP,YAAY,CAACQ,UAAb,CAAwB,MAAxB;IACA,OAAON,OAAO,CAACC,OAAR,EAAP;EACD,CAZkB;EAanBM,UAAU,EAAE,MAAMP,OAAO,CAACC,OAAR,EAbC;EAcnBO,WAAW,EAAE,MAAM;IACjB,MAAMX,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;IACA,OAAOC,OAAO,CAACC,OAAR,CAAgB;MACrBQ,EAAE,EAAEZ,IADiB;MAErBa,QAAQ,EAAE;QACRC,UAAU,EAAE,YADJ;QAERC,aAAa,EAAE,gBAFP;QAGRC,YAAY,EAAE,eAHN;QAIRC,aAAa,EAAE;MAJP,EAKRjB,IALQ;IAFW,CAAhB,CAAP;EASD,CAzBkB;EA0BnBkB,cAAc,EAAE,MAAM;IACpB,MAAMlB,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;IACA,OAAOC,OAAO,CAACC,OAAR,CACLe,uBAAuB,CAAC;MACtBC,eAAe,EAAEC,KADK;MAEtBC,SAAS,EAAE,CAACtB,IAAD;IAFW,CAAD,CADlB,CAAP;EAMD,CAlCkB;EAmCnBuB,QAAQ,EAAE,MAAMpB,OAAO,CAACC,OAAR,CAAgBiB,KAAhB;AAnCG,CAArB;AAsCA,eAAevB,YAAf"},"metadata":{},"sourceType":"module"}