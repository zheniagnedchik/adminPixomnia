{"ast":null,"code":"import { useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useNotificationContext } from '../notification';\nimport { useBasename } from '../routing';\nimport useAuthProvider, { defaultAuthParams } from './useAuthProvider';\nimport { removeDoubleSlashes } from '../routing/useCreatePath';\n/**\n * Get a callback for calling the authProvider.login() method\n * and redirect to the previous authenticated page (or the home page) on success.\n *\n * @see useAuthProvider\n *\n * @returns {Function} login callback\n *\n * @example\n *\n * import { useLogin } from 'react-admin';\n *\n * const LoginButton = () => {\n *     const [loading, setLoading] = useState(false);\n *     const login = useLogin();\n *     const handleClick = {\n *         setLoading(true);\n *         login({ username: 'john', password: 'p@ssw0rd' }, '/posts')\n *             .then(() => setLoading(false));\n *     }\n *     return <button onClick={handleClick}>Login</button>;\n * }\n */\n\nvar useLogin = function () {\n  var authProvider = useAuthProvider();\n  var location = useLocation();\n  var locationState = location.state;\n  var navigate = useNavigate();\n  var basename = useBasename();\n  var resetNotifications = useNotificationContext().resetNotifications;\n  var nextPathName = locationState && locationState.nextPathname;\n  var nextSearch = locationState && locationState.nextSearch;\n  var afterLoginUrl = removeDoubleSlashes(\"\".concat(basename, \"/\").concat(defaultAuthParams.afterLoginUrl));\n  var login = useCallback(function (params, pathName) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    return authProvider.login(params).then(function (ret) {\n      resetNotifications();\n      var redirectUrl = pathName ? pathName : nextPathName + nextSearch || afterLoginUrl;\n      navigate(redirectUrl);\n      return ret;\n    });\n  }, [authProvider, navigate, nextPathName, nextSearch, resetNotifications, afterLoginUrl]);\n  var loginWithoutProvider = useCallback(function (_, __) {\n    resetNotifications();\n    navigate(afterLoginUrl);\n    return Promise.resolve();\n  }, [navigate, resetNotifications, afterLoginUrl]);\n  return authProvider ? login : loginWithoutProvider;\n};\n\nexport default useLogin;","map":{"version":3,"names":["useCallback","useLocation","useNavigate","useNotificationContext","useBasename","useAuthProvider","defaultAuthParams","removeDoubleSlashes","useLogin","authProvider","location","locationState","state","navigate","basename","resetNotifications","nextPathName","nextPathname","nextSearch","afterLoginUrl","concat","login","params","pathName","then","ret","redirectUrl","loginWithoutProvider","_","__","Promise","resolve"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/auth/useLogin.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useNotificationContext } from '../notification';\nimport { useBasename } from '../routing';\nimport useAuthProvider, { defaultAuthParams } from './useAuthProvider';\nimport { removeDoubleSlashes } from '../routing/useCreatePath';\n/**\n * Get a callback for calling the authProvider.login() method\n * and redirect to the previous authenticated page (or the home page) on success.\n *\n * @see useAuthProvider\n *\n * @returns {Function} login callback\n *\n * @example\n *\n * import { useLogin } from 'react-admin';\n *\n * const LoginButton = () => {\n *     const [loading, setLoading] = useState(false);\n *     const login = useLogin();\n *     const handleClick = {\n *         setLoading(true);\n *         login({ username: 'john', password: 'p@ssw0rd' }, '/posts')\n *             .then(() => setLoading(false));\n *     }\n *     return <button onClick={handleClick}>Login</button>;\n * }\n */\nvar useLogin = function () {\n    var authProvider = useAuthProvider();\n    var location = useLocation();\n    var locationState = location.state;\n    var navigate = useNavigate();\n    var basename = useBasename();\n    var resetNotifications = useNotificationContext().resetNotifications;\n    var nextPathName = locationState && locationState.nextPathname;\n    var nextSearch = locationState && locationState.nextSearch;\n    var afterLoginUrl = removeDoubleSlashes(\"\".concat(basename, \"/\").concat(defaultAuthParams.afterLoginUrl));\n    var login = useCallback(function (params, pathName) {\n        if (params === void 0) { params = {}; }\n        return authProvider.login(params).then(function (ret) {\n            resetNotifications();\n            var redirectUrl = pathName\n                ? pathName\n                : nextPathName + nextSearch || afterLoginUrl;\n            navigate(redirectUrl);\n            return ret;\n        });\n    }, [\n        authProvider,\n        navigate,\n        nextPathName,\n        nextSearch,\n        resetNotifications,\n        afterLoginUrl,\n    ]);\n    var loginWithoutProvider = useCallback(function (_, __) {\n        resetNotifications();\n        navigate(afterLoginUrl);\n        return Promise.resolve();\n    }, [navigate, resetNotifications, afterLoginUrl]);\n    return authProvider ? login : loginWithoutProvider;\n};\nexport default useLogin;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,SAASC,sBAAT,QAAuC,iBAAvC;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,eAAP,IAA0BC,iBAA1B,QAAmD,mBAAnD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAG,YAAY;EACvB,IAAIC,YAAY,GAAGJ,eAAe,EAAlC;EACA,IAAIK,QAAQ,GAAGT,WAAW,EAA1B;EACA,IAAIU,aAAa,GAAGD,QAAQ,CAACE,KAA7B;EACA,IAAIC,QAAQ,GAAGX,WAAW,EAA1B;EACA,IAAIY,QAAQ,GAAGV,WAAW,EAA1B;EACA,IAAIW,kBAAkB,GAAGZ,sBAAsB,GAAGY,kBAAlD;EACA,IAAIC,YAAY,GAAGL,aAAa,IAAIA,aAAa,CAACM,YAAlD;EACA,IAAIC,UAAU,GAAGP,aAAa,IAAIA,aAAa,CAACO,UAAhD;EACA,IAAIC,aAAa,GAAGZ,mBAAmB,CAAC,GAAGa,MAAH,CAAUN,QAAV,EAAoB,GAApB,EAAyBM,MAAzB,CAAgCd,iBAAiB,CAACa,aAAlD,CAAD,CAAvC;EACA,IAAIE,KAAK,GAAGrB,WAAW,CAAC,UAAUsB,MAAV,EAAkBC,QAAlB,EAA4B;IAChD,IAAID,MAAM,KAAK,KAAK,CAApB,EAAuB;MAAEA,MAAM,GAAG,EAAT;IAAc;;IACvC,OAAOb,YAAY,CAACY,KAAb,CAAmBC,MAAnB,EAA2BE,IAA3B,CAAgC,UAAUC,GAAV,EAAe;MAClDV,kBAAkB;MAClB,IAAIW,WAAW,GAAGH,QAAQ,GACpBA,QADoB,GAEpBP,YAAY,GAAGE,UAAf,IAA6BC,aAFnC;MAGAN,QAAQ,CAACa,WAAD,CAAR;MACA,OAAOD,GAAP;IACH,CAPM,CAAP;EAQH,CAVsB,EAUpB,CACChB,YADD,EAECI,QAFD,EAGCG,YAHD,EAICE,UAJD,EAKCH,kBALD,EAMCI,aAND,CAVoB,CAAvB;EAkBA,IAAIQ,oBAAoB,GAAG3B,WAAW,CAAC,UAAU4B,CAAV,EAAaC,EAAb,EAAiB;IACpDd,kBAAkB;IAClBF,QAAQ,CAACM,aAAD,CAAR;IACA,OAAOW,OAAO,CAACC,OAAR,EAAP;EACH,CAJqC,EAInC,CAAClB,QAAD,EAAWE,kBAAX,EAA+BI,aAA/B,CAJmC,CAAtC;EAKA,OAAOV,YAAY,GAAGY,KAAH,GAAWM,oBAA9B;AACH,CAlCD;;AAmCA,eAAenB,QAAf"},"metadata":{},"sourceType":"module"}