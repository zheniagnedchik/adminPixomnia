{"ast":null,"code":"import { useMemo } from 'react';\nimport { useI18nProvider } from './useI18nProvider';\n/**\n * A hook that gets the available locales from the i18nProvider.\n * @example\n *\n * import { useLocales } from 'react-admin';\n *\n * const LocaleSelector = () => {\n *     const locales = useLocales();\n *     const [currentLocale, setCurrentLocale] = useLocaleState();\n *\n *     return (\n *         <select onChange={event => setCurrentLocale(event.target.value)}>\n *             {locales.map(locale => (\n *                 <option key={locale.locale} value={locale.locale}>\n *                     {locale.name}\n *                 </option>\n *             )}\n *         </select>\n *     );\n * }\n */\n\nexport var useLocales = function (options) {\n  var _a;\n\n  var i18nProvider = useI18nProvider();\n  var locales = useMemo(function () {\n    return (i18nProvider === null || i18nProvider === void 0 ? void 0 : i18nProvider.getLocales) ? i18nProvider === null || i18nProvider === void 0 ? void 0 : i18nProvider.getLocales() : [];\n  }, [i18nProvider]);\n  return (_a = options === null || options === void 0 ? void 0 : options.locales) !== null && _a !== void 0 ? _a : locales;\n};","map":{"version":3,"names":["useMemo","useI18nProvider","useLocales","options","_a","i18nProvider","locales","getLocales"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/i18n/useLocales.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { useI18nProvider } from './useI18nProvider';\n/**\n * A hook that gets the available locales from the i18nProvider.\n * @example\n *\n * import { useLocales } from 'react-admin';\n *\n * const LocaleSelector = () => {\n *     const locales = useLocales();\n *     const [currentLocale, setCurrentLocale] = useLocaleState();\n *\n *     return (\n *         <select onChange={event => setCurrentLocale(event.target.value)}>\n *             {locales.map(locale => (\n *                 <option key={locale.locale} value={locale.locale}>\n *                     {locale.name}\n *                 </option>\n *             )}\n *         </select>\n *     );\n * }\n */\nexport var useLocales = function (options) {\n    var _a;\n    var i18nProvider = useI18nProvider();\n    var locales = useMemo(function () { return ((i18nProvider === null || i18nProvider === void 0 ? void 0 : i18nProvider.getLocales) ? i18nProvider === null || i18nProvider === void 0 ? void 0 : i18nProvider.getLocales() : []); }, [i18nProvider]);\n    return (_a = options === null || options === void 0 ? void 0 : options.locales) !== null && _a !== void 0 ? _a : locales;\n};\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,UAAU,GAAG,UAAUC,OAAV,EAAmB;EACvC,IAAIC,EAAJ;;EACA,IAAIC,YAAY,GAAGJ,eAAe,EAAlC;EACA,IAAIK,OAAO,GAAGN,OAAO,CAAC,YAAY;IAAE,OAAQ,CAACK,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACE,UAA1E,IAAwFF,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACE,UAAb,EAApJ,GAAgL,EAAxL;EAA8L,CAA7M,EAA+M,CAACF,YAAD,CAA/M,CAArB;EACA,OAAO,CAACD,EAAE,GAAGD,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACG,OAAhE,MAA6E,IAA7E,IAAqFF,EAAE,KAAK,KAAK,CAAjG,GAAqGA,EAArG,GAA0GE,OAAjH;AACH,CALM"},"metadata":{},"sourceType":"module"}