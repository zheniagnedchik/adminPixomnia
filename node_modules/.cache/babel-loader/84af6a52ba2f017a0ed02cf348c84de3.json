{"ast":null,"code":"import inflection from 'inflection';\n/**\n * Returns an array of arguments to use with the translate function for the label of a field.\n * The label will be the one specified by the label prop or one computed from the resource and source props.\n *\n * Usage:\n *  <span>\n *      {translate(...getFieldLabelTranslationArgs({ label, resource, source }))}\n *  </span>\n *\n * @see useTranslateLabel for a ready-to-use hook\n */\n\nexport default (function (options) {\n  if (!options) return [''];\n  var label = options.label,\n      prefix = options.prefix,\n      resource = options.resource,\n      resourceFromContext = options.resourceFromContext,\n      source = options.source;\n  if (typeof label !== 'undefined') return [label, {\n    _: label\n  }];\n  if (typeof source === 'undefined') return [''];\n\n  var _a = getSourceParts(source),\n      sourceWithoutDigits = _a.sourceWithoutDigits,\n      sourceSuffix = _a.sourceSuffix;\n\n  var defaultLabel = inflection.transform(sourceSuffix.replace(/\\./g, ' '), ['underscore', 'humanize']);\n\n  if (resource) {\n    return [\"resources.\".concat(resource, \".fields.\").concat(sourceWithoutDigits), {\n      _: defaultLabel\n    }];\n  }\n\n  if (prefix) {\n    return [\"\".concat(prefix, \".\").concat(sourceWithoutDigits), {\n      _: defaultLabel\n    }];\n  }\n\n  return [\"resources.\".concat(resourceFromContext, \".fields.\").concat(sourceWithoutDigits), {\n    _: defaultLabel\n  }];\n});\n/**\n * Uses the source string to guess a translation message and a default label.\n *\n * @example\n * getSourceParts('pictures') // { sourceWithoutDigits: 'pictures', sourceSuffix: 'pictures' }\n * getSourceParts('pictures.url') // { sourceWithoutDigits: 'pictures.url', sourceSuffix: 'pictures.url' }\n * getSourceParts('pictures.0.url') // { sourceWithoutDigits: 'pictures.url', sourceSuffix: 'url' }\n * getSourceParts('pictures.12.urls.5.protocol') // { sourceWithoutDigits: 'pictures.urls.protocol', sourceSuffix: 'protocol' }\n */\n\nvar getSourceParts = function (source) {\n  // remove digits, e.g. 'book.authors.2.categories.3.identifier.name' => 'book.authors.categories.identifier.name'\n  var sourceWithoutDigits = source.replace(/\\.\\d+\\./g, '.'); // get final part, e.g. 'book.authors.2.categories.3.identifier.name' => 'identifier.name'\n  // we're not using a regexp here to avoid code sacnning alert \"Polynomial regular expression used on uncontrolled data\"\n\n  var parts = source.split('.');\n  var lastPartWithDigits;\n  parts.forEach(function (part, index) {\n    if (onlyDigits(part)) {\n      lastPartWithDigits = index;\n    }\n  });\n  var sourceSuffix = lastPartWithDigits != null ? parts.slice(lastPartWithDigits + 1).join('.') : source;\n  return {\n    sourceWithoutDigits: sourceWithoutDigits,\n    sourceSuffix: sourceSuffix\n  };\n}; // 48 and 57 are the char codes for \"0\" and \"9\", respectively\n\n\nvar onlyDigits = function (s) {\n  for (var i = s.length - 1; i >= 0; i--) {\n    var d = s.charCodeAt(i);\n    if (d < 48 || d > 57) return false;\n  }\n\n  return true;\n};","map":{"version":3,"names":["inflection","options","label","prefix","resource","resourceFromContext","source","_","_a","getSourceParts","sourceWithoutDigits","sourceSuffix","defaultLabel","transform","replace","concat","parts","split","lastPartWithDigits","forEach","part","index","onlyDigits","slice","join","s","i","length","d","charCodeAt"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/util/getFieldLabelTranslationArgs.js"],"sourcesContent":["import inflection from 'inflection';\n/**\n * Returns an array of arguments to use with the translate function for the label of a field.\n * The label will be the one specified by the label prop or one computed from the resource and source props.\n *\n * Usage:\n *  <span>\n *      {translate(...getFieldLabelTranslationArgs({ label, resource, source }))}\n *  </span>\n *\n * @see useTranslateLabel for a ready-to-use hook\n */\nexport default (function (options) {\n    if (!options)\n        return [''];\n    var label = options.label, prefix = options.prefix, resource = options.resource, resourceFromContext = options.resourceFromContext, source = options.source;\n    if (typeof label !== 'undefined')\n        return [label, { _: label }];\n    if (typeof source === 'undefined')\n        return [''];\n    var _a = getSourceParts(source), sourceWithoutDigits = _a.sourceWithoutDigits, sourceSuffix = _a.sourceSuffix;\n    var defaultLabel = inflection.transform(sourceSuffix.replace(/\\./g, ' '), ['underscore', 'humanize']);\n    if (resource) {\n        return [\n            \"resources.\".concat(resource, \".fields.\").concat(sourceWithoutDigits),\n            { _: defaultLabel },\n        ];\n    }\n    if (prefix) {\n        return [\"\".concat(prefix, \".\").concat(sourceWithoutDigits), { _: defaultLabel }];\n    }\n    return [\n        \"resources.\".concat(resourceFromContext, \".fields.\").concat(sourceWithoutDigits),\n        { _: defaultLabel },\n    ];\n});\n/**\n * Uses the source string to guess a translation message and a default label.\n *\n * @example\n * getSourceParts('pictures') // { sourceWithoutDigits: 'pictures', sourceSuffix: 'pictures' }\n * getSourceParts('pictures.url') // { sourceWithoutDigits: 'pictures.url', sourceSuffix: 'pictures.url' }\n * getSourceParts('pictures.0.url') // { sourceWithoutDigits: 'pictures.url', sourceSuffix: 'url' }\n * getSourceParts('pictures.12.urls.5.protocol') // { sourceWithoutDigits: 'pictures.urls.protocol', sourceSuffix: 'protocol' }\n */\nvar getSourceParts = function (source) {\n    // remove digits, e.g. 'book.authors.2.categories.3.identifier.name' => 'book.authors.categories.identifier.name'\n    var sourceWithoutDigits = source.replace(/\\.\\d+\\./g, '.');\n    // get final part, e.g. 'book.authors.2.categories.3.identifier.name' => 'identifier.name'\n    // we're not using a regexp here to avoid code sacnning alert \"Polynomial regular expression used on uncontrolled data\"\n    var parts = source.split('.');\n    var lastPartWithDigits;\n    parts.forEach(function (part, index) {\n        if (onlyDigits(part)) {\n            lastPartWithDigits = index;\n        }\n    });\n    var sourceSuffix = lastPartWithDigits != null\n        ? parts.slice(lastPartWithDigits + 1).join('.')\n        : source;\n    return { sourceWithoutDigits: sourceWithoutDigits, sourceSuffix: sourceSuffix };\n};\n// 48 and 57 are the char codes for \"0\" and \"9\", respectively\nvar onlyDigits = function (s) {\n    for (var i = s.length - 1; i >= 0; i--) {\n        var d = s.charCodeAt(i);\n        if (d < 48 || d > 57)\n            return false;\n    }\n    return true;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}