{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { ToggleButton } from '@mui/material';\nimport FormatQuote from '@mui/icons-material/FormatQuote';\nimport { useTranslate } from 'ra-core';\nimport { useTiptapEditor } from '../useTiptapEditor';\nexport var QuoteButtons = function (props) {\n  var editor = useTiptapEditor();\n  var translate = useTranslate();\n\n  var _a = useState(false),\n      isActive = _a[0],\n      setIsActive = _a[1];\n\n  var label = translate('ra.tiptap.blockquote', {\n    _: 'Blockquote'\n  });\n  useEffect(function () {\n    var handleUpdate = function () {\n      setIsActive(editor && editor.isActive('blockquote'));\n    };\n\n    if (editor) {\n      editor.on('update', handleUpdate);\n      editor.on('selectionUpdate', handleUpdate);\n    }\n\n    return function () {\n      if (editor) {\n        editor.off('update', handleUpdate);\n        editor.off('selectionUpdate', handleUpdate);\n      }\n    };\n  }, [editor]);\n  return React.createElement(ToggleButton, __assign({\n    \"aria-label\": label,\n    title: label\n  }, props, {\n    disabled: !(editor === null || editor === void 0 ? void 0 : editor.isEditable),\n    onClick: function () {\n      return editor.chain().focus().toggleBlockquote().run();\n    },\n    selected: isActive,\n    value: \"quote\"\n  }), React.createElement(FormatQuote, {\n    fontSize: \"inherit\"\n  }));\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useEffect","useState","ToggleButton","FormatQuote","useTranslate","useTiptapEditor","QuoteButtons","props","editor","translate","_a","isActive","setIsActive","label","_","handleUpdate","on","off","createElement","title","disabled","isEditable","onClick","chain","focus","toggleBlockquote","run","selected","value","fontSize"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-input-rich-text/dist/esm/buttons/QuoteButtons.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { ToggleButton } from '@mui/material';\nimport FormatQuote from '@mui/icons-material/FormatQuote';\nimport { useTranslate } from 'ra-core';\nimport { useTiptapEditor } from '../useTiptapEditor';\nexport var QuoteButtons = function (props) {\n    var editor = useTiptapEditor();\n    var translate = useTranslate();\n    var _a = useState(false), isActive = _a[0], setIsActive = _a[1];\n    var label = translate('ra.tiptap.blockquote', {\n        _: 'Blockquote',\n    });\n    useEffect(function () {\n        var handleUpdate = function () {\n            setIsActive(editor && editor.isActive('blockquote'));\n        };\n        if (editor) {\n            editor.on('update', handleUpdate);\n            editor.on('selectionUpdate', handleUpdate);\n        }\n        return function () {\n            if (editor) {\n                editor.off('update', handleUpdate);\n                editor.off('selectionUpdate', handleUpdate);\n            }\n        };\n    }, [editor]);\n    return (React.createElement(ToggleButton, __assign({ \"aria-label\": label, title: label }, props, { disabled: !(editor === null || editor === void 0 ? void 0 : editor.isEditable), onClick: function () { return editor.chain().focus().toggleBlockquote().run(); }, selected: isActive, value: \"quote\" }),\n        React.createElement(FormatQuote, { fontSize: \"inherit\" })));\n};\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;IACpC,KAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;MACA,KAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IACP;;IACD,OAAON,CAAP;EACH,CAPD;;EAQA,OAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKO,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,OAAO,IAAIC,YAAY,GAAG,UAAUC,KAAV,EAAiB;EACvC,IAAIC,MAAM,GAAGH,eAAe,EAA5B;EACA,IAAII,SAAS,GAAGL,YAAY,EAA5B;;EACA,IAAIM,EAAE,GAAGT,QAAQ,CAAC,KAAD,CAAjB;EAAA,IAA0BU,QAAQ,GAAGD,EAAE,CAAC,CAAD,CAAvC;EAAA,IAA4CE,WAAW,GAAGF,EAAE,CAAC,CAAD,CAA5D;;EACA,IAAIG,KAAK,GAAGJ,SAAS,CAAC,sBAAD,EAAyB;IAC1CK,CAAC,EAAE;EADuC,CAAzB,CAArB;EAGAd,SAAS,CAAC,YAAY;IAClB,IAAIe,YAAY,GAAG,YAAY;MAC3BH,WAAW,CAACJ,MAAM,IAAIA,MAAM,CAACG,QAAP,CAAgB,YAAhB,CAAX,CAAX;IACH,CAFD;;IAGA,IAAIH,MAAJ,EAAY;MACRA,MAAM,CAACQ,EAAP,CAAU,QAAV,EAAoBD,YAApB;MACAP,MAAM,CAACQ,EAAP,CAAU,iBAAV,EAA6BD,YAA7B;IACH;;IACD,OAAO,YAAY;MACf,IAAIP,MAAJ,EAAY;QACRA,MAAM,CAACS,GAAP,CAAW,QAAX,EAAqBF,YAArB;QACAP,MAAM,CAACS,GAAP,CAAW,iBAAX,EAA8BF,YAA9B;MACH;IACJ,CALD;EAMH,CAdQ,EAcN,CAACP,MAAD,CAdM,CAAT;EAeA,OAAQT,KAAK,CAACmB,aAAN,CAAoBhB,YAApB,EAAkCjB,QAAQ,CAAC;IAAE,cAAc4B,KAAhB;IAAuBM,KAAK,EAAEN;EAA9B,CAAD,EAAwCN,KAAxC,EAA+C;IAAEa,QAAQ,EAAE,EAAEZ,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACa,UAAzD,CAAZ;IAAkFC,OAAO,EAAE,YAAY;MAAE,OAAOd,MAAM,CAACe,KAAP,GAAeC,KAAf,GAAuBC,gBAAvB,GAA0CC,GAA1C,EAAP;IAAyD,CAAlK;IAAoKC,QAAQ,EAAEhB,QAA9K;IAAwLiB,KAAK,EAAE;EAA/L,CAA/C,CAA1C,EACJ7B,KAAK,CAACmB,aAAN,CAAoBf,WAApB,EAAiC;IAAE0B,QAAQ,EAAE;EAAZ,CAAjC,CADI,CAAR;AAEH,CAxBM"},"metadata":{},"sourceType":"module"}