{"ast":null,"code":"import React from 'react';\nimport { notifyManager, useQueryClient } from 'react-query';\n/**\n * Get the state of the dataProvider connection.\n *\n * Returns true if a query or a mutation is pending.\n *\n * Custom implementation because react-query's useIsFetching and useIsMutating\n * render each time the number of active queries changes, which is too often.\n *\n * @see useIsFetching\n * @see useIsMutating\n */\n\nexport var useLoading = function () {\n  var client = useQueryClient();\n  var mountedRef = React.useRef(false);\n  var isFetchingRef = React.useRef(client.isFetching() > 0);\n  var isMutatingRef = React.useRef(client.isMutating() > 0);\n\n  var _a = React.useState(isFetchingRef.current || isMutatingRef.current),\n      isLoading = _a[0],\n      setIsLoading = _a[1];\n\n  React.useEffect(function () {\n    mountedRef.current = true;\n    var unsubscribeQueryCache = client.getQueryCache().subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        isFetchingRef.current = client.isFetching() > 0;\n        setIsLoading(isFetchingRef.current || isMutatingRef.current);\n      }\n    }));\n    var unsubscribeMutationCache = client.getMutationCache().subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        isMutatingRef.current = client.isMutating() > 0;\n        setIsLoading(isFetchingRef.current || isMutatingRef.current);\n      }\n    }));\n    return function () {\n      mountedRef.current = false;\n      unsubscribeQueryCache();\n      unsubscribeMutationCache();\n    };\n  }, [client]);\n  return isLoading;\n};","map":{"version":3,"names":["React","notifyManager","useQueryClient","useLoading","client","mountedRef","useRef","isFetchingRef","isFetching","isMutatingRef","isMutating","_a","useState","current","isLoading","setIsLoading","useEffect","unsubscribeQueryCache","getQueryCache","subscribe","batchCalls","unsubscribeMutationCache","getMutationCache"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/dataProvider/useLoading.js"],"sourcesContent":["import React from 'react';\nimport { notifyManager, useQueryClient } from 'react-query';\n/**\n * Get the state of the dataProvider connection.\n *\n * Returns true if a query or a mutation is pending.\n *\n * Custom implementation because react-query's useIsFetching and useIsMutating\n * render each time the number of active queries changes, which is too often.\n *\n * @see useIsFetching\n * @see useIsMutating\n */\nexport var useLoading = function () {\n    var client = useQueryClient();\n    var mountedRef = React.useRef(false);\n    var isFetchingRef = React.useRef(client.isFetching() > 0);\n    var isMutatingRef = React.useRef(client.isMutating() > 0);\n    var _a = React.useState(isFetchingRef.current || isMutatingRef.current), isLoading = _a[0], setIsLoading = _a[1];\n    React.useEffect(function () {\n        mountedRef.current = true;\n        var unsubscribeQueryCache = client.getQueryCache().subscribe(notifyManager.batchCalls(function () {\n            if (mountedRef.current) {\n                isFetchingRef.current = client.isFetching() > 0;\n                setIsLoading(isFetchingRef.current || isMutatingRef.current);\n            }\n        }));\n        var unsubscribeMutationCache = client.getMutationCache().subscribe(notifyManager.batchCalls(function () {\n            if (mountedRef.current) {\n                isMutatingRef.current = client.isMutating() > 0;\n                setIsLoading(isFetchingRef.current || isMutatingRef.current);\n            }\n        }));\n        return function () {\n            mountedRef.current = false;\n            unsubscribeQueryCache();\n            unsubscribeMutationCache();\n        };\n    }, [client]);\n    return isLoading;\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,aAA9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,UAAU,GAAG,YAAY;EAChC,IAAIC,MAAM,GAAGF,cAAc,EAA3B;EACA,IAAIG,UAAU,GAAGL,KAAK,CAACM,MAAN,CAAa,KAAb,CAAjB;EACA,IAAIC,aAAa,GAAGP,KAAK,CAACM,MAAN,CAAaF,MAAM,CAACI,UAAP,KAAsB,CAAnC,CAApB;EACA,IAAIC,aAAa,GAAGT,KAAK,CAACM,MAAN,CAAaF,MAAM,CAACM,UAAP,KAAsB,CAAnC,CAApB;;EACA,IAAIC,EAAE,GAAGX,KAAK,CAACY,QAAN,CAAeL,aAAa,CAACM,OAAd,IAAyBJ,aAAa,CAACI,OAAtD,CAAT;EAAA,IAAyEC,SAAS,GAAGH,EAAE,CAAC,CAAD,CAAvF;EAAA,IAA4FI,YAAY,GAAGJ,EAAE,CAAC,CAAD,CAA7G;;EACAX,KAAK,CAACgB,SAAN,CAAgB,YAAY;IACxBX,UAAU,CAACQ,OAAX,GAAqB,IAArB;IACA,IAAII,qBAAqB,GAAGb,MAAM,CAACc,aAAP,GAAuBC,SAAvB,CAAiClB,aAAa,CAACmB,UAAd,CAAyB,YAAY;MAC9F,IAAIf,UAAU,CAACQ,OAAf,EAAwB;QACpBN,aAAa,CAACM,OAAd,GAAwBT,MAAM,CAACI,UAAP,KAAsB,CAA9C;QACAO,YAAY,CAACR,aAAa,CAACM,OAAd,IAAyBJ,aAAa,CAACI,OAAxC,CAAZ;MACH;IACJ,CAL4D,CAAjC,CAA5B;IAMA,IAAIQ,wBAAwB,GAAGjB,MAAM,CAACkB,gBAAP,GAA0BH,SAA1B,CAAoClB,aAAa,CAACmB,UAAd,CAAyB,YAAY;MACpG,IAAIf,UAAU,CAACQ,OAAf,EAAwB;QACpBJ,aAAa,CAACI,OAAd,GAAwBT,MAAM,CAACM,UAAP,KAAsB,CAA9C;QACAK,YAAY,CAACR,aAAa,CAACM,OAAd,IAAyBJ,aAAa,CAACI,OAAxC,CAAZ;MACH;IACJ,CALkE,CAApC,CAA/B;IAMA,OAAO,YAAY;MACfR,UAAU,CAACQ,OAAX,GAAqB,KAArB;MACAI,qBAAqB;MACrBI,wBAAwB;IAC3B,CAJD;EAKH,CAnBD,EAmBG,CAACjB,MAAD,CAnBH;EAoBA,OAAOU,SAAP;AACH,CA3BM"},"metadata":{},"sourceType":"module"}