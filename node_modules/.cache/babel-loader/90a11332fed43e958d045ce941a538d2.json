{"ast":null,"code":"import { getPermissionsFromRoles } from \"@react-admin/ra-rbac\";\nconst roles = {\n  regionManager: [{\n    action: [\"list\", \"show\"],\n    resource: \"getRegions\"\n  }, {\n    action: [\"list\", \"show\"],\n    resource: \"getPrinters\"\n  }, {\n    action: [\"list\", \"show\"],\n    resource: \"getPlacesWithInfo\"\n  }, {\n    action: [\"list\", \"show\"],\n    resource: \"getEmployees\"\n  }, {\n    action: [\"list\", \"show\"],\n    resource: \"getShiftSchedule\"\n  }, {\n    action: [\"list\", \"show\"],\n    resource: \"getInventoryLogs\"\n  }, {\n    action: [\"list\", \"show\"],\n    resource: \"getCloseShiftStatistics\"\n  }, {\n    action: [\"list\", \"show\"],\n    resource: \"getOpenShiftStatistics\"\n  }, {\n    action: [\"list\", \"show\"],\n    resource: \"Schedulecalendar\"\n  }, {\n    action: [\"list\", \"show\"],\n    resource: \"getPostcards\"\n  } // { type: \"deny\", action: \"read\", resource: \"getRegions\" },\n  // { type: \"deny\", action: \"read\", resource: \"products.description\" },\n  // { action: \"list\", resource: \"categories\" },\n  // { action: \"read\", resource: \"categories.*\" },\n  // { action: [\"list\", \"show\"], resource: \"customers\" },\n  // { action: \"read\", resource: \"customers.*\" },\n  // { action: \"*\", resource: \"invoices\" },\n  ]\n};\nconst authProvider = {\n  checkAuth: () => {\n    const role = localStorage.getItem(\"role\");\n    return role ? Promise.resolve() : Promise.reject();\n  },\n  login: _ref => {\n    let {\n      role\n    } = _ref;\n    localStorage.setItem(\"role\", role);\n    return Promise.resolve();\n  },\n  logout: () => {\n    localStorage.removeItem(\"role\");\n    return Promise.resolve();\n  },\n  checkError: () => Promise.resolve(),\n  getIdentity: () => {\n    const role = localStorage.getItem(\"role\");\n    return Promise.resolve({\n      id: role,\n      fullName: {\n        accountant: \"Accountant\",\n        contentEditor: \"Content Editor\",\n        stockManager: \"Stock manager\",\n        administrator: \"Administrator\"\n      }[role]\n    });\n  },\n  getPermissions: () => {\n    const role = localStorage.getItem(\"role\");\n    console.log(role);\n    return Promise.resolve(getPermissionsFromRoles({\n      roleDefinitions: roles,\n      userRoles: [role]\n    }));\n  },\n  getRoles: () => Promise.resolve(roles)\n};\nexport default authProvider;","map":{"version":3,"names":["getPermissionsFromRoles","roles","regionManager","action","resource","authProvider","checkAuth","role","localStorage","getItem","Promise","resolve","reject","login","setItem","logout","removeItem","checkError","getIdentity","id","fullName","accountant","contentEditor","stockManager","administrator","getPermissions","console","log","roleDefinitions","userRoles","getRoles"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/src/Utils/authProvider.js"],"sourcesContent":["import { getPermissionsFromRoles } from \"@react-admin/ra-rbac\";\nconst roles = {\n  regionManager: [\n    { action: [\"list\", \"show\"], resource: \"getRegions\" },\n    { action: [\"list\", \"show\"], resource: \"getPrinters\" },\n    { action: [\"list\", \"show\"], resource: \"getPlacesWithInfo\" },\n    { action: [\"list\", \"show\"], resource: \"getEmployees\" },\n    { action: [\"list\", \"show\"], resource: \"getShiftSchedule\" },\n    { action: [\"list\", \"show\"], resource: \"getInventoryLogs\" },\n    { action: [\"list\", \"show\"], resource: \"getCloseShiftStatistics\" },\n    { action: [\"list\", \"show\"], resource: \"getOpenShiftStatistics\" },\n    { action: [\"list\", \"show\"], resource: \"Schedulecalendar\" },\n    { action: [\"list\", \"show\"], resource: \"getPostcards\" },\n\n    // { type: \"deny\", action: \"read\", resource: \"getRegions\" },\n    // { type: \"deny\", action: \"read\", resource: \"products.description\" },\n    // { action: \"list\", resource: \"categories\" },\n    // { action: \"read\", resource: \"categories.*\" },\n    // { action: [\"list\", \"show\"], resource: \"customers\" },\n    // { action: \"read\", resource: \"customers.*\" },\n    // { action: \"*\", resource: \"invoices\" },\n  ],\n};\n\nconst authProvider = {\n  checkAuth: () => {\n    const role = localStorage.getItem(\"role\");\n    return role ? Promise.resolve() : Promise.reject();\n  },\n  login: ({ role }) => {\n    localStorage.setItem(\"role\", role);\n    return Promise.resolve();\n  },\n  logout: () => {\n    localStorage.removeItem(\"role\");\n    return Promise.resolve();\n  },\n  checkError: () => Promise.resolve(),\n  getIdentity: () => {\n    const role = localStorage.getItem(\"role\");\n    return Promise.resolve({\n      id: role,\n      fullName: {\n        accountant: \"Accountant\",\n        contentEditor: \"Content Editor\",\n        stockManager: \"Stock manager\",\n        administrator: \"Administrator\",\n      }[role],\n    });\n  },\n  getPermissions: () => {\n    const role = localStorage.getItem(\"role\");\n    console.log(role);\n    return Promise.resolve(\n      getPermissionsFromRoles({\n        roleDefinitions: roles,\n        userRoles: [role],\n      })\n    );\n  },\n  getRoles: () => Promise.resolve(roles),\n};\n\nexport default authProvider;\n"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,sBAAxC;AACA,MAAMC,KAAK,GAAG;EACZC,aAAa,EAAE,CACb;IAAEC,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CAAV;IAA4BC,QAAQ,EAAE;EAAtC,CADa,EAEb;IAAED,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CAAV;IAA4BC,QAAQ,EAAE;EAAtC,CAFa,EAGb;IAAED,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CAAV;IAA4BC,QAAQ,EAAE;EAAtC,CAHa,EAIb;IAAED,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CAAV;IAA4BC,QAAQ,EAAE;EAAtC,CAJa,EAKb;IAAED,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CAAV;IAA4BC,QAAQ,EAAE;EAAtC,CALa,EAMb;IAAED,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CAAV;IAA4BC,QAAQ,EAAE;EAAtC,CANa,EAOb;IAAED,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CAAV;IAA4BC,QAAQ,EAAE;EAAtC,CAPa,EAQb;IAAED,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CAAV;IAA4BC,QAAQ,EAAE;EAAtC,CARa,EASb;IAAED,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CAAV;IAA4BC,QAAQ,EAAE;EAAtC,CATa,EAUb;IAAED,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CAAV;IAA4BC,QAAQ,EAAE;EAAtC,CAVa,CAYb;EACA;EACA;EACA;EACA;EACA;EACA;EAlBa;AADH,CAAd;AAuBA,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,MAAM;IACf,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;IACA,OAAOF,IAAI,GAAGG,OAAO,CAACC,OAAR,EAAH,GAAuBD,OAAO,CAACE,MAAR,EAAlC;EACD,CAJkB;EAKnBC,KAAK,EAAE,QAAc;IAAA,IAAb;MAAEN;IAAF,CAAa;IACnBC,YAAY,CAACM,OAAb,CAAqB,MAArB,EAA6BP,IAA7B;IACA,OAAOG,OAAO,CAACC,OAAR,EAAP;EACD,CARkB;EASnBI,MAAM,EAAE,MAAM;IACZP,YAAY,CAACQ,UAAb,CAAwB,MAAxB;IACA,OAAON,OAAO,CAACC,OAAR,EAAP;EACD,CAZkB;EAanBM,UAAU,EAAE,MAAMP,OAAO,CAACC,OAAR,EAbC;EAcnBO,WAAW,EAAE,MAAM;IACjB,MAAMX,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;IACA,OAAOC,OAAO,CAACC,OAAR,CAAgB;MACrBQ,EAAE,EAAEZ,IADiB;MAErBa,QAAQ,EAAE;QACRC,UAAU,EAAE,YADJ;QAERC,aAAa,EAAE,gBAFP;QAGRC,YAAY,EAAE,eAHN;QAIRC,aAAa,EAAE;MAJP,EAKRjB,IALQ;IAFW,CAAhB,CAAP;EASD,CAzBkB;EA0BnBkB,cAAc,EAAE,MAAM;IACpB,MAAMlB,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;IACAiB,OAAO,CAACC,GAAR,CAAYpB,IAAZ;IACA,OAAOG,OAAO,CAACC,OAAR,CACLX,uBAAuB,CAAC;MACtB4B,eAAe,EAAE3B,KADK;MAEtB4B,SAAS,EAAE,CAACtB,IAAD;IAFW,CAAD,CADlB,CAAP;EAMD,CAnCkB;EAoCnBuB,QAAQ,EAAE,MAAMpB,OAAO,CAACC,OAAR,CAAgBV,KAAhB;AApCG,CAArB;AAuCA,eAAeI,YAAf"},"metadata":{},"sourceType":"module"}