{"ast":null,"code":"import inflection from 'inflection';\nimport { useResourceDefinitions } from './useResourceDefinitions';\nimport { useTranslate } from '../i18n';\n/**\n * A hook which returns function to get a translated resource name. It will use the label option of the `Resource` component if it was provided.\n *\n * @returns {GetResourceLabel} A function which takes a resource name and an optional number indicating the number of items (used for pluralization) and returns a translated string.\n * @example\n * const Menu = () => {\n *     const resources = useResourceDefinitions();\n *     const getResourceLabel = useGetResourceLabel();\n *\n *     return (\n *         <ul>\n *             {Object.keys(resources).map(name => (\n *                 <li key={name}>\n *                     {getResourceLabel(name, 2)}\n *                 </li>\n *             ))}\n *         </ul>\n *     )\n * }\n */\n\nexport var useGetResourceLabel = function () {\n  var translate = useTranslate();\n  var definitions = useResourceDefinitions();\n  return function (resource, count) {\n    if (count === void 0) {\n      count = 2;\n    }\n\n    var resourceDefinition = definitions[resource];\n    var label = translate(\"resources.\".concat(resource, \".name\"), {\n      smart_count: count,\n      _: resourceDefinition && resourceDefinition.options && resourceDefinition.options.label ? translate(resourceDefinition.options.label, {\n        smart_count: count,\n        _: resourceDefinition.options.label\n      }) : inflection.humanize(count > 1 ? inflection.pluralize(resource) : inflection.singularize(resource))\n    });\n    return label;\n  };\n};","map":{"version":3,"names":["inflection","useResourceDefinitions","useTranslate","useGetResourceLabel","translate","definitions","resource","count","resourceDefinition","label","concat","smart_count","_","options","humanize","pluralize","singularize"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/core/useGetResourceLabel.js"],"sourcesContent":["import inflection from 'inflection';\nimport { useResourceDefinitions } from './useResourceDefinitions';\nimport { useTranslate } from '../i18n';\n/**\n * A hook which returns function to get a translated resource name. It will use the label option of the `Resource` component if it was provided.\n *\n * @returns {GetResourceLabel} A function which takes a resource name and an optional number indicating the number of items (used for pluralization) and returns a translated string.\n * @example\n * const Menu = () => {\n *     const resources = useResourceDefinitions();\n *     const getResourceLabel = useGetResourceLabel();\n *\n *     return (\n *         <ul>\n *             {Object.keys(resources).map(name => (\n *                 <li key={name}>\n *                     {getResourceLabel(name, 2)}\n *                 </li>\n *             ))}\n *         </ul>\n *     )\n * }\n */\nexport var useGetResourceLabel = function () {\n    var translate = useTranslate();\n    var definitions = useResourceDefinitions();\n    return function (resource, count) {\n        if (count === void 0) { count = 2; }\n        var resourceDefinition = definitions[resource];\n        var label = translate(\"resources.\".concat(resource, \".name\"), {\n            smart_count: count,\n            _: resourceDefinition &&\n                resourceDefinition.options &&\n                resourceDefinition.options.label\n                ? translate(resourceDefinition.options.label, {\n                    smart_count: count,\n                    _: resourceDefinition.options.label,\n                })\n                : inflection.humanize(count > 1\n                    ? inflection.pluralize(resource)\n                    : inflection.singularize(resource)),\n        });\n        return label;\n    };\n};\n"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,mBAAmB,GAAG,YAAY;EACzC,IAAIC,SAAS,GAAGF,YAAY,EAA5B;EACA,IAAIG,WAAW,GAAGJ,sBAAsB,EAAxC;EACA,OAAO,UAAUK,QAAV,EAAoBC,KAApB,EAA2B;IAC9B,IAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;MAAEA,KAAK,GAAG,CAAR;IAAY;;IACpC,IAAIC,kBAAkB,GAAGH,WAAW,CAACC,QAAD,CAApC;IACA,IAAIG,KAAK,GAAGL,SAAS,CAAC,aAAaM,MAAb,CAAoBJ,QAApB,EAA8B,OAA9B,CAAD,EAAyC;MAC1DK,WAAW,EAAEJ,KAD6C;MAE1DK,CAAC,EAAEJ,kBAAkB,IACjBA,kBAAkB,CAACK,OADpB,IAECL,kBAAkB,CAACK,OAAnB,CAA2BJ,KAF5B,GAGGL,SAAS,CAACI,kBAAkB,CAACK,OAAnB,CAA2BJ,KAA5B,EAAmC;QAC1CE,WAAW,EAAEJ,KAD6B;QAE1CK,CAAC,EAAEJ,kBAAkB,CAACK,OAAnB,CAA2BJ;MAFY,CAAnC,CAHZ,GAOGT,UAAU,CAACc,QAAX,CAAoBP,KAAK,GAAG,CAAR,GAChBP,UAAU,CAACe,SAAX,CAAqBT,QAArB,CADgB,GAEhBN,UAAU,CAACgB,WAAX,CAAuBV,QAAvB,CAFJ;IAToD,CAAzC,CAArB;IAaA,OAAOG,KAAP;EACH,CAjBD;AAkBH,CArBM"},"metadata":{},"sourceType":"module"}