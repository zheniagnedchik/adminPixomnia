{"ast":null,"code":"import isMatch from 'lodash/isMatch';\n/**\n * Checks if an array of permissions allows to execute the given action on the given resource.\n *\n * @example\n * canAccess({\n *     permissions: [\n *         { resource: 'user', action: 'read' },\n *         { resource: 'posts', action: ['read', 'edit', 'create', 'delete'] },\n *     ],\n *     action: \"edit\",\n *     resource: \"posts\"\n * }); // true\n */\n\nexport var canAccess = function (_a) {\n  var permissions = _a.permissions,\n      action = _a.action,\n      resource = _a.resource,\n      record = _a.record;\n\n  if (!permissions || permissions.length === 0) {\n    // permissions can be undefined while loading\n    return false;\n  } // if one deny permission matches, return false\n\n\n  for (var _i = 0, _b = permissions.filter(function (p) {\n    return p != null && p.type === 'deny';\n  }); _i < _b.length; _i++) {\n    var permission = _b[_i];\n\n    if (matchTarget(permission, resource, action, record)) {\n      return false;\n    }\n  } // if one allow permission matches, return true\n\n\n  for (var _c = 0, _d = permissions.filter(function (p) {\n    return p != null && p.type !== 'deny';\n  }); _c < _d.length; _c++) {\n    var permission = _d[_c];\n\n    if (matchTarget(permission, resource, action, record)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks is a permission matches a target (action, resource, record)\n *\n * @example\n * matchTarget({ resource: 'user', action: 'read' }, 'user', 'read'); // true\n * matchTarget({ resource: 'user', action: 'read' }, 'user', 'edit'); // false\n */\n\nvar matchTarget = function (permission, resource, action, record) {\n  if (permission == null || !matchWildcard(permission.resource, resource)) {\n    return false;\n  }\n\n  if (Array.isArray(permission.action) && !permission.action.includes(action)) {\n    return false;\n  }\n\n  if (typeof permission.action === 'string' && permission.action !== '*' && permission.action !== action) {\n    return false;\n  }\n\n  if (permission.record) {\n    if (!record || !isMatch(record, permission.record)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Checks if a permission matches a wildcard.\n *\n * @param permission The permission to check, e.g. 'posts.*'\n * @param resource The resource to check, e.g. 'posts'\n *\n * @example\n * matchWildCard('*', 'posts'); // true\n * matchWildCard('posts', 'posts'); // true\n * matchWildcard('posts.*', 'posts'); // true\n * matchWildcard('comments', 'posts'); // false\n */\n\n\nvar matchWildcard = function (pattern, resource) {\n  if (pattern === '*') {\n    return true;\n  }\n\n  if (pattern === resource) {\n    return true;\n  }\n\n  if (pattern.endsWith('*')) {\n    return resource.startsWith(pattern.slice(0, -1));\n  }\n\n  return false;\n};","map":{"version":3,"names":["isMatch","canAccess","_a","permissions","action","resource","record","length","_i","_b","filter","p","type","permission","matchTarget","_c","_d","matchWildcard","Array","isArray","includes","pattern","endsWith","startsWith","slice"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@react-admin/ra-rbac/esm/src/canAccess.js"],"sourcesContent":["import isMatch from 'lodash/isMatch';\n/**\n * Checks if an array of permissions allows to execute the given action on the given resource.\n *\n * @example\n * canAccess({\n *     permissions: [\n *         { resource: 'user', action: 'read' },\n *         { resource: 'posts', action: ['read', 'edit', 'create', 'delete'] },\n *     ],\n *     action: \"edit\",\n *     resource: \"posts\"\n * }); // true\n */\nexport var canAccess = function (_a) {\n    var permissions = _a.permissions, action = _a.action, resource = _a.resource, record = _a.record;\n    if (!permissions || permissions.length === 0) {\n        // permissions can be undefined while loading\n        return false;\n    }\n    // if one deny permission matches, return false\n    for (var _i = 0, _b = permissions.filter(function (p) { return p != null && p.type === 'deny'; }); _i < _b.length; _i++) {\n        var permission = _b[_i];\n        if (matchTarget(permission, resource, action, record)) {\n            return false;\n        }\n    }\n    // if one allow permission matches, return true\n    for (var _c = 0, _d = permissions.filter(function (p) { return p != null && p.type !== 'deny'; }); _c < _d.length; _c++) {\n        var permission = _d[_c];\n        if (matchTarget(permission, resource, action, record)) {\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Checks is a permission matches a target (action, resource, record)\n *\n * @example\n * matchTarget({ resource: 'user', action: 'read' }, 'user', 'read'); // true\n * matchTarget({ resource: 'user', action: 'read' }, 'user', 'edit'); // false\n */\nvar matchTarget = function (permission, resource, action, record) {\n    if (permission == null || !matchWildcard(permission.resource, resource)) {\n        return false;\n    }\n    if (Array.isArray(permission.action) &&\n        !permission.action.includes(action)) {\n        return false;\n    }\n    if (typeof permission.action === 'string' &&\n        permission.action !== '*' &&\n        permission.action !== action) {\n        return false;\n    }\n    if (permission.record) {\n        if (!record || !isMatch(record, permission.record)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Checks if a permission matches a wildcard.\n *\n * @param permission The permission to check, e.g. 'posts.*'\n * @param resource The resource to check, e.g. 'posts'\n *\n * @example\n * matchWildCard('*', 'posts'); // true\n * matchWildCard('posts', 'posts'); // true\n * matchWildcard('posts.*', 'posts'); // true\n * matchWildcard('comments', 'posts'); // false\n */\nvar matchWildcard = function (pattern, resource) {\n    if (pattern === '*') {\n        return true;\n    }\n    if (pattern === resource) {\n        return true;\n    }\n    if (pattern.endsWith('*')) {\n        return resource.startsWith(pattern.slice(0, -1));\n    }\n    return false;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}