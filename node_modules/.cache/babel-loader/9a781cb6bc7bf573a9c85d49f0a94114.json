{"ast":null,"code":"import { useContext, useEffect, useRef } from 'react';\nimport { useFormState } from 'react-hook-form';\nimport { UNSAFE_NavigationContext, useLocation } from 'react-router-dom';\nimport { useTranslate } from '../i18n';\n/**\n * Display a confirmation dialog if the form has unsaved changes.\n * - If the user confirms, the navigation continues and the changes are lost.\n * - If the user cancels, the navigation is cancelled and the changes are kept.\n */\n\nexport var useWarnWhenUnsavedChanges = function (enable, formRootPathname, control) {\n  // react-router v6 does not yet provide a way to block navigation\n  // This is planned for a future release\n  // See https://github.com/remix-run/react-router/issues/8139\n  var navigator = useContext(UNSAFE_NavigationContext).navigator;\n  var location = useLocation();\n  var translate = useTranslate();\n\n  var _a = useFormState(control ? {\n    control: control\n  } : undefined),\n      isSubmitSuccessful = _a.isSubmitSuccessful,\n      isSubmitting = _a.isSubmitting,\n      dirtyFields = _a.dirtyFields;\n\n  var isDirty = Object.keys(dirtyFields).length > 0;\n  var initialLocation = useRef(formRootPathname || location.pathname);\n  useEffect(function () {\n    if (!enable || !isDirty) return;\n    var unblock = navigator.block(function (tx) {\n      var newLocationIsInsideForm = tx.location.pathname.startsWith(initialLocation.current);\n\n      if (!isSubmitting && (newLocationIsInsideForm || isSubmitSuccessful || window.confirm(translate('ra.message.unsaved_changes')))) {\n        unblock();\n        tx.retry();\n      }\n    });\n    return unblock;\n  }, [enable, location, navigator, isDirty, isSubmitting, isSubmitSuccessful, translate]);\n};","map":{"version":3,"names":["useContext","useEffect","useRef","useFormState","UNSAFE_NavigationContext","useLocation","useTranslate","useWarnWhenUnsavedChanges","enable","formRootPathname","control","navigator","location","translate","_a","undefined","isSubmitSuccessful","isSubmitting","dirtyFields","isDirty","Object","keys","length","initialLocation","pathname","unblock","block","tx","newLocationIsInsideForm","startsWith","current","window","confirm","retry"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/form/useWarnWhenUnsavedChanges.js"],"sourcesContent":["import { useContext, useEffect, useRef } from 'react';\nimport { useFormState } from 'react-hook-form';\nimport { UNSAFE_NavigationContext, useLocation } from 'react-router-dom';\nimport { useTranslate } from '../i18n';\n/**\n * Display a confirmation dialog if the form has unsaved changes.\n * - If the user confirms, the navigation continues and the changes are lost.\n * - If the user cancels, the navigation is cancelled and the changes are kept.\n */\nexport var useWarnWhenUnsavedChanges = function (enable, formRootPathname, control) {\n    // react-router v6 does not yet provide a way to block navigation\n    // This is planned for a future release\n    // See https://github.com/remix-run/react-router/issues/8139\n    var navigator = useContext(UNSAFE_NavigationContext).navigator;\n    var location = useLocation();\n    var translate = useTranslate();\n    var _a = useFormState(control ? { control: control } : undefined), isSubmitSuccessful = _a.isSubmitSuccessful, isSubmitting = _a.isSubmitting, dirtyFields = _a.dirtyFields;\n    var isDirty = Object.keys(dirtyFields).length > 0;\n    var initialLocation = useRef(formRootPathname || location.pathname);\n    useEffect(function () {\n        if (!enable || !isDirty)\n            return;\n        var unblock = navigator.block(function (tx) {\n            var newLocationIsInsideForm = tx.location.pathname.startsWith(initialLocation.current);\n            if (!isSubmitting &&\n                (newLocationIsInsideForm ||\n                    isSubmitSuccessful ||\n                    window.confirm(translate('ra.message.unsaved_changes')))) {\n                unblock();\n                tx.retry();\n            }\n        });\n        return unblock;\n    }, [\n        enable,\n        location,\n        navigator,\n        isDirty,\n        isSubmitting,\n        isSubmitSuccessful,\n        translate,\n    ]);\n};\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,MAAhC,QAA8C,OAA9C;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,wBAAT,EAAmCC,WAAnC,QAAsD,kBAAtD;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,yBAAyB,GAAG,UAAUC,MAAV,EAAkBC,gBAAlB,EAAoCC,OAApC,EAA6C;EAChF;EACA;EACA;EACA,IAAIC,SAAS,GAAGX,UAAU,CAACI,wBAAD,CAAV,CAAqCO,SAArD;EACA,IAAIC,QAAQ,GAAGP,WAAW,EAA1B;EACA,IAAIQ,SAAS,GAAGP,YAAY,EAA5B;;EACA,IAAIQ,EAAE,GAAGX,YAAY,CAACO,OAAO,GAAG;IAAEA,OAAO,EAAEA;EAAX,CAAH,GAA0BK,SAAlC,CAArB;EAAA,IAAmEC,kBAAkB,GAAGF,EAAE,CAACE,kBAA3F;EAAA,IAA+GC,YAAY,GAAGH,EAAE,CAACG,YAAjI;EAAA,IAA+IC,WAAW,GAAGJ,EAAE,CAACI,WAAhK;;EACA,IAAIC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,MAAzB,GAAkC,CAAhD;EACA,IAAIC,eAAe,GAAGrB,MAAM,CAACO,gBAAgB,IAAIG,QAAQ,CAACY,QAA9B,CAA5B;EACAvB,SAAS,CAAC,YAAY;IAClB,IAAI,CAACO,MAAD,IAAW,CAACW,OAAhB,EACI;IACJ,IAAIM,OAAO,GAAGd,SAAS,CAACe,KAAV,CAAgB,UAAUC,EAAV,EAAc;MACxC,IAAIC,uBAAuB,GAAGD,EAAE,CAACf,QAAH,CAAYY,QAAZ,CAAqBK,UAArB,CAAgCN,eAAe,CAACO,OAAhD,CAA9B;;MACA,IAAI,CAACb,YAAD,KACCW,uBAAuB,IACpBZ,kBADH,IAEGe,MAAM,CAACC,OAAP,CAAenB,SAAS,CAAC,4BAAD,CAAxB,CAHJ,CAAJ,EAGkE;QAC9DY,OAAO;QACPE,EAAE,CAACM,KAAH;MACH;IACJ,CATa,CAAd;IAUA,OAAOR,OAAP;EACH,CAdQ,EAcN,CACCjB,MADD,EAECI,QAFD,EAGCD,SAHD,EAICQ,OAJD,EAKCF,YALD,EAMCD,kBAND,EAOCH,SAPD,CAdM,CAAT;AAuBH,CAjCM"},"metadata":{},"sourceType":"module"}