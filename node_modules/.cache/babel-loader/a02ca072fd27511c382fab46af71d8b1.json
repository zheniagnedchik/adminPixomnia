{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport { useRef } from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { useDataProvider } from './useDataProvider';\nimport undoableEventEmitter from './undoableEventEmitter';\n/**\n * Get a callback to call the dataProvider.updateMany() method, the result and the loading state.\n *\n * @param {string} resource\n * @param {Params} params The updateMany parameters { ids, data, meta }\n * @param {Object} options Options object to pass to the queryClient.\n * May include side effects to be executed upon success or failure, e.g. { onSuccess: () => { refresh(); } }\n * May include a mutation mode (optimistic/pessimistic/undoable), e.g. { mutationMode: 'undoable' }\n *\n * @typedef Params\n * @prop params.ids The resource identifiers, e.g. [123, 456]\n * @prop params.data The updates to merge into the record, e.g. { views: 10 }\n * @prop params.meta Optional meta parameters\n *\n * @returns The current mutation state. Destructure as [updateMany, { data, error, isLoading }].\n *\n * The return value updates according to the request state:\n *\n * - initial: [updateMany, { isLoading: false, isIdle: true }]\n * - start:   [updateMany, { isLoading: true }]\n * - success: [updateMany, { data: [data from response], isLoading: false, isSuccess: true }]\n * - error:   [updateMany, { error: [error from response], isLoading: false, isError: true }]\n *\n * The updateMany() function must be called with a resource and a parameter object: updateMany(resource, { ids, data, previousData }, options)\n *\n * This hook uses react-query useMutation under the hood.\n * This means the state object contains mutate, isIdle, reset and other react-query methods.\n *\n * @see https://react-query.tanstack.com/reference/useMutation\n *\n * @example // set params when calling the updateMany callback\n *\n * import { useUpdateMany } from 'react-admin';\n *\n * const BulkResetViewsButton = ({ selectedIds }) => {\n *     const [updateMany, { isLoading, error }] = useUpdateMany();\n *     const handleClick = () => {\n *         updateMany('posts', { ids: selectedIds, data: { views: 0 } });\n *     }\n *     if (error) { return <p>ERROR</p>; }\n *     return <button disabled={isLoading} onClick={handleClick}>Reset views</button>;\n * };\n *\n * @example // set params when calling the hook\n *\n * import { useUpdateMany } from 'react-admin';\n *\n * const BulkResetViewsButton = ({ selectedIds }) => {\n *     const [updateMany, { isLoading, error }] = useUpdateMany('posts', { ids: selectedIds, data: { views: 0 } });\n *     if (error) { return <p>ERROR</p>; }\n *     return <button disabled={isLoading} onClick={() => updateMany()}>Reset views</button>;\n * };\n */\n\nexport var useUpdateMany = function (resource, params, options) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var dataProvider = useDataProvider();\n  var queryClient = useQueryClient();\n  var ids = params.ids,\n      data = params.data,\n      meta = params.meta;\n\n  var _a = options.mutationMode,\n      mutationMode = _a === void 0 ? 'pessimistic' : _a,\n      reactMutationOptions = __rest(options, [\"mutationMode\"]);\n\n  var mode = useRef(mutationMode);\n  var paramsRef = useRef(params);\n  var snapshot = useRef([]);\n\n  var updateCache = function (_a) {\n    var resource = _a.resource,\n        ids = _a.ids,\n        data = _a.data,\n        meta = _a.meta;\n    return __awaiter(void 0, void 0, void 0, function () {\n      var updatedAt, updateColl;\n      return __generator(this, function (_b) {\n        updatedAt = mode.current === 'undoable' ? Date.now() + 1000 * 5 : Date.now();\n\n        updateColl = function (old) {\n          if (!old) return;\n\n          var newCollection = __spreadArray([], old, true);\n\n          ids.forEach(function (id) {\n            // eslint-disable-next-line eqeqeq\n            var index = old.findIndex(function (record) {\n              return record.id == id;\n            });\n\n            if (index === -1) {\n              return;\n            }\n\n            newCollection = __spreadArray(__spreadArray(__spreadArray([], newCollection.slice(0, index), true), [__assign(__assign({}, newCollection[index]), data)], false), newCollection.slice(index + 1), true);\n          });\n          return newCollection;\n        };\n\n        ids.forEach(function (id) {\n          return queryClient.setQueryData([resource, 'getOne', {\n            id: String(id),\n            meta: meta\n          }], function (record) {\n            return __assign(__assign({}, record), data);\n          }, {\n            updatedAt: updatedAt\n          });\n        });\n        queryClient.setQueriesData([resource, 'getList'], function (res) {\n          return res && res.data ? {\n            data: updateColl(res.data),\n            total: res.total\n          } : res;\n        }, {\n          updatedAt: updatedAt\n        });\n        queryClient.setQueriesData([resource, 'getMany'], function (coll) {\n          return coll && coll.length > 0 ? updateColl(coll) : coll;\n        }, {\n          updatedAt: updatedAt\n        });\n        queryClient.setQueriesData([resource, 'getManyReference'], function (res) {\n          return res && res.data ? {\n            data: updateColl(res.data),\n            total: res.total\n          } : res;\n        }, {\n          updatedAt: updatedAt\n        });\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  var mutation = useMutation(function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.resource,\n        callTimeResource = _c === void 0 ? resource : _c,\n        _d = _b.ids,\n        callTimeIds = _d === void 0 ? paramsRef.current.ids : _d,\n        _e = _b.data,\n        callTimeData = _e === void 0 ? paramsRef.current.data : _e,\n        _f = _b.meta,\n        callTimeMeta = _f === void 0 ? paramsRef.current.meta : _f;\n\n    return dataProvider.updateMany(callTimeResource, {\n      ids: callTimeIds,\n      data: callTimeData,\n      meta: callTimeMeta\n    }).then(function (_a) {\n      var data = _a.data;\n      return data;\n    });\n  }, __assign(__assign({}, reactMutationOptions), {\n    onMutate: function (variables) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var userContext;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!reactMutationOptions.onMutate) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , reactMutationOptions.onMutate(variables)];\n\n            case 1:\n              userContext = _a.sent() || {};\n              return [2\n              /*return*/\n              , __assign({\n                snapshot: snapshot.current\n              }, userContext)];\n\n            case 2:\n              // Return a context object with the snapshot value\n              return [2\n              /*return*/\n              , {\n                snapshot: snapshot.current\n              }];\n          }\n        });\n      });\n    },\n    onError: function (error, variables, context) {\n      if (variables === void 0) {\n        variables = {};\n      }\n\n      if (mode.current === 'optimistic' || mode.current === 'undoable') {\n        // If the mutation fails, use the context returned from onMutate to rollback\n        context.snapshot.forEach(function (_a) {\n          var key = _a[0],\n              value = _a[1];\n          queryClient.setQueryData(key, value);\n        });\n      }\n\n      if (reactMutationOptions.onError) {\n        return reactMutationOptions.onError(error, variables, context);\n      } // call-time error callback is executed by react-query\n\n    },\n    onSuccess: function (data, variables, context) {\n      if (variables === void 0) {\n        variables = {};\n      }\n\n      if (mode.current === 'pessimistic') {\n        // update the getOne and getList query cache with the new result\n        var _a = variables.resource,\n            callTimeResource = _a === void 0 ? resource : _a,\n            _b = variables.ids,\n            callTimeIds = _b === void 0 ? ids : _b,\n            _c = variables.meta,\n            callTimeMeta = _c === void 0 ? meta : _c;\n        updateCache({\n          resource: callTimeResource,\n          ids: callTimeIds,\n          data: data,\n          meta: callTimeMeta\n        });\n\n        if (reactMutationOptions.onSuccess) {\n          reactMutationOptions.onSuccess(data, variables, context);\n        } // call-time success callback is executed by react-query\n\n      }\n    },\n    onSettled: function (data, error, variables, context) {\n      if (variables === void 0) {\n        variables = {};\n      }\n\n      if (mode.current === 'optimistic' || mode.current === 'undoable') {\n        // Always refetch after error or success:\n        context.snapshot.forEach(function (_a) {\n          var key = _a[0];\n          queryClient.invalidateQueries(key);\n        });\n      }\n\n      if (reactMutationOptions.onSettled) {\n        return reactMutationOptions.onSettled(data, error, variables, context);\n      }\n    }\n  }));\n\n  var updateMany = function (callTimeResource, callTimeParams, updateOptions) {\n    if (callTimeResource === void 0) {\n      callTimeResource = resource;\n    }\n\n    if (callTimeParams === void 0) {\n      callTimeParams = {};\n    }\n\n    if (updateOptions === void 0) {\n      updateOptions = {};\n    }\n\n    return __awaiter(void 0, void 0, void 0, function () {\n      var mutationMode, returnPromise, onSuccess, onSettled, onError, _a, callTimeIds, _b, callTimeData, _c, callTimeMeta, queryKeys;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            mutationMode = updateOptions.mutationMode, returnPromise = updateOptions.returnPromise, onSuccess = updateOptions.onSuccess, onSettled = updateOptions.onSettled, onError = updateOptions.onError; // store the hook time params *at the moment of the call*\n            // because they may change afterwards, which would break the undoable mode\n            // as the previousData would be overwritten by the optimistic update\n\n            paramsRef.current = params;\n\n            if (mutationMode) {\n              mode.current = mutationMode;\n            }\n\n            if (returnPromise && mode.current !== 'pessimistic') {\n              console.warn('The returnPromise parameter can only be used if the mutationMode is set to pessimistic');\n            }\n\n            if (mode.current === 'pessimistic') {\n              if (returnPromise) {\n                return [2\n                /*return*/\n                , mutation.mutateAsync(__assign({\n                  resource: callTimeResource\n                }, callTimeParams), {\n                  onSuccess: onSuccess,\n                  onSettled: onSettled,\n                  onError: onError\n                })];\n              }\n\n              return [2\n              /*return*/\n              , mutation.mutate(__assign({\n                resource: callTimeResource\n              }, callTimeParams), {\n                onSuccess: onSuccess,\n                onSettled: onSettled,\n                onError: onError\n              })];\n            }\n\n            _a = callTimeParams.ids, callTimeIds = _a === void 0 ? ids : _a, _b = callTimeParams.data, callTimeData = _b === void 0 ? data : _b, _c = callTimeParams.meta, callTimeMeta = _c === void 0 ? meta : _c;\n            queryKeys = [[callTimeResource, 'getOne'], [callTimeResource, 'getList'], [callTimeResource, 'getMany'], [callTimeResource, 'getManyReference']];\n            /**\n             * Snapshot the previous values via queryClient.getQueriesData()\n             *\n             * The snapshotData ref will contain an array of tuples [query key, associated data]\n             *\n             * @example\n             * [\n             *   [['posts', 'getOne', { id: '1' }], { id: 1, title: 'Hello' }],\n             *   [['posts', 'getList'], { data: [{ id: 1, title: 'Hello' }], total: 1 }],\n             *   [['posts', 'getMany'], [{ id: 1, title: 'Hello' }]],\n             * ]\n             *\n             * @see https://react-query.tanstack.com/reference/QueryClient#queryclientgetqueriesdata\n             */\n\n            snapshot.current = queryKeys.reduce(function (prev, curr) {\n              return prev.concat(queryClient.getQueriesData(curr));\n            }, []); // Cancel any outgoing re-fetches (so they don't overwrite our optimistic update)\n\n            return [4\n            /*yield*/\n            , Promise.all(snapshot.current.map(function (_a) {\n              var key = _a[0];\n              return queryClient.cancelQueries(key);\n            }))];\n\n          case 1:\n            // Cancel any outgoing re-fetches (so they don't overwrite our optimistic update)\n            _d.sent(); // Optimistically update to the new data\n\n\n            return [4\n            /*yield*/\n            , updateCache({\n              resource: callTimeResource,\n              ids: callTimeIds,\n              data: callTimeData,\n              meta: callTimeMeta\n            })];\n\n          case 2:\n            // Optimistically update to the new data\n            _d.sent(); // run the success callbacks during the next tick\n\n\n            if (onSuccess) {\n              setTimeout(function () {\n                return onSuccess(callTimeIds, __assign({\n                  resource: callTimeResource\n                }, callTimeParams), {\n                  snapshot: snapshot.current\n                });\n              }, 0);\n            }\n\n            if (reactMutationOptions.onSuccess) {\n              setTimeout(function () {\n                return reactMutationOptions.onSuccess(callTimeIds, __assign({\n                  resource: callTimeResource\n                }, callTimeParams), {\n                  snapshot: snapshot.current\n                });\n              }, 0);\n            }\n\n            if (mode.current === 'optimistic') {\n              // call the mutate method without success side effects\n              return [2\n              /*return*/\n              , mutation.mutate(__assign({\n                resource: callTimeResource\n              }, callTimeParams), {\n                onSettled: onSettled,\n                onError: onError\n              })];\n            } else {\n              // undoable mutation: register the mutation for later\n              undoableEventEmitter.once('end', function (_a) {\n                var isUndo = _a.isUndo;\n\n                if (isUndo) {\n                  // rollback\n                  snapshot.current.forEach(function (_a) {\n                    var key = _a[0],\n                        value = _a[1];\n                    queryClient.setQueryData(key, value);\n                  });\n                } else {\n                  // call the mutate method without success side effects\n                  mutation.mutate(__assign({\n                    resource: callTimeResource\n                  }, callTimeParams), {\n                    onSettled: onSettled,\n                    onError: onError\n                  });\n                }\n              });\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return [updateMany, mutation];\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArray","to","from","pack","l","ar","Array","slice","concat","useRef","useMutation","useQueryClient","useDataProvider","undoableEventEmitter","useUpdateMany","resource","params","options","dataProvider","queryClient","ids","data","meta","_a","mutationMode","reactMutationOptions","mode","paramsRef","snapshot","updateCache","updatedAt","updateColl","_b","current","Date","now","old","newCollection","forEach","id","index","findIndex","record","setQueryData","String","setQueriesData","res","total","coll","mutation","_c","callTimeResource","_d","callTimeIds","_e","callTimeData","_f","callTimeMeta","updateMany","onMutate","variables","userContext","onError","error","context","key","onSuccess","onSettled","invalidateQueries","callTimeParams","updateOptions","returnPromise","queryKeys","console","warn","mutateAsync","mutate","reduce","prev","curr","getQueriesData","all","map","cancelQueries","setTimeout","once","isUndo"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/dataProvider/useUpdateMany.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useRef } from 'react';\nimport { useMutation, useQueryClient, } from 'react-query';\nimport { useDataProvider } from './useDataProvider';\nimport undoableEventEmitter from './undoableEventEmitter';\n/**\n * Get a callback to call the dataProvider.updateMany() method, the result and the loading state.\n *\n * @param {string} resource\n * @param {Params} params The updateMany parameters { ids, data, meta }\n * @param {Object} options Options object to pass to the queryClient.\n * May include side effects to be executed upon success or failure, e.g. { onSuccess: () => { refresh(); } }\n * May include a mutation mode (optimistic/pessimistic/undoable), e.g. { mutationMode: 'undoable' }\n *\n * @typedef Params\n * @prop params.ids The resource identifiers, e.g. [123, 456]\n * @prop params.data The updates to merge into the record, e.g. { views: 10 }\n * @prop params.meta Optional meta parameters\n *\n * @returns The current mutation state. Destructure as [updateMany, { data, error, isLoading }].\n *\n * The return value updates according to the request state:\n *\n * - initial: [updateMany, { isLoading: false, isIdle: true }]\n * - start:   [updateMany, { isLoading: true }]\n * - success: [updateMany, { data: [data from response], isLoading: false, isSuccess: true }]\n * - error:   [updateMany, { error: [error from response], isLoading: false, isError: true }]\n *\n * The updateMany() function must be called with a resource and a parameter object: updateMany(resource, { ids, data, previousData }, options)\n *\n * This hook uses react-query useMutation under the hood.\n * This means the state object contains mutate, isIdle, reset and other react-query methods.\n *\n * @see https://react-query.tanstack.com/reference/useMutation\n *\n * @example // set params when calling the updateMany callback\n *\n * import { useUpdateMany } from 'react-admin';\n *\n * const BulkResetViewsButton = ({ selectedIds }) => {\n *     const [updateMany, { isLoading, error }] = useUpdateMany();\n *     const handleClick = () => {\n *         updateMany('posts', { ids: selectedIds, data: { views: 0 } });\n *     }\n *     if (error) { return <p>ERROR</p>; }\n *     return <button disabled={isLoading} onClick={handleClick}>Reset views</button>;\n * };\n *\n * @example // set params when calling the hook\n *\n * import { useUpdateMany } from 'react-admin';\n *\n * const BulkResetViewsButton = ({ selectedIds }) => {\n *     const [updateMany, { isLoading, error }] = useUpdateMany('posts', { ids: selectedIds, data: { views: 0 } });\n *     if (error) { return <p>ERROR</p>; }\n *     return <button disabled={isLoading} onClick={() => updateMany()}>Reset views</button>;\n * };\n */\nexport var useUpdateMany = function (resource, params, options) {\n    if (params === void 0) { params = {}; }\n    if (options === void 0) { options = {}; }\n    var dataProvider = useDataProvider();\n    var queryClient = useQueryClient();\n    var ids = params.ids, data = params.data, meta = params.meta;\n    var _a = options.mutationMode, mutationMode = _a === void 0 ? 'pessimistic' : _a, reactMutationOptions = __rest(options, [\"mutationMode\"]);\n    var mode = useRef(mutationMode);\n    var paramsRef = useRef(params);\n    var snapshot = useRef([]);\n    var updateCache = function (_a) {\n        var resource = _a.resource, ids = _a.ids, data = _a.data, meta = _a.meta;\n        return __awaiter(void 0, void 0, void 0, function () {\n            var updatedAt, updateColl;\n            return __generator(this, function (_b) {\n                updatedAt = mode.current === 'undoable' ? Date.now() + 1000 * 5 : Date.now();\n                updateColl = function (old) {\n                    if (!old)\n                        return;\n                    var newCollection = __spreadArray([], old, true);\n                    ids.forEach(function (id) {\n                        // eslint-disable-next-line eqeqeq\n                        var index = old.findIndex(function (record) { return record.id == id; });\n                        if (index === -1) {\n                            return;\n                        }\n                        newCollection = __spreadArray(__spreadArray(__spreadArray([], newCollection.slice(0, index), true), [\n                            __assign(__assign({}, newCollection[index]), data)\n                        ], false), newCollection.slice(index + 1), true);\n                    });\n                    return newCollection;\n                };\n                ids.forEach(function (id) {\n                    return queryClient.setQueryData([resource, 'getOne', { id: String(id), meta: meta }], function (record) { return (__assign(__assign({}, record), data)); }, { updatedAt: updatedAt });\n                });\n                queryClient.setQueriesData([resource, 'getList'], function (res) {\n                    return res && res.data\n                        ? { data: updateColl(res.data), total: res.total }\n                        : res;\n                }, { updatedAt: updatedAt });\n                queryClient.setQueriesData([resource, 'getMany'], function (coll) {\n                    return coll && coll.length > 0 ? updateColl(coll) : coll;\n                }, { updatedAt: updatedAt });\n                queryClient.setQueriesData([resource, 'getManyReference'], function (res) {\n                    return res && res.data\n                        ? { data: updateColl(res.data), total: res.total }\n                        : res;\n                }, { updatedAt: updatedAt });\n                return [2 /*return*/];\n            });\n        });\n    };\n    var mutation = useMutation(function (_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.resource, callTimeResource = _c === void 0 ? resource : _c, _d = _b.ids, callTimeIds = _d === void 0 ? paramsRef.current.ids : _d, _e = _b.data, callTimeData = _e === void 0 ? paramsRef.current.data : _e, _f = _b.meta, callTimeMeta = _f === void 0 ? paramsRef.current.meta : _f;\n        return dataProvider\n            .updateMany(callTimeResource, {\n            ids: callTimeIds,\n            data: callTimeData,\n            meta: callTimeMeta,\n        })\n            .then(function (_a) {\n            var data = _a.data;\n            return data;\n        });\n    }, __assign(__assign({}, reactMutationOptions), { onMutate: function (variables) { return __awaiter(void 0, void 0, void 0, function () {\n            var userContext;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!reactMutationOptions.onMutate) return [3 /*break*/, 2];\n                        return [4 /*yield*/, reactMutationOptions.onMutate(variables)];\n                    case 1:\n                        userContext = (_a.sent()) || {};\n                        return [2 /*return*/, __assign({ snapshot: snapshot.current }, userContext)];\n                    case 2: \n                    // Return a context object with the snapshot value\n                    return [2 /*return*/, { snapshot: snapshot.current }];\n                }\n            });\n        }); }, onError: function (error, variables, context) {\n            if (variables === void 0) { variables = {}; }\n            if (mode.current === 'optimistic' ||\n                mode.current === 'undoable') {\n                // If the mutation fails, use the context returned from onMutate to rollback\n                context.snapshot.forEach(function (_a) {\n                    var key = _a[0], value = _a[1];\n                    queryClient.setQueryData(key, value);\n                });\n            }\n            if (reactMutationOptions.onError) {\n                return reactMutationOptions.onError(error, variables, context);\n            }\n            // call-time error callback is executed by react-query\n        }, onSuccess: function (data, variables, context) {\n            if (variables === void 0) { variables = {}; }\n            if (mode.current === 'pessimistic') {\n                // update the getOne and getList query cache with the new result\n                var _a = variables.resource, callTimeResource = _a === void 0 ? resource : _a, _b = variables.ids, callTimeIds = _b === void 0 ? ids : _b, _c = variables.meta, callTimeMeta = _c === void 0 ? meta : _c;\n                updateCache({\n                    resource: callTimeResource,\n                    ids: callTimeIds,\n                    data: data,\n                    meta: callTimeMeta,\n                });\n                if (reactMutationOptions.onSuccess) {\n                    reactMutationOptions.onSuccess(data, variables, context);\n                }\n                // call-time success callback is executed by react-query\n            }\n        }, onSettled: function (data, error, variables, context) {\n            if (variables === void 0) { variables = {}; }\n            if (mode.current === 'optimistic' ||\n                mode.current === 'undoable') {\n                // Always refetch after error or success:\n                context.snapshot.forEach(function (_a) {\n                    var key = _a[0];\n                    queryClient.invalidateQueries(key);\n                });\n            }\n            if (reactMutationOptions.onSettled) {\n                return reactMutationOptions.onSettled(data, error, variables, context);\n            }\n        } }));\n    var updateMany = function (callTimeResource, callTimeParams, updateOptions) {\n        if (callTimeResource === void 0) { callTimeResource = resource; }\n        if (callTimeParams === void 0) { callTimeParams = {}; }\n        if (updateOptions === void 0) { updateOptions = {}; }\n        return __awaiter(void 0, void 0, void 0, function () {\n            var mutationMode, returnPromise, onSuccess, onSettled, onError, _a, callTimeIds, _b, callTimeData, _c, callTimeMeta, queryKeys;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        mutationMode = updateOptions.mutationMode, returnPromise = updateOptions.returnPromise, onSuccess = updateOptions.onSuccess, onSettled = updateOptions.onSettled, onError = updateOptions.onError;\n                        // store the hook time params *at the moment of the call*\n                        // because they may change afterwards, which would break the undoable mode\n                        // as the previousData would be overwritten by the optimistic update\n                        paramsRef.current = params;\n                        if (mutationMode) {\n                            mode.current = mutationMode;\n                        }\n                        if (returnPromise && mode.current !== 'pessimistic') {\n                            console.warn('The returnPromise parameter can only be used if the mutationMode is set to pessimistic');\n                        }\n                        if (mode.current === 'pessimistic') {\n                            if (returnPromise) {\n                                return [2 /*return*/, mutation.mutateAsync(__assign({ resource: callTimeResource }, callTimeParams), { onSuccess: onSuccess, onSettled: onSettled, onError: onError })];\n                            }\n                            return [2 /*return*/, mutation.mutate(__assign({ resource: callTimeResource }, callTimeParams), { onSuccess: onSuccess, onSettled: onSettled, onError: onError })];\n                        }\n                        _a = callTimeParams.ids, callTimeIds = _a === void 0 ? ids : _a, _b = callTimeParams.data, callTimeData = _b === void 0 ? data : _b, _c = callTimeParams.meta, callTimeMeta = _c === void 0 ? meta : _c;\n                        queryKeys = [\n                            [callTimeResource, 'getOne'],\n                            [callTimeResource, 'getList'],\n                            [callTimeResource, 'getMany'],\n                            [callTimeResource, 'getManyReference'],\n                        ];\n                        /**\n                         * Snapshot the previous values via queryClient.getQueriesData()\n                         *\n                         * The snapshotData ref will contain an array of tuples [query key, associated data]\n                         *\n                         * @example\n                         * [\n                         *   [['posts', 'getOne', { id: '1' }], { id: 1, title: 'Hello' }],\n                         *   [['posts', 'getList'], { data: [{ id: 1, title: 'Hello' }], total: 1 }],\n                         *   [['posts', 'getMany'], [{ id: 1, title: 'Hello' }]],\n                         * ]\n                         *\n                         * @see https://react-query.tanstack.com/reference/QueryClient#queryclientgetqueriesdata\n                         */\n                        snapshot.current = queryKeys.reduce(function (prev, curr) { return prev.concat(queryClient.getQueriesData(curr)); }, []);\n                        // Cancel any outgoing re-fetches (so they don't overwrite our optimistic update)\n                        return [4 /*yield*/, Promise.all(snapshot.current.map(function (_a) {\n                                var key = _a[0];\n                                return queryClient.cancelQueries(key);\n                            }))];\n                    case 1:\n                        // Cancel any outgoing re-fetches (so they don't overwrite our optimistic update)\n                        _d.sent();\n                        // Optimistically update to the new data\n                        return [4 /*yield*/, updateCache({\n                                resource: callTimeResource,\n                                ids: callTimeIds,\n                                data: callTimeData,\n                                meta: callTimeMeta,\n                            })];\n                    case 2:\n                        // Optimistically update to the new data\n                        _d.sent();\n                        // run the success callbacks during the next tick\n                        if (onSuccess) {\n                            setTimeout(function () {\n                                return onSuccess(callTimeIds, __assign({ resource: callTimeResource }, callTimeParams), { snapshot: snapshot.current });\n                            }, 0);\n                        }\n                        if (reactMutationOptions.onSuccess) {\n                            setTimeout(function () {\n                                return reactMutationOptions.onSuccess(callTimeIds, __assign({ resource: callTimeResource }, callTimeParams), { snapshot: snapshot.current });\n                            }, 0);\n                        }\n                        if (mode.current === 'optimistic') {\n                            // call the mutate method without success side effects\n                            return [2 /*return*/, mutation.mutate(__assign({ resource: callTimeResource }, callTimeParams), { onSettled: onSettled, onError: onError })];\n                        }\n                        else {\n                            // undoable mutation: register the mutation for later\n                            undoableEventEmitter.once('end', function (_a) {\n                                var isUndo = _a.isUndo;\n                                if (isUndo) {\n                                    // rollback\n                                    snapshot.current.forEach(function (_a) {\n                                        var key = _a[0], value = _a[1];\n                                        queryClient.setQueryData(key, value);\n                                    });\n                                }\n                                else {\n                                    // call the mutate method without success side effects\n                                    mutation.mutate(__assign({ resource: callTimeResource }, callTimeParams), { onSettled: onSettled, onError: onError });\n                                }\n                            });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return [updateMany, mutation];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}