{"ast":null,"code":"import { BubbleMenuPlugin } from '@tiptap/extension-bubble-menu';\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport { Editor as Editor$1, NodeView } from '@tiptap/core';\nexport * from '@tiptap/core';\nimport ReactDOM from 'react-dom';\nimport { FloatingMenuPlugin } from '@tiptap/extension-floating-menu';\n\nconst BubbleMenu = props => {\n  const [element, setElement] = useState(null);\n  useEffect(() => {\n    if (!element) {\n      return;\n    }\n\n    if (props.editor.isDestroyed) {\n      return;\n    }\n\n    const {\n      pluginKey = 'bubbleMenu',\n      editor,\n      tippyOptions = {},\n      shouldShow = null\n    } = props;\n    const plugin = BubbleMenuPlugin({\n      pluginKey,\n      editor,\n      element,\n      tippyOptions,\n      shouldShow\n    });\n    editor.registerPlugin(plugin);\n    return () => editor.unregisterPlugin(pluginKey);\n  }, [props.editor, element]);\n  return React.createElement(\"div\", {\n    ref: setElement,\n    className: props.className,\n    style: {\n      visibility: 'hidden'\n    }\n  }, props.children);\n};\n\nclass Editor extends Editor$1 {\n  constructor() {\n    super(...arguments);\n    this.contentComponent = null;\n  }\n\n}\n\nconst Portals = _ref => {\n  let {\n    renderers\n  } = _ref;\n  return React.createElement(React.Fragment, null, Array.from(renderers).map(_ref2 => {\n    let [key, renderer] = _ref2;\n    return ReactDOM.createPortal(renderer.reactElement, renderer.element, key);\n  }));\n};\n\nclass PureEditorContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.editorContentRef = React.createRef();\n    this.state = {\n      renderers: new Map()\n    };\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  componentDidUpdate() {\n    this.init();\n  }\n\n  init() {\n    const {\n      editor\n    } = this.props;\n\n    if (editor && editor.options.element) {\n      if (editor.contentComponent) {\n        return;\n      }\n\n      const element = this.editorContentRef.current;\n      element.append(...editor.options.element.childNodes);\n      editor.setOptions({\n        element\n      });\n      editor.contentComponent = this;\n      editor.createNodeViews();\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      editor\n    } = this.props;\n\n    if (!editor) {\n      return;\n    }\n\n    if (!editor.isDestroyed) {\n      editor.view.setProps({\n        nodeViews: {}\n      });\n    }\n\n    editor.contentComponent = null;\n\n    if (!editor.options.element.firstChild) {\n      return;\n    }\n\n    const newElement = document.createElement('div');\n    newElement.append(...editor.options.element.childNodes);\n    editor.setOptions({\n      element: newElement\n    });\n  }\n\n  render() {\n    const {\n      editor,\n      ...rest\n    } = this.props;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      ref: this.editorContentRef,\n      ...rest\n    }), React.createElement(Portals, {\n      renderers: this.state.renderers\n    }));\n  }\n\n}\n\nconst EditorContent = React.memo(PureEditorContent);\n\nconst FloatingMenu = props => {\n  const [element, setElement] = useState(null);\n  useEffect(() => {\n    if (!element) {\n      return;\n    }\n\n    if (props.editor.isDestroyed) {\n      return;\n    }\n\n    const {\n      pluginKey = 'floatingMenu',\n      editor,\n      tippyOptions = {},\n      shouldShow = null\n    } = props;\n    const plugin = FloatingMenuPlugin({\n      pluginKey,\n      editor,\n      element,\n      tippyOptions,\n      shouldShow\n    });\n    editor.registerPlugin(plugin);\n    return () => editor.unregisterPlugin(pluginKey);\n  }, [props.editor, element]);\n  return React.createElement(\"div\", {\n    ref: setElement,\n    className: props.className,\n    style: {\n      visibility: 'hidden'\n    }\n  }, props.children);\n};\n\nconst ReactNodeViewContext = createContext({\n  onDragStart: undefined\n});\n\nconst useReactNodeView = () => useContext(ReactNodeViewContext);\n\nconst NodeViewContent = props => {\n  const Tag = props.as || 'div';\n  const {\n    nodeViewContentRef\n  } = useReactNodeView();\n  return React.createElement(Tag, { ...props,\n    ref: nodeViewContentRef,\n    \"data-node-view-content\": \"\",\n    style: {\n      whiteSpace: 'pre-wrap',\n      ...props.style\n    }\n  });\n};\n\nconst NodeViewWrapper = React.forwardRef((props, ref) => {\n  const {\n    onDragStart\n  } = useReactNodeView();\n  const Tag = props.as || 'div';\n  return React.createElement(Tag, { ...props,\n    ref: ref,\n    \"data-node-view-wrapper\": \"\",\n    onDragStart: onDragStart,\n    style: {\n      whiteSpace: 'normal',\n      ...props.style\n    }\n  });\n});\n\nfunction isClassComponent(Component) {\n  return !!(typeof Component === 'function' && Component.prototype && Component.prototype.isReactComponent);\n}\n\nfunction isForwardRefComponent(Component) {\n  var _a;\n\n  return !!(typeof Component === 'object' && ((_a = Component.$$typeof) === null || _a === void 0 ? void 0 : _a.toString()) === 'Symbol(react.forward_ref)');\n}\n\nclass ReactRenderer {\n  constructor(component, _ref3) {\n    let {\n      editor,\n      props = {},\n      as = 'div',\n      className = ''\n    } = _ref3;\n    this.ref = null;\n    this.id = Math.floor(Math.random() * 0xFFFFFFFF).toString();\n    this.component = component;\n    this.editor = editor;\n    this.props = props;\n    this.element = document.createElement(as);\n    this.element.classList.add('react-renderer');\n\n    if (className) {\n      this.element.classList.add(...className.split(' '));\n    }\n\n    this.render();\n  }\n\n  render() {\n    var _a;\n\n    const Component = this.component;\n    const props = this.props;\n\n    if (isClassComponent(Component) || isForwardRefComponent(Component)) {\n      props.ref = ref => {\n        this.ref = ref;\n      };\n    }\n\n    this.reactElement = React.createElement(Component, { ...props\n    });\n\n    if ((_a = this.editor) === null || _a === void 0 ? void 0 : _a.contentComponent) {\n      this.editor.contentComponent.setState({\n        renderers: this.editor.contentComponent.state.renderers.set(this.id, this)\n      });\n    }\n  }\n\n  updateProps() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.props = { ...this.props,\n      ...props\n    };\n    this.render();\n  }\n\n  destroy() {\n    var _a;\n\n    if ((_a = this.editor) === null || _a === void 0 ? void 0 : _a.contentComponent) {\n      const {\n        renderers\n      } = this.editor.contentComponent.state;\n      renderers.delete(this.id);\n      this.editor.contentComponent.setState({\n        renderers\n      });\n    }\n  }\n\n}\n\nclass ReactNodeView extends NodeView {\n  mount() {\n    var _this = this;\n\n    const props = {\n      editor: this.editor,\n      node: this.node,\n      decorations: this.decorations,\n      selected: false,\n      extension: this.extension,\n      getPos: () => this.getPos(),\n      updateAttributes: function () {\n        let attributes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return _this.updateAttributes(attributes);\n      },\n      deleteNode: () => this.deleteNode()\n    };\n\n    if (!this.component.displayName) {\n      const capitalizeFirstChar = string => {\n        return string.charAt(0).toUpperCase() + string.substring(1);\n      };\n\n      this.component.displayName = capitalizeFirstChar(this.extension.name);\n    }\n\n    const ReactNodeViewProvider = componentProps => {\n      const Component = this.component;\n      const onDragStart = this.onDragStart.bind(this);\n\n      const nodeViewContentRef = element => {\n        if (element && this.contentDOMElement && element.firstChild !== this.contentDOMElement) {\n          element.appendChild(this.contentDOMElement);\n        }\n      };\n\n      return React.createElement(ReactNodeViewContext.Provider, {\n        value: {\n          onDragStart,\n          nodeViewContentRef\n        }\n      }, React.createElement(Component, { ...componentProps\n      }));\n    };\n\n    ReactNodeViewProvider.displayName = 'ReactNodeView';\n    this.contentDOMElement = this.node.isLeaf ? null : document.createElement(this.node.isInline ? 'span' : 'div');\n\n    if (this.contentDOMElement) {\n      // For some reason the whiteSpace prop is not inherited properly in Chrome and Safari\n      // With this fix it seems to work fine\n      // See: https://github.com/ueberdosis/tiptap/issues/1197\n      this.contentDOMElement.style.whiteSpace = 'inherit';\n    }\n\n    let as = this.node.isInline ? 'span' : 'div';\n\n    if (this.options.as) {\n      as = this.options.as;\n    }\n\n    const {\n      className = ''\n    } = this.options;\n    this.renderer = new ReactRenderer(ReactNodeViewProvider, {\n      editor: this.editor,\n      props,\n      as,\n      className: `node-${this.node.type.name} ${className}`.trim()\n    });\n  }\n\n  get dom() {\n    var _a;\n\n    if (this.renderer.element.firstElementChild && !((_a = this.renderer.element.firstElementChild) === null || _a === void 0 ? void 0 : _a.hasAttribute('data-node-view-wrapper'))) {\n      throw Error('Please use the NodeViewWrapper component for your node view.');\n    }\n\n    return this.renderer.element;\n  }\n\n  get contentDOM() {\n    if (this.node.isLeaf) {\n      return null;\n    }\n\n    return this.contentDOMElement;\n  }\n\n  update(node, decorations) {\n    const updateProps = props => {\n      this.renderer.updateProps(props);\n    };\n\n    if (node.type !== this.node.type) {\n      return false;\n    }\n\n    if (typeof this.options.update === 'function') {\n      const oldNode = this.node;\n      const oldDecorations = this.decorations;\n      this.node = node;\n      this.decorations = decorations;\n      return this.options.update({\n        oldNode,\n        oldDecorations,\n        newNode: node,\n        newDecorations: decorations,\n        updateProps: () => updateProps({\n          node,\n          decorations\n        })\n      });\n    }\n\n    if (node === this.node && this.decorations === decorations) {\n      return true;\n    }\n\n    this.node = node;\n    this.decorations = decorations;\n    updateProps({\n      node,\n      decorations\n    });\n    return true;\n  }\n\n  selectNode() {\n    this.renderer.updateProps({\n      selected: true\n    });\n  }\n\n  deselectNode() {\n    this.renderer.updateProps({\n      selected: false\n    });\n  }\n\n  destroy() {\n    this.renderer.destroy();\n    this.contentDOMElement = null;\n  }\n\n}\n\nfunction ReactNodeViewRenderer(component, options) {\n  return props => {\n    // try to get the parent component\n    // this is important for vue devtools to show the component hierarchy correctly\n    // maybe it’s `undefined` because <editor-content> isn’t rendered yet\n    if (!props.editor.contentComponent) {\n      return {};\n    }\n\n    return new ReactNodeView(component, props, options);\n  };\n}\n\nfunction useForceUpdate() {\n  const [, setValue] = useState(0);\n  return () => setValue(value => value + 1);\n}\n\nconst useEditor = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const [editor, setEditor] = useState(null);\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    let isMounted = true;\n    const instance = new Editor(options);\n    setEditor(instance);\n    instance.on('transaction', () => {\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          if (isMounted) {\n            forceUpdate();\n          }\n        });\n      });\n    });\n    return () => {\n      instance.destroy();\n      isMounted = false;\n    };\n  }, deps);\n  return editor;\n};\n\nexport { BubbleMenu, Editor, EditorContent, FloatingMenu, NodeViewContent, NodeViewWrapper, PureEditorContent, ReactNodeViewRenderer, ReactRenderer, useEditor };","map":{"version":3,"mappings":"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","names":["props","element","setElement","useState","useEffect","editor","isDestroyed","pluginKey","tippyOptions","shouldShow","plugin","BubbleMenuPlugin","registerPlugin","unregisterPlugin","React","ref","className","style","visibility","children","Editor","CoreEditor","constructor","contentComponent","Portals","renderers","Array","from","map","key","renderer","ReactDOM","createPortal","reactElement","Component","editorContentRef","createRef","state","Map","componentDidMount","init","componentDidUpdate","options","current","append","childNodes","setOptions","createNodeViews","componentWillUnmount","view","setProps","nodeViews","firstChild","newElement","document","createElement","render","rest","memo","PureEditorContent","FloatingMenuPlugin","ReactNodeViewContext","createContext","onDragStart","undefined","useReactNodeView","useContext","Tag","as","nodeViewContentRef","whiteSpace","NodeViewWrapper","forwardRef","isClassComponent","prototype","isReactComponent","isForwardRefComponent","$$typeof","_a","toString","ReactRenderer","component","id","Math","floor","random","classList","add","split","setState","set","updateProps","destroy","delete","ReactNodeView","NodeView","mount","node","decorations","selected","extension","getPos","updateAttributes","attributes","deleteNode","displayName","capitalizeFirstChar","string","charAt","toUpperCase","substring","name","ReactNodeViewProvider","componentProps","bind","contentDOMElement","appendChild","Provider","value","isLeaf","isInline","type","trim","dom","firstElementChild","hasAttribute","Error","contentDOM","update","oldNode","oldDecorations","newNode","newDecorations","selectNode","deselectNode","useForceUpdate","setValue","deps","setEditor","forceUpdate","isMounted","instance","on","requestAnimationFrame"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@tiptap/react/src/BubbleMenu.tsx","/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@tiptap/react/src/Editor.ts","/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@tiptap/react/src/EditorContent.tsx","/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@tiptap/react/src/FloatingMenu.tsx","/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@tiptap/react/src/useReactNodeView.ts","/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@tiptap/react/src/NodeViewContent.tsx","/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@tiptap/react/src/NodeViewWrapper.tsx","/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@tiptap/react/src/ReactRenderer.tsx","/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@tiptap/react/src/ReactNodeViewRenderer.tsx","/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/@tiptap/react/src/useEditor.ts"],"sourcesContent":["import { BubbleMenuPlugin, BubbleMenuPluginProps } from '@tiptap/extension-bubble-menu'\nimport React, {\n  useEffect, useState,\n} from 'react'\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>\n\nexport type BubbleMenuProps = Omit<Optional<BubbleMenuPluginProps, 'pluginKey'>, 'element'> & {\n  className?: string,\n  children: React.ReactNode\n}\n\nexport const BubbleMenu = (props: BubbleMenuProps) => {\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    if (props.editor.isDestroyed) {\n      return\n    }\n\n    const {\n      pluginKey = 'bubbleMenu',\n      editor,\n      tippyOptions = {},\n      shouldShow = null,\n    } = props\n\n    const plugin = BubbleMenuPlugin({\n      pluginKey,\n      editor,\n      element,\n      tippyOptions,\n      shouldShow,\n    })\n\n    editor.registerPlugin(plugin)\n    return () => editor.unregisterPlugin(pluginKey)\n  }, [\n    props.editor,\n    element,\n  ])\n\n  return (\n    <div ref={setElement} className={props.className} style={{ visibility: 'hidden' }}>\n      {props.children}\n    </div>\n  )\n}\n","import { Editor as CoreEditor } from '@tiptap/core'\nimport React from 'react'\n\nimport { EditorContentProps, EditorContentState } from './EditorContent'\n\nexport class Editor extends CoreEditor {\n  public contentComponent: React.Component<EditorContentProps, EditorContentState> | null = null\n}\n","import React, { HTMLProps } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Editor } from './Editor'\nimport { ReactRenderer } from './ReactRenderer'\n\nconst Portals: React.FC<{ renderers: Map<string, ReactRenderer> }> = ({ renderers }) => {\n  return (\n    <>\n      {Array.from(renderers).map(([key, renderer]) => {\n        return ReactDOM.createPortal(\n          renderer.reactElement,\n          renderer.element,\n          key,\n        )\n      })}\n    </>\n  )\n}\n\nexport interface EditorContentProps extends HTMLProps<HTMLDivElement> {\n  editor: Editor | null,\n}\n\nexport interface EditorContentState {\n  renderers: Map<string, ReactRenderer>\n}\n\nexport class PureEditorContent extends React.Component<EditorContentProps, EditorContentState> {\n  editorContentRef: React.RefObject<any>\n\n  constructor(props: EditorContentProps) {\n    super(props)\n    this.editorContentRef = React.createRef()\n\n    this.state = {\n      renderers: new Map(),\n    }\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  componentDidUpdate() {\n    this.init()\n  }\n\n  init() {\n    const { editor } = this.props\n\n    if (editor && editor.options.element) {\n      if (editor.contentComponent) {\n        return\n      }\n\n      const element = this.editorContentRef.current\n\n      element.append(...editor.options.element.childNodes)\n\n      editor.setOptions({\n        element,\n      })\n\n      editor.contentComponent = this\n\n      editor.createNodeViews()\n    }\n  }\n\n  componentWillUnmount() {\n    const { editor } = this.props\n\n    if (!editor) {\n      return\n    }\n\n    if (!editor.isDestroyed) {\n      editor.view.setProps({\n        nodeViews: {},\n      })\n    }\n\n    editor.contentComponent = null\n\n    if (!editor.options.element.firstChild) {\n      return\n    }\n\n    const newElement = document.createElement('div')\n\n    newElement.append(...editor.options.element.childNodes)\n\n    editor.setOptions({\n      element: newElement,\n    })\n  }\n\n  render() {\n    const { editor, ...rest } = this.props\n\n    return (\n      <>\n        <div ref={this.editorContentRef} {...rest} />\n        <Portals renderers={this.state.renderers} />\n      </>\n    )\n  }\n}\n\nexport const EditorContent = React.memo(PureEditorContent)\n","import { FloatingMenuPlugin, FloatingMenuPluginProps } from '@tiptap/extension-floating-menu'\nimport React, {\n  useEffect, useState,\n} from 'react'\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>\n\nexport type FloatingMenuProps = Omit<Optional<FloatingMenuPluginProps, 'pluginKey'>, 'element'> & {\n  className?: string,\n  children: React.ReactNode\n}\n\nexport const FloatingMenu = (props: FloatingMenuProps) => {\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    if (props.editor.isDestroyed) {\n      return\n    }\n\n    const {\n      pluginKey = 'floatingMenu',\n      editor,\n      tippyOptions = {},\n      shouldShow = null,\n    } = props\n\n    const plugin = FloatingMenuPlugin({\n      pluginKey,\n      editor,\n      element,\n      tippyOptions,\n      shouldShow,\n    })\n\n    editor.registerPlugin(plugin)\n    return () => editor.unregisterPlugin(pluginKey)\n  }, [\n    props.editor,\n    element,\n  ])\n\n  return (\n    <div ref={setElement} className={props.className} style={{ visibility: 'hidden' }}>\n      {props.children}\n    </div>\n  )\n}\n","import { createContext, useContext } from 'react'\n\nexport interface ReactNodeViewContextProps {\n  onDragStart: (event: DragEvent) => void,\n  nodeViewContentRef: (element: HTMLElement | null) => void,\n}\n\nexport const ReactNodeViewContext = createContext<Partial<ReactNodeViewContextProps>>({\n  onDragStart: undefined,\n})\n\nexport const useReactNodeView = () => useContext(ReactNodeViewContext)\n","import React from 'react'\n\nimport { useReactNodeView } from './useReactNodeView'\n\nexport interface NodeViewContentProps {\n  [key: string]: any,\n  as?: React.ElementType,\n}\n\nexport const NodeViewContent: React.FC<NodeViewContentProps> = props => {\n  const Tag = props.as || 'div'\n  const { nodeViewContentRef } = useReactNodeView()\n\n  return (\n    <Tag\n      {...props}\n      ref={nodeViewContentRef}\n      data-node-view-content=\"\"\n      style={{\n        whiteSpace: 'pre-wrap',\n        ...props.style,\n      }}\n    />\n  )\n}\n","import React from 'react'\n\nimport { useReactNodeView } from './useReactNodeView'\n\nexport interface NodeViewWrapperProps {\n  [key: string]: any,\n  as?: React.ElementType,\n}\n\nexport const NodeViewWrapper: React.FC<NodeViewWrapperProps> = React.forwardRef((props, ref) => {\n  const { onDragStart } = useReactNodeView()\n  const Tag = props.as || 'div'\n\n  return (\n    <Tag\n      {...props}\n      ref={ref}\n      data-node-view-wrapper=\"\"\n      onDragStart={onDragStart}\n      style={{\n        whiteSpace: 'normal',\n        ...props.style,\n      }}\n    />\n  )\n})\n","import { Editor } from '@tiptap/core'\nimport React from 'react'\n\nimport { Editor as ExtendedEditor } from './Editor'\n\nfunction isClassComponent(Component: any) {\n  return !!(\n    typeof Component === 'function'\n    && Component.prototype\n    && Component.prototype.isReactComponent\n  )\n}\n\nfunction isForwardRefComponent(Component: any) {\n  return !!(\n    typeof Component === 'object'\n    && Component.$$typeof?.toString() === 'Symbol(react.forward_ref)'\n  )\n}\n\nexport interface ReactRendererOptions {\n  editor: Editor,\n  props?: Record<string, any>,\n  as?: string,\n  className?: string,\n}\n\ntype ComponentType<R, P> =\n  React.ComponentClass<P> |\n  React.FunctionComponent<P> |\n  React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<R>>;\n\nexport class ReactRenderer<R = unknown, P = unknown> {\n  id: string\n\n  editor: ExtendedEditor\n\n  component: any\n\n  element: Element\n\n  props: Record<string, any>\n\n  reactElement: React.ReactNode\n\n  ref: R | null = null\n\n  constructor(component: ComponentType<R, P>, {\n    editor,\n    props = {},\n    as = 'div',\n    className = '',\n  }: ReactRendererOptions) {\n    this.id = Math.floor(Math.random() * 0xFFFFFFFF).toString()\n    this.component = component\n    this.editor = editor as ExtendedEditor\n    this.props = props\n    this.element = document.createElement(as)\n    this.element.classList.add('react-renderer')\n\n    if (className) {\n      this.element.classList.add(...className.split(' '))\n    }\n\n    this.render()\n  }\n\n  render(): void {\n    const Component = this.component\n    const props = this.props\n\n    if (isClassComponent(Component) || isForwardRefComponent(Component)) {\n      props.ref = (ref: R) => {\n        this.ref = ref\n      }\n    }\n\n    this.reactElement = <Component {...props } />\n\n    if (this.editor?.contentComponent) {\n      this.editor.contentComponent.setState({\n        renderers: this.editor.contentComponent.state.renderers.set(\n          this.id,\n          this,\n        ),\n      })\n    }\n  }\n\n  updateProps(props: Record<string, any> = {}): void {\n    this.props = {\n      ...this.props,\n      ...props,\n    }\n\n    this.render()\n  }\n\n  destroy(): void {\n    if (this.editor?.contentComponent) {\n      const { renderers } = this.editor.contentComponent.state\n\n      renderers.delete(this.id)\n\n      this.editor.contentComponent.setState({\n        renderers,\n      })\n    }\n  }\n}\n","import {\n  NodeView,\n  NodeViewProps,\n  NodeViewRenderer,\n  NodeViewRendererOptions,\n  NodeViewRendererProps,\n} from '@tiptap/core'\nimport { Node as ProseMirrorNode } from 'prosemirror-model'\nimport { Decoration, NodeView as ProseMirrorNodeView } from 'prosemirror-view'\nimport React from 'react'\n\nimport { Editor } from './Editor'\nimport { ReactRenderer } from './ReactRenderer'\nimport { ReactNodeViewContext, ReactNodeViewContextProps } from './useReactNodeView'\n\nexport interface ReactNodeViewRendererOptions extends NodeViewRendererOptions {\n  update:\n    | ((props: {\n        oldNode: ProseMirrorNode;\n        oldDecorations: Decoration[];\n        newNode: ProseMirrorNode;\n        newDecorations: Decoration[];\n        updateProps: () => void;\n      }) => boolean)\n    | null;\n  as?: string;\n  className?: string;\n}\n\nclass ReactNodeView extends NodeView<\n  React.FunctionComponent,\n  Editor,\n  ReactNodeViewRendererOptions\n> {\n  renderer!: ReactRenderer\n\n  contentDOMElement!: HTMLElement | null\n\n  mount() {\n    const props: NodeViewProps = {\n      editor: this.editor,\n      node: this.node,\n      decorations: this.decorations,\n      selected: false,\n      extension: this.extension,\n      getPos: () => this.getPos(),\n      updateAttributes: (attributes = {}) => this.updateAttributes(attributes),\n      deleteNode: () => this.deleteNode(),\n    }\n\n    if (!(this.component as any).displayName) {\n      const capitalizeFirstChar = (string: string): string => {\n        return string.charAt(0).toUpperCase() + string.substring(1)\n      }\n\n      this.component.displayName = capitalizeFirstChar(this.extension.name)\n    }\n\n    const ReactNodeViewProvider: React.FunctionComponent = componentProps => {\n      const Component = this.component\n      const onDragStart = this.onDragStart.bind(this)\n      const nodeViewContentRef: ReactNodeViewContextProps['nodeViewContentRef'] = element => {\n        if (element && this.contentDOMElement && element.firstChild !== this.contentDOMElement) {\n          element.appendChild(this.contentDOMElement)\n        }\n      }\n\n      return (\n        <ReactNodeViewContext.Provider value={{ onDragStart, nodeViewContentRef }}>\n          <Component {...componentProps} />\n        </ReactNodeViewContext.Provider>\n      )\n    }\n\n    ReactNodeViewProvider.displayName = 'ReactNodeView'\n\n    this.contentDOMElement = this.node.isLeaf\n      ? null\n      : document.createElement(this.node.isInline ? 'span' : 'div')\n\n    if (this.contentDOMElement) {\n      // For some reason the whiteSpace prop is not inherited properly in Chrome and Safari\n      // With this fix it seems to work fine\n      // See: https://github.com/ueberdosis/tiptap/issues/1197\n      this.contentDOMElement.style.whiteSpace = 'inherit'\n    }\n\n    let as = this.node.isInline ? 'span' : 'div'\n\n    if (this.options.as) {\n      as = this.options.as\n    }\n\n    const { className = '' } = this.options\n\n    this.renderer = new ReactRenderer(ReactNodeViewProvider, {\n      editor: this.editor,\n      props,\n      as,\n      className: `node-${this.node.type.name} ${className}`.trim(),\n    })\n  }\n\n  get dom() {\n    if (\n      this.renderer.element.firstElementChild\n      && !this.renderer.element.firstElementChild?.hasAttribute('data-node-view-wrapper')\n    ) {\n      throw Error('Please use the NodeViewWrapper component for your node view.')\n    }\n\n    return this.renderer.element as HTMLElement\n  }\n\n  get contentDOM() {\n    if (this.node.isLeaf) {\n      return null\n    }\n\n    return this.contentDOMElement\n  }\n\n  update(node: ProseMirrorNode, decorations: Decoration[]) {\n    const updateProps = (props?: Record<string, any>) => {\n      this.renderer.updateProps(props)\n    }\n\n    if (node.type !== this.node.type) {\n      return false\n    }\n\n    if (typeof this.options.update === 'function') {\n      const oldNode = this.node\n      const oldDecorations = this.decorations\n\n      this.node = node\n      this.decorations = decorations\n\n      return this.options.update({\n        oldNode,\n        oldDecorations,\n        newNode: node,\n        newDecorations: decorations,\n        updateProps: () => updateProps({ node, decorations }),\n      })\n    }\n\n    if (node === this.node && this.decorations === decorations) {\n      return true\n    }\n\n    this.node = node\n    this.decorations = decorations\n\n    updateProps({ node, decorations })\n\n    return true\n  }\n\n  selectNode() {\n    this.renderer.updateProps({\n      selected: true,\n    })\n  }\n\n  deselectNode() {\n    this.renderer.updateProps({\n      selected: false,\n    })\n  }\n\n  destroy() {\n    this.renderer.destroy()\n    this.contentDOMElement = null\n  }\n}\n\nexport function ReactNodeViewRenderer(\n  component: any,\n  options?: Partial<ReactNodeViewRendererOptions>,\n): NodeViewRenderer {\n  return (props: NodeViewRendererProps) => {\n    // try to get the parent component\n    // this is important for vue devtools to show the component hierarchy correctly\n    // maybe it’s `undefined` because <editor-content> isn’t rendered yet\n    if (!(props.editor as Editor).contentComponent) {\n      return {}\n    }\n\n    return new ReactNodeView(component, props, options) as unknown as ProseMirrorNodeView\n  }\n}\n","import { EditorOptions } from '@tiptap/core'\nimport { DependencyList, useEffect, useState } from 'react'\n\nimport { Editor } from './Editor'\n\nfunction useForceUpdate() {\n  const [, setValue] = useState(0)\n\n  return () => setValue(value => value + 1)\n}\n\nexport const useEditor = (options: Partial<EditorOptions> = {}, deps: DependencyList = []) => {\n  const [editor, setEditor] = useState<Editor | null>(null)\n  const forceUpdate = useForceUpdate()\n\n  useEffect(() => {\n    let isMounted = true\n\n    const instance = new Editor(options)\n\n    setEditor(instance)\n\n    instance.on('transaction', () => {\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          if (isMounted) {\n            forceUpdate()\n          }\n        })\n      })\n    })\n\n    return () => {\n      instance.destroy()\n      isMounted = false\n    }\n  }, deps)\n\n  return editor\n}\n"]},"metadata":{},"sourceType":"module"}