{"ast":null,"code":"import { useMemo } from 'react';\nimport defaults from 'lodash/defaults';\nimport { useResourceDefinitions } from './useResourceDefinitions';\nimport { useResourceContext } from './useResourceContext';\n/**\n * Hook to get the definition of a given resource\n *\n * @example // Get the current resource definition (based on ResourceContext)\n *\n * const definition = useResourceDefinition();\n * console.log(definition);\n * // {\n * //   name: 'posts',\n * //   hasList: true,\n * //   hasEdit: true,\n * //   hasShow: true,\n * //   hasCreate: true,\n * //   options: {},\n * //   icon: PostIcon,\n * // }\n *\n * @example // Pass a resource prop to check a different resource definition\n *\n * const definition = useResourceDefinition({ resource: 'posts' });\n */\n\nexport var useResourceDefinition = function (props) {\n  var resource = useResourceContext(props);\n  var resourceDefinitions = useResourceDefinitions();\n\n  var _a = props || {},\n      hasCreate = _a.hasCreate,\n      hasEdit = _a.hasEdit,\n      hasList = _a.hasList,\n      hasShow = _a.hasShow;\n\n  var definition = useMemo(function () {\n    return defaults({}, {\n      hasCreate: hasCreate,\n      hasEdit: hasEdit,\n      hasList: hasList,\n      hasShow: hasShow\n    }, resourceDefinitions[resource]);\n  }, [resource, resourceDefinitions, hasCreate, hasEdit, hasList, hasShow]);\n  return definition;\n};","map":{"version":3,"names":["useMemo","defaults","useResourceDefinitions","useResourceContext","useResourceDefinition","props","resource","resourceDefinitions","_a","hasCreate","hasEdit","hasList","hasShow","definition"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/core/useResourceDefinition.js"],"sourcesContent":["import { useMemo } from 'react';\nimport defaults from 'lodash/defaults';\nimport { useResourceDefinitions } from './useResourceDefinitions';\nimport { useResourceContext } from './useResourceContext';\n/**\n * Hook to get the definition of a given resource\n *\n * @example // Get the current resource definition (based on ResourceContext)\n *\n * const definition = useResourceDefinition();\n * console.log(definition);\n * // {\n * //   name: 'posts',\n * //   hasList: true,\n * //   hasEdit: true,\n * //   hasShow: true,\n * //   hasCreate: true,\n * //   options: {},\n * //   icon: PostIcon,\n * // }\n *\n * @example // Pass a resource prop to check a different resource definition\n *\n * const definition = useResourceDefinition({ resource: 'posts' });\n */\nexport var useResourceDefinition = function (props) {\n    var resource = useResourceContext(props);\n    var resourceDefinitions = useResourceDefinitions();\n    var _a = props || {}, hasCreate = _a.hasCreate, hasEdit = _a.hasEdit, hasList = _a.hasList, hasShow = _a.hasShow;\n    var definition = useMemo(function () {\n        return defaults({}, {\n            hasCreate: hasCreate,\n            hasEdit: hasEdit,\n            hasList: hasList,\n            hasShow: hasShow,\n        }, resourceDefinitions[resource]);\n    }, [resource, resourceDefinitions, hasCreate, hasEdit, hasList, hasShow]);\n    return definition;\n};\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,qBAAqB,GAAG,UAAUC,KAAV,EAAiB;EAChD,IAAIC,QAAQ,GAAGH,kBAAkB,CAACE,KAAD,CAAjC;EACA,IAAIE,mBAAmB,GAAGL,sBAAsB,EAAhD;;EACA,IAAIM,EAAE,GAAGH,KAAK,IAAI,EAAlB;EAAA,IAAsBI,SAAS,GAAGD,EAAE,CAACC,SAArC;EAAA,IAAgDC,OAAO,GAAGF,EAAE,CAACE,OAA7D;EAAA,IAAsEC,OAAO,GAAGH,EAAE,CAACG,OAAnF;EAAA,IAA4FC,OAAO,GAAGJ,EAAE,CAACI,OAAzG;;EACA,IAAIC,UAAU,GAAGb,OAAO,CAAC,YAAY;IACjC,OAAOC,QAAQ,CAAC,EAAD,EAAK;MAChBQ,SAAS,EAAEA,SADK;MAEhBC,OAAO,EAAEA,OAFO;MAGhBC,OAAO,EAAEA,OAHO;MAIhBC,OAAO,EAAEA;IAJO,CAAL,EAKZL,mBAAmB,CAACD,QAAD,CALP,CAAf;EAMH,CAPuB,EAOrB,CAACA,QAAD,EAAWC,mBAAX,EAAgCE,SAAhC,EAA2CC,OAA3C,EAAoDC,OAApD,EAA6DC,OAA7D,CAPqB,CAAxB;EAQA,OAAOC,UAAP;AACH,CAbM"},"metadata":{},"sourceType":"module"}