{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Admin, Resource, fetchUtils, GET_LIST, CREATE, GET_ONE, UPDATE, defaultTheme, useTheme, DELETE } from \"react-admin\";\nimport SouthAmericaIcon from \"@mui/icons-material/SouthAmerica\";\nimport LocalPrintshopIcon from \"@mui/icons-material/LocalPrintshop\";\nimport RegionList from \"./components/RegionList\";\nimport RegionCreate from \"./components/RegionCreate\";\nimport axios from \"axios\";\nimport PrinterList from \"./components/Printers/PrinterList\";\nimport PrinterCreate from \"./components/Printers/PrinterCreate\";\nimport PlacesList from \"./components/Places/PlacesList\";\nimport PlaceCreate from \"./components/Places/PlacesCreate\";\nimport StorefrontIcon from \"@mui/icons-material/Storefront\";\nimport PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\nimport EmployeesListList from \"./components/Employees/EmployeesList\";\nimport EmployeesCreate from \"./components/Employees/EmployeesCreate\";\nimport EmployeesEdit from \"./components/Employees/EmployeesEdit\";\nimport PrintersEdit from \"./components/Printers/PrintersEdit\";\nimport ShiftScheduleListList from \"./components/ShiftSchedule/ShiftScheduleList\";\nimport ShiftScheduleListCreate from \"./components/ShiftSchedule/ShiftScheduleCreate\";\nimport WorkHistoryIcon from \"@mui/icons-material/WorkHistory\";\nimport PlacesEdit from \"./components/Places/PlacesEdit\";\nimport InventoryIcon from \"@mui/icons-material/Inventory\";\nimport PrintRoundedIcon from \"@mui/icons-material/PrintRounded\";\nimport AcUnitIcon from \"@mui/icons-material/AcUnit\";\nimport { URI } from \"./URLS\";\nimport { Button } from \"@mui/material\";\nimport MyLayout from \"./components/MyLayout/Layout\";\nimport { getCurrentDate } from \"./getDate\";\nimport InventoryList from \"./components/Inventory/InventoryList\";\nimport OnePrintInventoryList from \"./components/Inventory/OnePrintInventoryList\";\nimport ClosedShiftStatistic from \"./components/ShiftStatistic/ClosedShiftStatistic\";\nimport EmployeeGrid from \"./components/ShiftStatistic/EmployeeGrid\";\nimport AddReactionIcon from \"@mui/icons-material/AddReaction\";\nimport OpenShiftStatistic from \"./components/ShiftStatistic/OpenShiftStatistic\";\nimport { sort } from \"./Utils/sort\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setRegion } from \"./reducers/regionReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    region\n  } = useSelector(state => state.region);\n\n  const setBody = (resource, params) => {\n    switch (resource) {\n      case \"addPlace\":\n        return {\n          place: { ...params.data,\n            printerIds: [],\n            employeeIds: []\n          }\n        };\n\n      case \"addEmployee\":\n        return {\n          employee: { ...params.data\n          }\n        };\n\n      case \"addShiftSchedule\":\n        const param = {\n          placeId: params.data.placeId,\n          employeeId: params.data.employeeId,\n          startTime: getCurrentDate(params.data.startTime),\n          endTime: getCurrentDate(params.data.endTime),\n          softStartInMinutes: params.data.softStartInMinutes,\n          softEndInMinutes: params.data.softEndInMinutes,\n          shiftManager: params.data.shiftManager\n        };\n        return param;\n\n      default:\n        return params.data;\n    }\n  };\n\n  const getLink = (resource, params, body) => {\n    const date = getCurrentDate(new Date());\n    const curDate = new Date();\n    const dateInventoryLogs = curDate.setDate(curDate.getDate() - params.filter.day ? params.filter.day : -1);\n    console.log(\"lfkkdfl\", params);\n    console.log(date);\n\n    switch (resource) {\n      case \"getShiftSchedule\":\n        return `${URI}/${resource}?employeeId=admin@pixomnia.com&placeId=${params.filter.place}&fromTime=${date}`;\n\n      case \"getRegions\":\n        return `${URI}/getRegions?employeeId=admin@pixomnia.com`;\n\n      case \"getInventoryLogs\":\n        return `${URI}/${resource}?employeeId=admin@pixomnia.com&regionId=${params.filter.region ? params.filter.region : \"TX\"}&fromTime=${new Date(dateInventoryLogs).toISOString()}`;\n\n      case \"getPrinterInfoLogs\":\n        return `${URI}/${resource}?employeeId=admin@pixomnia.com&printerId=rePrinter01&fromTime=${new Date(dateInventoryLogs).toISOString()}`;\n\n      case \"getCloseShiftStatistics\":\n        return `${URI}/${resource}?employeeId=admin@pixomnia.com&regionId=${params.filter.region ? params.filter.region : \"TX\"}&fromTime=${new Date(dateInventoryLogs).toISOString()}`;\n\n      case \"getOpenShiftStatistics\":\n        return `${URI}/${resource}?employeeId=admin@pixomnia.com&regionId=${params.filter.region ? params.filter.region : \"TX\"}`;\n\n      default:\n        return `${URI}/${resource}?employeeId=admin@pixomnia&regionId=${params.filter.region ? params.filter.region : \"TX\"}`;\n    }\n  };\n\n  const getNewData = (resource, getListData, params) => {\n    let new_data;\n\n    switch (resource) {\n      case \"getPlacesWithInfo\":\n        new_data = getListData.data.map((i, index) => {\n          let printer = i.printerIds.map(it => {\n            return {\n              item: it\n            };\n          });\n          let employee = i.employeeIds.map(it => {\n            return {\n              item: it\n            };\n          });\n          const printFilter = printer.filter(el => el.item.length > 0);\n          const employeeFilter = employee.filter(el => el.item.length > 0);\n          return { ...i,\n            newList: printFilter,\n            id: i.regionId ? `${i.regionId}-id${index}` : index,\n            employee: employeeFilter\n          };\n        });\n        console.log(\"newData\", new_data);\n        return new_data;\n\n      default:\n        console.log(getListData);\n        new_data = getListData.data.map((i, index) => {\n          return { ...i,\n            id: i.regionId ? `${i.regionId}-id${index}` : index\n          };\n        });\n        console.log(\"newData\", new_data);\n        return new_data;\n    }\n  };\n\n  const test = async (type, resource, params) => {\n    const body = \"employeeId=admin@pixomnia&regionId=TX\";\n    console.log(\"type\", type);\n    console.log(\"resource\", resource);\n    console.log(\"params\", params);\n\n    switch (type) {\n      case GET_LIST:\n        const link = getLink(resource, params, body);\n        const getListData = await axios.get(link);\n        const newData = getNewData(resource, getListData, params);\n        let test;\n\n        if (params.pagination.perPage <= newData.length) {\n          test = newData.splice((params.pagination.page - 1) * params.pagination.perPage, params.pagination.perPage);\n        } else {\n          test = [...newData];\n        }\n\n        console.log(test);\n        const sortedList = sort(params.sort.field, params.sort.order, test);\n        return {\n          data: sortedList,\n          total: getListData.data.length\n        };\n\n      case CREATE:\n        console.log(params);\n        const createBody = setBody(resource, params);\n        const create = await axios.post(`${URI}/${resource}`, createBody);\n        const jsonParse = JSON.parse(create.data.responseJson);\n        const createData = {\n          id: 9,\n          ...jsonParse\n        };\n        return {\n          data: createData\n        };\n\n      case GET_ONE:\n        if (resource === \"getPlacesWithInfo\") {\n          const regionStr = params.id.split(\"-id\")[0];\n          await dispatch(setRegion(regionStr));\n          const list = await axios.get(`${URI}/${resource}?employeeId=admin@pixomnia&regionId=${regionStr}`);\n          let g = list.data.map((i, index) => {\n            let printer = i.printerIds.map(it => {\n              return {\n                item: it\n              };\n            });\n            let employee = i.employeeIds.map(it => {\n              return {\n                item: it\n              };\n            });\n            const printFilter = printer.filter(el => el.item.length > 0);\n            const employeeFilter = employee.filter(el => el.item.length > 0);\n            console.log(printFilter);\n            return { ...i,\n              newList: printFilter,\n              id: `${i.regionId}-id${index}`,\n              employee: employeeFilter\n            };\n          });\n          const filter = g.filter(item => item.id == params.id);\n          console.log(\"g\", g);\n          return await {\n            data: filter[0]\n          };\n        }\n\n        if (resource === \"getPrinters\") {\n          const regionStr = params.id.split(\"-id\")[0];\n          const curDate = new Date();\n          const dateInventoryLogs = curDate.setDate(curDate.getDate() - 1);\n          const printerList = await axios.get(`${URI}/${resource}?employeeId=admin@pixomnia&regionId=${regionStr}`);\n          console.log(\"printerList\", printerList);\n          const newArray = printerList.data.map((item, index) => {\n            return { ...item,\n              id: `${item.regionId}-id${index}`\n            };\n          });\n          console.log(newArray);\n          const printer = newArray.filter(el => String(el.id) === params.id);\n          console.log(printer);\n          const printerLog = await axios.get(`${URI}/getPrinterInfoLogs?employeeId=admin@pixomnia.com&printerId=${printer[0].printerId}&fromTime=${new Date(dateInventoryLogs).toISOString()}`);\n          let id = printerLog.data.map((item, index) => {\n            return { ...item,\n              id: index\n            };\n          });\n          const printers = {\n            id: 0,\n            printer: id\n          };\n          return {\n            data: printers\n          };\n        }\n\n        if (resource === \"getEmployees\") {\n          console.log(\"resource\", resource);\n          console.log(\"params\", params);\n          const regionStr = params.id.split(\"-id\")[0];\n          const employee = await axios.get(`${URI}/${resource}?employeeId=admin@pixomnia&regionId=${regionStr}`);\n          const newArray = employee.data.map((item, index) => {\n            return { ...item,\n              id: `${item.regionId}-id${index}`\n            };\n          });\n          console.log(\"array\", newArray);\n          const filterArray = newArray.filter(el => el.id == params.id);\n          return {\n            data: filterArray[0]\n          };\n        }\n\n      case UPDATE:\n        if (resource == \"getEmployees\") {\n          axios.post(`${URI}/updateEmployee`, {\n            employee: {\n              canUseImport: params.data.canUseImport,\n              email: params.data.email,\n              firstName: params.data.firstName,\n              lastName: params.data.lastName,\n              regionId: params.data.regionId\n            }\n          });\n        } else {\n          const regionStr = params.id.split(\"-id\")[0];\n          const udpList = await axios.get(`${URI}/${resource}?employeeId=admin@pixomnia&regionId=${regionStr}`);\n          let udp = udpList.data.map((i, index) => {\n            let printer = i.printerIds.map(it => {\n              return {\n                item: it\n              };\n            });\n            let employee = i.employeeIds.map(it => {\n              return {\n                item: it\n              };\n            });\n            const printFilters = printer.filter(el => el.item.length > 0);\n            const employeeFilters = employee.filter(el => el.item.length > 0);\n            return { ...i,\n              newList: printFilters,\n              id: `${i.regionId}-id${index}`,\n              employee: employeeFilters\n            };\n          });\n          console.log(udp);\n          const filters = udp.filter(item => item.id == params.id);\n          console.log(filters);\n          console.log(\"params\", params);\n          const newPrinters = params.data.newList.filter(e => filters[0].newList.findIndex(i => i.item == e.item) === -1);\n          const delPrinters = filters[0].newList.filter(e => params.data.newList.findIndex(i => i.item == e.item) === -1);\n          const newEmployee = params.data.employee.filter(e => filters[0].employee.findIndex(i => i.item == e.item) === -1);\n          const delEmployee = filters[0].employee.filter(e => params.data.employee.findIndex(i => i.item == e.item) === -1);\n\n          if (newPrinters.length > 0) {\n            for (const item of newPrinters) {\n              await axios.post(`${URI}/linkPrinterAndPlace`, {\n                placeId: params.data.placeId,\n                printerId: item.item\n              }).then(data => console.log(data));\n            }\n          }\n\n          if (delPrinters.length > 0) {\n            for (const item of delPrinters) {\n              await axios.post(`${URI}/unlinkPrinterFromPlace`, {\n                placeId: params.data.placeId,\n                printerId: item.item\n              }).then(data => console.log(data));\n            }\n          }\n\n          if (newEmployee.length > 0) {\n            for (const item of newEmployee) {\n              await axios.post(`${URI}/linkEmployeeAndPlace`, {\n                placeId: params.data.placeId,\n                employeeId: item.item\n              }).then(data => console.log(data));\n            }\n          }\n\n          if (delEmployee.length > 0) {\n            for (const item of delEmployee) {\n              await axios.post(`${URI}/unlinkEmployeeFromPlace`, {\n                placeId: params.data.placeId,\n                employeeId: item.item\n              }).then(data => console.log(data));\n            }\n          }\n        }\n\n        return {\n          data: params.data\n        };\n\n      case DELETE:\n        console.log(params);\n        axios.get(`${URI}/deleteShift?shiftScheduleId=${params.previousData.shiftScheduleId}`);\n        return {\n          data: params.data\n        };\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Admin, {\n    dataProvider: test,\n    layout: MyLayout,\n    children: [/*#__PURE__*/_jsxDEV(Resource, {\n      name: \"getRegions\",\n      list: RegionList,\n      create: RegionCreate,\n      icon: SouthAmericaIcon,\n      options: {\n        label: \"Regions\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Resource, {\n      name: \"getPrinters\",\n      list: PrinterList,\n      create: PrinterCreate,\n      icon: LocalPrintshopIcon,\n      options: {\n        label: \"Printers\"\n      },\n      show: OnePrintInventoryList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Resource, {\n      name: \"getPlacesWithInfo\",\n      list: PlacesList,\n      create: PlaceCreate,\n      icon: StorefrontIcon,\n      edit: PlacesEdit,\n      options: {\n        label: \"Places\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Resource, {\n      name: \"getEmployees\",\n      list: EmployeesListList,\n      create: EmployeesCreate,\n      edit: EmployeesEdit,\n      icon: PeopleAltIcon,\n      options: {\n        label: \"Employees\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Resource, {\n      name: \"getShiftSchedule\",\n      list: ShiftScheduleListList,\n      create: ShiftScheduleListCreate,\n      icon: WorkHistoryIcon,\n      options: {\n        label: \"Shift\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Resource, {\n      name: \"getInventoryLogs\",\n      list: InventoryList,\n      icon: InventoryIcon,\n      options: {\n        label: \"Inventory\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Resource, {\n      name: \"getCloseShiftStatistics\",\n      list: ClosedShiftStatistic,\n      icon: AcUnitIcon,\n      options: {\n        label: \"Closed shift statistic\"\n      },\n      show: EmployeeGrid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Resource, {\n      name: \"getOpenShiftStatistics\",\n      list: OpenShiftStatistic,\n      icon: AddReactionIcon,\n      options: {\n        label: \"Open shift statistic\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qq8040jub0osAxvoiPJA+LBY8No=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Admin","Resource","fetchUtils","GET_LIST","CREATE","GET_ONE","UPDATE","defaultTheme","useTheme","DELETE","SouthAmericaIcon","LocalPrintshopIcon","RegionList","RegionCreate","axios","PrinterList","PrinterCreate","PlacesList","PlaceCreate","StorefrontIcon","PeopleAltIcon","EmployeesListList","EmployeesCreate","EmployeesEdit","PrintersEdit","ShiftScheduleListList","ShiftScheduleListCreate","WorkHistoryIcon","PlacesEdit","InventoryIcon","PrintRoundedIcon","AcUnitIcon","URI","Button","MyLayout","getCurrentDate","InventoryList","OnePrintInventoryList","ClosedShiftStatistic","EmployeeGrid","AddReactionIcon","OpenShiftStatistic","sort","useDispatch","useSelector","setRegion","App","dispatch","region","state","setBody","resource","params","place","data","printerIds","employeeIds","employee","param","placeId","employeeId","startTime","endTime","softStartInMinutes","softEndInMinutes","shiftManager","getLink","body","date","Date","curDate","dateInventoryLogs","setDate","getDate","filter","day","console","log","toISOString","getNewData","getListData","new_data","map","i","index","printer","it","item","printFilter","el","length","employeeFilter","newList","id","regionId","test","type","link","get","newData","pagination","perPage","splice","page","sortedList","field","order","total","createBody","create","post","jsonParse","JSON","parse","responseJson","createData","regionStr","split","list","g","printerList","newArray","String","printerLog","printerId","printers","filterArray","canUseImport","email","firstName","lastName","udpList","udp","printFilters","employeeFilters","filters","newPrinters","e","findIndex","delPrinters","newEmployee","delEmployee","then","previousData","shiftScheduleId","label"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Admin,\n  Resource,\n  fetchUtils,\n  GET_LIST,\n  CREATE,\n  GET_ONE,\n  UPDATE,\n  defaultTheme,\n  useTheme,\n  DELETE,\n} from \"react-admin\";\nimport SouthAmericaIcon from \"@mui/icons-material/SouthAmerica\";\nimport LocalPrintshopIcon from \"@mui/icons-material/LocalPrintshop\";\nimport RegionList from \"./components/RegionList\";\nimport RegionCreate from \"./components/RegionCreate\";\nimport axios from \"axios\";\nimport PrinterList from \"./components/Printers/PrinterList\";\nimport PrinterCreate from \"./components/Printers/PrinterCreate\";\nimport PlacesList from \"./components/Places/PlacesList\";\nimport PlaceCreate from \"./components/Places/PlacesCreate\";\nimport StorefrontIcon from \"@mui/icons-material/Storefront\";\nimport PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\nimport EmployeesListList from \"./components/Employees/EmployeesList\";\nimport EmployeesCreate from \"./components/Employees/EmployeesCreate\";\nimport EmployeesEdit from \"./components/Employees/EmployeesEdit\";\nimport PrintersEdit from \"./components/Printers/PrintersEdit\";\nimport ShiftScheduleListList from \"./components/ShiftSchedule/ShiftScheduleList\";\nimport ShiftScheduleListCreate from \"./components/ShiftSchedule/ShiftScheduleCreate\";\nimport WorkHistoryIcon from \"@mui/icons-material/WorkHistory\";\nimport PlacesEdit from \"./components/Places/PlacesEdit\";\nimport InventoryIcon from \"@mui/icons-material/Inventory\";\nimport PrintRoundedIcon from \"@mui/icons-material/PrintRounded\";\nimport AcUnitIcon from \"@mui/icons-material/AcUnit\";\nimport { URI } from \"./URLS\";\n\nimport { Button } from \"@mui/material\";\nimport MyLayout from \"./components/MyLayout/Layout\";\nimport { getCurrentDate } from \"./getDate\";\nimport InventoryList from \"./components/Inventory/InventoryList\";\nimport OnePrintInventoryList from \"./components/Inventory/OnePrintInventoryList\";\nimport ClosedShiftStatistic from \"./components/ShiftStatistic/ClosedShiftStatistic\";\nimport EmployeeGrid from \"./components/ShiftStatistic/EmployeeGrid\";\nimport AddReactionIcon from \"@mui/icons-material/AddReaction\";\nimport OpenShiftStatistic from \"./components/ShiftStatistic/OpenShiftStatistic\";\nimport { sort } from \"./Utils/sort\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setRegion } from \"./reducers/regionReducer\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { region } = useSelector((state) => state.region);\n\n  const setBody = (resource, params) => {\n    switch (resource) {\n      case \"addPlace\":\n        return { place: { ...params.data, printerIds: [], employeeIds: [] } };\n      case \"addEmployee\":\n        return { employee: { ...params.data } };\n      case \"addShiftSchedule\":\n        const param = {\n          placeId: params.data.placeId,\n          employeeId: params.data.employeeId,\n          startTime: getCurrentDate(params.data.startTime),\n          endTime: getCurrentDate(params.data.endTime),\n          softStartInMinutes: params.data.softStartInMinutes,\n          softEndInMinutes: params.data.softEndInMinutes,\n          shiftManager: params.data.shiftManager,\n        };\n        return param;\n      default:\n        return params.data;\n    }\n  };\n\n  const getLink = (resource, params, body) => {\n    const date = getCurrentDate(new Date());\n    const curDate = new Date();\n\n    const dateInventoryLogs = curDate.setDate(\n      curDate.getDate() - params.filter.day ? params.filter.day : -1\n    );\n    console.log(\"lfkkdfl\", params);\n\n    console.log(date);\n    switch (resource) {\n      case \"getShiftSchedule\":\n        return `${URI}/${resource}?employeeId=admin@pixomnia.com&placeId=${params.filter.place}&fromTime=${date}`;\n      case \"getRegions\":\n        return `${URI}/getRegions?employeeId=admin@pixomnia.com`;\n      case \"getInventoryLogs\":\n        return `${URI}/${resource}?employeeId=admin@pixomnia.com&regionId=${\n          params.filter.region ? params.filter.region : \"TX\"\n        }&fromTime=${new Date(dateInventoryLogs).toISOString()}`;\n      case \"getPrinterInfoLogs\":\n        return `${URI}/${resource}?employeeId=admin@pixomnia.com&printerId=rePrinter01&fromTime=${new Date(\n          dateInventoryLogs\n        ).toISOString()}`;\n      case \"getCloseShiftStatistics\":\n        return `${URI}/${resource}?employeeId=admin@pixomnia.com&regionId=${\n          params.filter.region ? params.filter.region : \"TX\"\n        }&fromTime=${new Date(dateInventoryLogs).toISOString()}`;\n      case \"getOpenShiftStatistics\":\n        return `${URI}/${resource}?employeeId=admin@pixomnia.com&regionId=${\n          params.filter.region ? params.filter.region : \"TX\"\n        }`;\n      default:\n        return `${URI}/${resource}?employeeId=admin@pixomnia&regionId=${\n          params.filter.region ? params.filter.region : \"TX\"\n        }`;\n    }\n  };\n  const getNewData = (resource, getListData, params) => {\n    let new_data;\n    switch (resource) {\n      case \"getPlacesWithInfo\":\n        new_data = getListData.data.map((i, index) => {\n          let printer = i.printerIds.map((it) => {\n            return { item: it };\n          });\n          let employee = i.employeeIds.map((it) => {\n            return { item: it };\n          });\n          const printFilter = printer.filter((el) => el.item.length > 0);\n          const employeeFilter = employee.filter((el) => el.item.length > 0);\n\n          return {\n            ...i,\n            newList: printFilter,\n            id: i.regionId ? `${i.regionId}-id${index}` : index,\n            employee: employeeFilter,\n          };\n        });\n        console.log(\"newData\", new_data);\n        return new_data;\n\n      default:\n        console.log(getListData);\n        new_data = getListData.data.map((i, index) => {\n          return { ...i, id: i.regionId ? `${i.regionId}-id${index}` : index };\n        });\n        console.log(\"newData\", new_data);\n        return new_data;\n    }\n  };\n\n  const test = async (type, resource, params) => {\n    const body = \"employeeId=admin@pixomnia&regionId=TX\";\n    console.log(\"type\", type);\n    console.log(\"resource\", resource);\n    console.log(\"params\", params);\n    switch (type) {\n      case GET_LIST:\n        const link = getLink(resource, params, body);\n        const getListData = await axios.get(link);\n        const newData = getNewData(resource, getListData, params);\n        let test;\n        if (params.pagination.perPage <= newData.length) {\n          test = newData.splice(\n            (params.pagination.page - 1) * params.pagination.perPage,\n            params.pagination.perPage\n          );\n        } else {\n          test = [...newData];\n        }\n        console.log(test);\n        const sortedList = sort(params.sort.field, params.sort.order, test);\n        return { data: sortedList, total: getListData.data.length };\n      case CREATE:\n        console.log(params);\n        const createBody = setBody(resource, params);\n        const create = await axios.post(`${URI}/${resource}`, createBody);\n        const jsonParse = JSON.parse(create.data.responseJson);\n        const createData = { id: 9, ...jsonParse };\n        return { data: createData };\n      case GET_ONE:\n        if (resource === \"getPlacesWithInfo\") {\n          const regionStr = params.id.split(\"-id\")[0];\n          await dispatch(setRegion(regionStr));\n          const list = await axios.get(\n            `${URI}/${resource}?employeeId=admin@pixomnia&regionId=${regionStr}`\n          );\n          let g = list.data.map((i, index) => {\n            let printer = i.printerIds.map((it) => {\n              return { item: it };\n            });\n\n            let employee = i.employeeIds.map((it) => {\n              return { item: it };\n            });\n            const printFilter = printer.filter((el) => el.item.length > 0);\n            const employeeFilter = employee.filter((el) => el.item.length > 0);\n            console.log(printFilter);\n            return {\n              ...i,\n              newList: printFilter,\n              id: `${i.regionId}-id${index}`,\n              employee: employeeFilter,\n            };\n          });\n          const filter = g.filter((item) => item.id == params.id);\n          console.log(\"g\", g);\n          return await { data: filter[0] };\n        }\n        if (resource === \"getPrinters\") {\n          const regionStr = params.id.split(\"-id\")[0];\n\n          const curDate = new Date();\n          const dateInventoryLogs = curDate.setDate(curDate.getDate() - 1);\n          const printerList = await axios.get(\n            `${URI}/${resource}?employeeId=admin@pixomnia&regionId=${regionStr}`\n          );\n          console.log(\"printerList\", printerList);\n          const newArray = printerList.data.map((item, index) => {\n            return { ...item, id: `${item.regionId}-id${index}` };\n          });\n          console.log(newArray);\n\n          const printer = newArray.filter((el) => String(el.id) === params.id);\n          console.log(printer);\n          const printerLog = await axios.get(\n            `${URI}/getPrinterInfoLogs?employeeId=admin@pixomnia.com&printerId=${\n              printer[0].printerId\n            }&fromTime=${new Date(dateInventoryLogs).toISOString()}`\n          );\n          let id = printerLog.data.map((item, index) => {\n            return { ...item, id: index };\n          });\n          const printers = { id: 0, printer: id };\n          return { data: printers };\n        }\n        if (resource === \"getEmployees\") {\n          console.log(\"resource\", resource);\n          console.log(\"params\", params);\n          const regionStr = params.id.split(\"-id\")[0];\n          const employee = await axios.get(\n            `${URI}/${resource}?employeeId=admin@pixomnia&regionId=${regionStr}`\n          );\n          const newArray = employee.data.map((item, index) => {\n            return { ...item, id: `${item.regionId}-id${index}` };\n          });\n          console.log(\"array\", newArray);\n          const filterArray = newArray.filter((el) => el.id == params.id);\n          return { data: filterArray[0] };\n        }\n\n      case UPDATE:\n        if (resource == \"getEmployees\") {\n          axios.post(`${URI}/updateEmployee`, {\n            employee: {\n              canUseImport: params.data.canUseImport,\n              email: params.data.email,\n              firstName: params.data.firstName,\n              lastName: params.data.lastName,\n              regionId: params.data.regionId,\n            },\n          });\n        } else {\n          const regionStr = params.id.split(\"-id\")[0];\n          const udpList = await axios.get(\n            `${URI}/${resource}?employeeId=admin@pixomnia&regionId=${regionStr}`\n          );\n          let udp = udpList.data.map((i, index) => {\n            let printer = i.printerIds.map((it) => {\n              return { item: it };\n            });\n\n            let employee = i.employeeIds.map((it) => {\n              return { item: it };\n            });\n            const printFilters = printer.filter((el) => el.item.length > 0);\n            const employeeFilters = employee.filter((el) => el.item.length > 0);\n\n            return {\n              ...i,\n              newList: printFilters,\n              id: `${i.regionId}-id${index}`,\n              employee: employeeFilters,\n            };\n          });\n          console.log(udp);\n          const filters = udp.filter((item) => item.id == params.id);\n          console.log(filters);\n          console.log(\"params\", params);\n          const newPrinters = params.data.newList.filter(\n            (e) => filters[0].newList.findIndex((i) => i.item == e.item) === -1\n          );\n          const delPrinters = filters[0].newList.filter(\n            (e) => params.data.newList.findIndex((i) => i.item == e.item) === -1\n          );\n          const newEmployee = params.data.employee.filter(\n            (e) => filters[0].employee.findIndex((i) => i.item == e.item) === -1\n          );\n          const delEmployee = filters[0].employee.filter(\n            (e) =>\n              params.data.employee.findIndex((i) => i.item == e.item) === -1\n          );\n          if (newPrinters.length > 0) {\n            for (const item of newPrinters) {\n              await axios\n                .post(`${URI}/linkPrinterAndPlace`, {\n                  placeId: params.data.placeId,\n                  printerId: item.item,\n                })\n                .then((data) => console.log(data));\n            }\n          }\n          if (delPrinters.length > 0) {\n            for (const item of delPrinters) {\n              await axios\n                .post(`${URI}/unlinkPrinterFromPlace`, {\n                  placeId: params.data.placeId,\n                  printerId: item.item,\n                })\n                .then((data) => console.log(data));\n            }\n          }\n          if (newEmployee.length > 0) {\n            for (const item of newEmployee) {\n              await axios\n                .post(`${URI}/linkEmployeeAndPlace`, {\n                  placeId: params.data.placeId,\n                  employeeId: item.item,\n                })\n                .then((data) => console.log(data));\n            }\n          }\n          if (delEmployee.length > 0) {\n            for (const item of delEmployee) {\n              await axios\n                .post(`${URI}/unlinkEmployeeFromPlace`, {\n                  placeId: params.data.placeId,\n                  employeeId: item.item,\n                })\n                .then((data) => console.log(data));\n            }\n          }\n        }\n        return { data: params.data };\n\n      case DELETE:\n        console.log(params);\n        axios.get(\n          `${URI}/deleteShift?shiftScheduleId=${params.previousData.shiftScheduleId}`\n        );\n        return { data: params.data };\n    }\n  };\n\n  return (\n    <Admin dataProvider={test} layout={MyLayout}>\n      <Resource\n        name=\"getRegions\"\n        list={RegionList}\n        create={RegionCreate}\n        icon={SouthAmericaIcon}\n        options={{ label: \"Regions\" }}\n      />\n      <Resource\n        name=\"getPrinters\"\n        list={PrinterList}\n        create={PrinterCreate}\n        icon={LocalPrintshopIcon}\n        options={{ label: \"Printers\" }}\n        show={OnePrintInventoryList}\n      />\n      <Resource\n        name=\"getPlacesWithInfo\"\n        list={PlacesList}\n        create={PlaceCreate}\n        icon={StorefrontIcon}\n        edit={PlacesEdit}\n        options={{ label: \"Places\" }}\n      />\n      <Resource\n        name=\"getEmployees\"\n        list={EmployeesListList}\n        create={EmployeesCreate}\n        edit={EmployeesEdit}\n        icon={PeopleAltIcon}\n        options={{ label: \"Employees\" }}\n      />\n      <Resource\n        name=\"getShiftSchedule\"\n        list={ShiftScheduleListList}\n        create={ShiftScheduleListCreate}\n        icon={WorkHistoryIcon}\n        options={{ label: \"Shift\" }}\n      />\n      <Resource\n        name=\"getInventoryLogs\"\n        list={InventoryList}\n        icon={InventoryIcon}\n        options={{ label: \"Inventory\" }}\n      />\n      <Resource\n        name=\"getCloseShiftStatistics\"\n        list={ClosedShiftStatistic}\n        icon={AcUnitIcon}\n        options={{ label: \"Closed shift statistic\" }}\n        show={EmployeeGrid}\n      />\n      <Resource\n        name=\"getOpenShiftStatistics\"\n        list={OpenShiftStatistic}\n        icon={AddReactionIcon}\n        options={{ label: \"Open shift statistic\" }}\n      />\n    </Admin>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}