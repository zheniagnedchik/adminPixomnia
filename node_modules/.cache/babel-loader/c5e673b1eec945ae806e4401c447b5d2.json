{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport mediaQuery from 'css-mediaquery';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n/**\n * Test utility to simulate a device form factor for server-side mediaQueries\n *\n * Do not use inside a browser.\n *\n * @example\n *\n * <DeviceTestWrapper width=\"sm\">\n *     <MyResponsiveComponent />\n * <DeviceTestWrapper>\n */\n\nexport var DeviceTestWrapper = function (_a) {\n  var _b = _a.width,\n      width = _b === void 0 ? 'md' : _b,\n      children = _a.children;\n  var theme = createTheme(); // Use https://github.com/ericf/css-mediaquery as polyfill.\n\n  var ssrMatchMedia = function (query) {\n    return {\n      matches: mediaQuery.match(query, {\n        // The estimated CSS width of the browser.\n        // For the sake of this demo, we are using a fixed value.\n        // In production, you can look into client-hint https://caniuse.com/#search=client%20hint\n        // or user-agent resolution.\n        width: theme.breakpoints.values[width]\n      })\n    };\n  };\n\n  return React.createElement(ThemeProvider, {\n    theme: __assign(__assign({}, theme), {\n      components: {\n        MuiUseMediaQuery: {\n          defaultProps: {\n            ssrMatchMedia: ssrMatchMedia,\n            matchMedia: ssrMatchMedia\n          }\n        }\n      }\n    })\n  }, children);\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","mediaQuery","createTheme","ThemeProvider","DeviceTestWrapper","_a","_b","width","children","theme","ssrMatchMedia","query","matches","match","breakpoints","values","createElement","components","MuiUseMediaQuery","defaultProps","matchMedia"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-ui-materialui/dist/esm/layout/DeviceTestWrapper.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport mediaQuery from 'css-mediaquery';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n/**\n * Test utility to simulate a device form factor for server-side mediaQueries\n *\n * Do not use inside a browser.\n *\n * @example\n *\n * <DeviceTestWrapper width=\"sm\">\n *     <MyResponsiveComponent />\n * <DeviceTestWrapper>\n */\nexport var DeviceTestWrapper = function (_a) {\n    var _b = _a.width, width = _b === void 0 ? 'md' : _b, children = _a.children;\n    var theme = createTheme();\n    // Use https://github.com/ericf/css-mediaquery as polyfill.\n    var ssrMatchMedia = function (query) { return ({\n        matches: mediaQuery.match(query, {\n            // The estimated CSS width of the browser.\n            // For the sake of this demo, we are using a fixed value.\n            // In production, you can look into client-hint https://caniuse.com/#search=client%20hint\n            // or user-agent resolution.\n            width: theme.breakpoints.values[width],\n        }),\n    }); };\n    return (React.createElement(ThemeProvider, { theme: __assign(__assign({}, theme), { components: {\n                MuiUseMediaQuery: {\n                    defaultProps: {\n                        ssrMatchMedia: ssrMatchMedia,\n                        matchMedia: ssrMatchMedia,\n                    },\n                },\n            } }) }, children));\n};\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;IACpC,KAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;MACA,KAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IACP;;IACD,OAAON,CAAP;EACH,CAPD;;EAQA,OAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKO,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,sBAA3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,iBAAiB,GAAG,UAAUC,EAAV,EAAc;EACzC,IAAIC,EAAE,GAAGD,EAAE,CAACE,KAAZ;EAAA,IAAmBA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAlD;EAAA,IAAsDE,QAAQ,GAAGH,EAAE,CAACG,QAApE;EACA,IAAIC,KAAK,GAAGP,WAAW,EAAvB,CAFyC,CAGzC;;EACA,IAAIQ,aAAa,GAAG,UAAUC,KAAV,EAAiB;IAAE,OAAQ;MAC3CC,OAAO,EAAEX,UAAU,CAACY,KAAX,CAAiBF,KAAjB,EAAwB;QAC7B;QACA;QACA;QACA;QACAJ,KAAK,EAAEE,KAAK,CAACK,WAAN,CAAkBC,MAAlB,CAAyBR,KAAzB;MALsB,CAAxB;IADkC,CAAR;EAQlC,CARL;;EASA,OAAQP,KAAK,CAACgB,aAAN,CAAoBb,aAApB,EAAmC;IAAEM,KAAK,EAAEvB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKuB,KAAL,CAAT,EAAsB;MAAEQ,UAAU,EAAE;QACpFC,gBAAgB,EAAE;UACdC,YAAY,EAAE;YACVT,aAAa,EAAEA,aADL;YAEVU,UAAU,EAAEV;UAFF;QADA;MADkE;IAAd,CAAtB;EAAjB,CAAnC,EAOQF,QAPR,CAAR;AAQH,CArBM"},"metadata":{},"sourceType":"module"}