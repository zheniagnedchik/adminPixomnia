{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { useRef } from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { useDataProvider } from './useDataProvider';\n/**\n * Get a callback to call the dataProvider.create() method, the result and the loading state.\n *\n * @param {string} resource\n * @param {Params} params The create parameters { data }\n * @param {Object} options Options object to pass to the queryClient.\n * May include side effects to be executed upon success or failure, e.g. { onSuccess: () => { refresh(); } }\n *\n * @typedef Params\n * @prop params.data The record to create, e.g. { title: 'hello, world' }\n *\n * @returns The current mutation state. Destructure as [create, { data, error, isLoading }].\n *\n * The return value updates according to the request state:\n *\n * - initial: [create, { isLoading: false, isIdle: true }]\n * - start:   [create, { isLoading: true }]\n * - success: [create, { data: [data from response], isLoading: false, isSuccess: true }]\n * - error:   [create, { error: [error from response], isLoading: false, isError: true }]\n *\n * The create() function must be called with a resource and a parameter object: create(resource, { data, meta }, options)\n *\n * This hook uses react-query useMutation under the hood.\n * This means the state object contains mutate, isIdle, reset and other react-query methods.\n *\n * @see https://react-query.tanstack.com/reference/useMutation\n *\n * @example // set params when calling the create callback\n *\n * import { useCreate } from 'react-admin';\n *\n * const LikeButton = ({ record }) => {\n *     const like = { postId: record.id };\n *     const [create, { isLoading, error }] = useCreate();\n *     const handleClick = () => {\n *         create('likes', { data: like })\n *     }\n *     if (error) { return <p>ERROR</p>; }\n *     return <button disabled={isLoading} onClick={handleClick}>Like</button>;\n * };\n *\n * @example // set params when calling the hook\n *\n * import { useCreate } from 'react-admin';\n *\n * const LikeButton = ({ record }) => {\n *     const like = { postId: record.id };\n *     const [create, { isLoading, error }] = useCreate('likes', { data: like });\n *     if (error) { return <p>ERROR</p>; }\n *     return <button disabled={isLoading} onClick={() => create()}>Like</button>;\n * };\n *\n * @example // TypeScript\n * const [create, { data }] = useCreate<Product>('products', { data: product });\n *                    \\-- data is Product\n */\n\nexport var useCreate = function (resource, params, options) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var dataProvider = useDataProvider();\n  var queryClient = useQueryClient();\n  var paramsRef = useRef(params);\n  var mutation = useMutation(function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.resource,\n        callTimeResource = _c === void 0 ? resource : _c,\n        _d = _b.data,\n        callTimeData = _d === void 0 ? paramsRef.current.data : _d,\n        _e = _b.meta,\n        callTimeMeta = _e === void 0 ? paramsRef.current.meta : _e;\n\n    return dataProvider.create(callTimeResource, {\n      data: callTimeData,\n      meta: callTimeMeta\n    }).then(function (_a) {\n      var data = _a.data;\n      return data;\n    });\n  }, __assign(__assign({}, options), {\n    onSuccess: function (data, variables, context) {\n      if (variables === void 0) {\n        variables = {};\n      }\n\n      var _a = variables.resource,\n          callTimeResource = _a === void 0 ? resource : _a;\n      queryClient.setQueryData([callTimeResource, 'getOne', {\n        id: String(data.id)\n      }], data);\n\n      if (options.onSuccess) {\n        options.onSuccess(data, variables, context);\n      } // call-time success callback is executed by react-query\n\n    }\n  }));\n\n  var create = function (callTimeResource, callTimeParams, createOptions) {\n    if (callTimeResource === void 0) {\n      callTimeResource = resource;\n    }\n\n    if (callTimeParams === void 0) {\n      callTimeParams = {};\n    }\n\n    if (createOptions === void 0) {\n      createOptions = {};\n    }\n\n    var returnPromise = createOptions.returnPromise,\n        reactCreateOptions = __rest(createOptions, [\"returnPromise\"]);\n\n    if (returnPromise) {\n      return mutation.mutateAsync(__assign({\n        resource: callTimeResource\n      }, callTimeParams), createOptions);\n    }\n\n    mutation.mutate(__assign({\n      resource: callTimeResource\n    }, callTimeParams), reactCreateOptions);\n  };\n\n  return [create, mutation];\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","useRef","useMutation","useQueryClient","useDataProvider","useCreate","resource","params","options","dataProvider","queryClient","paramsRef","mutation","_a","_b","_c","callTimeResource","_d","data","callTimeData","current","_e","meta","callTimeMeta","create","then","onSuccess","variables","context","setQueryData","id","String","callTimeParams","createOptions","returnPromise","reactCreateOptions","mutateAsync","mutate"],"sources":["/Users/evgenijgnedcik/Documents/GitHub/adminPixomnia/node_modules/ra-core/dist/esm/dataProvider/useCreate.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { useRef } from 'react';\nimport { useMutation, useQueryClient, } from 'react-query';\nimport { useDataProvider } from './useDataProvider';\n/**\n * Get a callback to call the dataProvider.create() method, the result and the loading state.\n *\n * @param {string} resource\n * @param {Params} params The create parameters { data }\n * @param {Object} options Options object to pass to the queryClient.\n * May include side effects to be executed upon success or failure, e.g. { onSuccess: () => { refresh(); } }\n *\n * @typedef Params\n * @prop params.data The record to create, e.g. { title: 'hello, world' }\n *\n * @returns The current mutation state. Destructure as [create, { data, error, isLoading }].\n *\n * The return value updates according to the request state:\n *\n * - initial: [create, { isLoading: false, isIdle: true }]\n * - start:   [create, { isLoading: true }]\n * - success: [create, { data: [data from response], isLoading: false, isSuccess: true }]\n * - error:   [create, { error: [error from response], isLoading: false, isError: true }]\n *\n * The create() function must be called with a resource and a parameter object: create(resource, { data, meta }, options)\n *\n * This hook uses react-query useMutation under the hood.\n * This means the state object contains mutate, isIdle, reset and other react-query methods.\n *\n * @see https://react-query.tanstack.com/reference/useMutation\n *\n * @example // set params when calling the create callback\n *\n * import { useCreate } from 'react-admin';\n *\n * const LikeButton = ({ record }) => {\n *     const like = { postId: record.id };\n *     const [create, { isLoading, error }] = useCreate();\n *     const handleClick = () => {\n *         create('likes', { data: like })\n *     }\n *     if (error) { return <p>ERROR</p>; }\n *     return <button disabled={isLoading} onClick={handleClick}>Like</button>;\n * };\n *\n * @example // set params when calling the hook\n *\n * import { useCreate } from 'react-admin';\n *\n * const LikeButton = ({ record }) => {\n *     const like = { postId: record.id };\n *     const [create, { isLoading, error }] = useCreate('likes', { data: like });\n *     if (error) { return <p>ERROR</p>; }\n *     return <button disabled={isLoading} onClick={() => create()}>Like</button>;\n * };\n *\n * @example // TypeScript\n * const [create, { data }] = useCreate<Product>('products', { data: product });\n *                    \\-- data is Product\n */\nexport var useCreate = function (resource, params, options) {\n    if (params === void 0) { params = {}; }\n    if (options === void 0) { options = {}; }\n    var dataProvider = useDataProvider();\n    var queryClient = useQueryClient();\n    var paramsRef = useRef(params);\n    var mutation = useMutation(function (_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.resource, callTimeResource = _c === void 0 ? resource : _c, _d = _b.data, callTimeData = _d === void 0 ? paramsRef.current.data : _d, _e = _b.meta, callTimeMeta = _e === void 0 ? paramsRef.current.meta : _e;\n        return dataProvider\n            .create(callTimeResource, {\n            data: callTimeData,\n            meta: callTimeMeta,\n        })\n            .then(function (_a) {\n            var data = _a.data;\n            return data;\n        });\n    }, __assign(__assign({}, options), { onSuccess: function (data, variables, context) {\n            if (variables === void 0) { variables = {}; }\n            var _a = variables.resource, callTimeResource = _a === void 0 ? resource : _a;\n            queryClient.setQueryData([callTimeResource, 'getOne', { id: String(data.id) }], data);\n            if (options.onSuccess) {\n                options.onSuccess(data, variables, context);\n            }\n            // call-time success callback is executed by react-query\n        } }));\n    var create = function (callTimeResource, callTimeParams, createOptions) {\n        if (callTimeResource === void 0) { callTimeResource = resource; }\n        if (callTimeParams === void 0) { callTimeParams = {}; }\n        if (createOptions === void 0) { createOptions = {}; }\n        var returnPromise = createOptions.returnPromise, reactCreateOptions = __rest(createOptions, [\"returnPromise\"]);\n        if (returnPromise) {\n            return mutation.mutateAsync(__assign({ resource: callTimeResource }, callTimeParams), createOptions);\n        }\n        mutation.mutate(__assign({ resource: callTimeResource }, callTimeParams), reactCreateOptions);\n    };\n    return [create, mutation];\n};\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;IACpC,KAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;MACA,KAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IACP;;IACD,OAAON,CAAP;EACH,CAPD;;EAQA,OAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUV,CAAV,EAAaW,CAAb,EAAgB;EAClD,IAAIZ,CAAC,GAAG,EAAR;;EACA,KAAK,IAAIM,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,KAA8CM,CAAC,CAACC,OAAF,CAAUP,CAAV,IAAe,CAAjE,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;;EACJ,IAAIL,CAAC,IAAI,IAAL,IAAa,OAAOH,MAAM,CAACgB,qBAAd,KAAwC,UAAzD,EACI,KAAK,IAAIZ,CAAC,GAAG,CAAR,EAAWI,CAAC,GAAGR,MAAM,CAACgB,qBAAP,CAA6Bb,CAA7B,CAApB,EAAqDC,CAAC,GAAGI,CAAC,CAACD,MAA3D,EAAmEH,CAAC,EAApE,EAAwE;IACpE,IAAIU,CAAC,CAACC,OAAF,CAAUP,CAAC,CAACJ,CAAD,CAAX,IAAkB,CAAlB,IAAuBJ,MAAM,CAACS,SAAP,CAAiBQ,oBAAjB,CAAsCN,IAAtC,CAA2CR,CAA3C,EAA8CK,CAAC,CAACJ,CAAD,CAA/C,CAA3B,EACIF,CAAC,CAACM,CAAC,CAACJ,CAAD,CAAF,CAAD,GAAUD,CAAC,CAACK,CAAC,CAACJ,CAAD,CAAF,CAAX;EACP;EACL,OAAOF,CAAP;AACH,CAVD;;AAWA,SAASgB,MAAT,QAAuB,OAAvB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA6C,aAA7C;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,SAAS,GAAG,UAAUC,QAAV,EAAoBC,MAApB,EAA4BC,OAA5B,EAAqC;EACxD,IAAID,MAAM,KAAK,KAAK,CAApB,EAAuB;IAAEA,MAAM,GAAG,EAAT;EAAc;;EACvC,IAAIC,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAG,EAAV;EAAe;;EACzC,IAAIC,YAAY,GAAGL,eAAe,EAAlC;EACA,IAAIM,WAAW,GAAGP,cAAc,EAAhC;EACA,IAAIQ,SAAS,GAAGV,MAAM,CAACM,MAAD,CAAtB;EACA,IAAIK,QAAQ,GAAGV,WAAW,CAAC,UAAUW,EAAV,EAAc;IACrC,IAAIC,EAAE,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA9B;IAAA,IAAkCE,EAAE,GAAGD,EAAE,CAACR,QAA1C;IAAA,IAAoDU,gBAAgB,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgBT,QAAhB,GAA2BS,EAAlG;IAAA,IAAsGE,EAAE,GAAGH,EAAE,CAACI,IAA9G;IAAA,IAAoHC,YAAY,GAAGF,EAAE,KAAK,KAAK,CAAZ,GAAgBN,SAAS,CAACS,OAAV,CAAkBF,IAAlC,GAAyCD,EAA5K;IAAA,IAAgLI,EAAE,GAAGP,EAAE,CAACQ,IAAxL;IAAA,IAA8LC,YAAY,GAAGF,EAAE,KAAK,KAAK,CAAZ,GAAgBV,SAAS,CAACS,OAAV,CAAkBE,IAAlC,GAAyCD,EAAtP;;IACA,OAAOZ,YAAY,CACde,MADE,CACKR,gBADL,EACuB;MAC1BE,IAAI,EAAEC,YADoB;MAE1BG,IAAI,EAAEC;IAFoB,CADvB,EAKFE,IALE,CAKG,UAAUZ,EAAV,EAAc;MACpB,IAAIK,IAAI,GAAGL,EAAE,CAACK,IAAd;MACA,OAAOA,IAAP;IACH,CARM,CAAP;EASH,CAXyB,EAWvBpC,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK0B,OAAL,CAAT,EAAwB;IAAEkB,SAAS,EAAE,UAAUR,IAAV,EAAgBS,SAAhB,EAA2BC,OAA3B,EAAoC;MAC5E,IAAID,SAAS,KAAK,KAAK,CAAvB,EAA0B;QAAEA,SAAS,GAAG,EAAZ;MAAiB;;MAC7C,IAAId,EAAE,GAAGc,SAAS,CAACrB,QAAnB;MAAA,IAA6BU,gBAAgB,GAAGH,EAAE,KAAK,KAAK,CAAZ,GAAgBP,QAAhB,GAA2BO,EAA3E;MACAH,WAAW,CAACmB,YAAZ,CAAyB,CAACb,gBAAD,EAAmB,QAAnB,EAA6B;QAAEc,EAAE,EAAEC,MAAM,CAACb,IAAI,CAACY,EAAN;MAAZ,CAA7B,CAAzB,EAAgFZ,IAAhF;;MACA,IAAIV,OAAO,CAACkB,SAAZ,EAAuB;QACnBlB,OAAO,CAACkB,SAAR,CAAkBR,IAAlB,EAAwBS,SAAxB,EAAmCC,OAAnC;MACH,CAN2E,CAO5E;;IACH;EAR8B,CAAxB,CAXe,CAA1B;;EAoBA,IAAIJ,MAAM,GAAG,UAAUR,gBAAV,EAA4BgB,cAA5B,EAA4CC,aAA5C,EAA2D;IACpE,IAAIjB,gBAAgB,KAAK,KAAK,CAA9B,EAAiC;MAAEA,gBAAgB,GAAGV,QAAnB;IAA8B;;IACjE,IAAI0B,cAAc,KAAK,KAAK,CAA5B,EAA+B;MAAEA,cAAc,GAAG,EAAjB;IAAsB;;IACvD,IAAIC,aAAa,KAAK,KAAK,CAA3B,EAA8B;MAAEA,aAAa,GAAG,EAAhB;IAAqB;;IACrD,IAAIC,aAAa,GAAGD,aAAa,CAACC,aAAlC;IAAA,IAAiDC,kBAAkB,GAAGvC,MAAM,CAACqC,aAAD,EAAgB,CAAC,eAAD,CAAhB,CAA5E;;IACA,IAAIC,aAAJ,EAAmB;MACf,OAAOtB,QAAQ,CAACwB,WAAT,CAAqBtD,QAAQ,CAAC;QAAEwB,QAAQ,EAAEU;MAAZ,CAAD,EAAiCgB,cAAjC,CAA7B,EAA+EC,aAA/E,CAAP;IACH;;IACDrB,QAAQ,CAACyB,MAAT,CAAgBvD,QAAQ,CAAC;MAAEwB,QAAQ,EAAEU;IAAZ,CAAD,EAAiCgB,cAAjC,CAAxB,EAA0EG,kBAA1E;EACH,CATD;;EAUA,OAAO,CAACX,MAAD,EAASZ,QAAT,CAAP;AACH,CArCM"},"metadata":{},"sourceType":"module"}